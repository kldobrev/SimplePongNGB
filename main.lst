                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _action_cpu
                                     13 	.globl _rand
                                     14 	.globl _initrand
                                     15 	.globl _set_sprite_data
                                     16 	.globl _set_bkg_tiles
                                     17 	.globl _set_bkg_data
                                     18 	.globl _wait_vbl_done
                                     19 	.globl _joypad
                                     20 	.globl _roundcnt
                                     21 	.globl _roundlimit
                                     22 	.globl _speedind
                                     23 	.globl _paddlehitscnt
                                     24 	.globl _chspeedflgdir
                                     25 	.globl _autospeedflg
                                     26 	.globl _exitgameflg
                                     27 	.globl _cpuscore
                                     28 	.globl _pl1score
                                     29 	.globl _randindy
                                     30 	.globl _randindx
                                     31 	.globl _itr
                                     32 	.globl _difficulty
                                     33 	.globl _tileind
                                     34 	.globl _ball
                                     35 	.globl _pdlcpu
                                     36 	.globl _pdlpl1
                                     37 	.globl _padinity
                                     38 	.globl _padsectors
                                     39 	.globl _padspeed
                                     40 	.globl _padheight
                                     41 	.globl _ballmvframe
                                     42 	.globl _framecnt
                                     43 	.globl _speedchframes
                                     44 	.globl _bkgborderdown
                                     45 	.globl _bkgborderup
                                     46 	.globl _stspeedpooly
                                     47 	.globl _stspeedpoolx
                                     48 	.globl _difficulty_px
                                     49 	.globl _startballposxy
                                     50 	.globl _pongspritetiles
                                     51 	.globl _ponggamemap
                                     52 	.globl _pongbkgtiles
                                     53 	.globl _set_pad_sectors
                                     54 	.globl _hits_walls
                                     55 	.globl _hits_paddle
                                     56 	.globl _get_bounce_off_dir_y
                                     57 	.globl _move_ball
                                     58 	.globl _init_paddle
                                     59 	.globl _scroll_paddle_tiles
                                     60 	.globl _move_paddle
                                     61 	.globl _auto_speed_adj
                                     62 	.globl _init_game
                                     63 	.globl _prep_next_round
                                     64 	.globl _begin_round
                                     65 	.globl _is_round_over
                                     66 	.globl _default_settings
                                     67 	.globl _start_game
                                     68 ;--------------------------------------------------------
                                     69 ; special function registers
                                     70 ;--------------------------------------------------------
                                     71 ;--------------------------------------------------------
                                     72 ; ram data
                                     73 ;--------------------------------------------------------
                                     74 	.area _DATA
      000000                         75 _framecnt::
      000000                         76 	.ds 1
      000001                         77 _ballmvframe::
      000001                         78 	.ds 1
      000002                         79 _padheight::
      000002                         80 	.ds 1
      000003                         81 _padspeed::
      000003                         82 	.ds 1
      000004                         83 _padsectors::
      000004                         84 	.ds 3
      000007                         85 _padinity::
      000007                         86 	.ds 1
      000008                         87 _pdlpl1::
      000008                         88 	.ds 3
      00000B                         89 _pdlcpu::
      00000B                         90 	.ds 3
      00000E                         91 _ball::
      00000E                         92 	.ds 4
      000012                         93 _tileind::
      000012                         94 	.ds 1
      000013                         95 _difficulty::
      000013                         96 	.ds 1
      000014                         97 _itr::
      000014                         98 	.ds 1
      000015                         99 _randindx::
      000015                        100 	.ds 1
      000016                        101 _randindy::
      000016                        102 	.ds 1
      000017                        103 _pl1score::
      000017                        104 	.ds 1
      000018                        105 _cpuscore::
      000018                        106 	.ds 1
      000019                        107 _exitgameflg::
      000019                        108 	.ds 1
      00001A                        109 _autospeedflg::
      00001A                        110 	.ds 1
      00001B                        111 _chspeedflgdir::
      00001B                        112 	.ds 1
      00001C                        113 _paddlehitscnt::
      00001C                        114 	.ds 1
      00001D                        115 _speedind::
      00001D                        116 	.ds 1
      00001E                        117 _roundlimit::
      00001E                        118 	.ds 1
      00001F                        119 _roundcnt::
      00001F                        120 	.ds 1
                                    121 ;--------------------------------------------------------
                                    122 ; absolute external ram data
                                    123 ;--------------------------------------------------------
                                    124 	.area _DABS (ABS)
                                    125 ;--------------------------------------------------------
                                    126 ; global & static initialisations
                                    127 ;--------------------------------------------------------
                                    128 	.area _HOME
                                    129 	.area _GSINIT
                                    130 	.area _GSFINAL
                                    131 	.area _GSINIT
                                    132 ;--------------------------------------------------------
                                    133 ; Home
                                    134 ;--------------------------------------------------------
                                    135 	.area _HOME
                                    136 	.area _HOME
                                    137 ;--------------------------------------------------------
                                    138 ; code
                                    139 ;--------------------------------------------------------
                                    140 	.area _CODE
                                    141 ;main.c:58: void set_pad_sectors() {
                                    142 ;	---------------------------------
                                    143 ; Function set_pad_sectors
                                    144 ; ---------------------------------
      000000                        145 _set_pad_sectors::
                                    146 ;main.c:61: padsectors[0] = padheight * 2; // 25%
      000000 01r04r00               147 	ld	bc, #_padsectors+0
      000003 21r02r00               148 	ld	hl, #_padheight
      000006 7E                     149 	ld	a, (hl)
      000007 87                     150 	add	a, a
      000008 02                     151 	ld	(bc), a
                                    152 ;main.c:62: padsectors[1] = padheight * 4; // 50%
      000009 59                     153 	ld	e, c
      00000A 50                     154 	ld	d, b
      00000B 13                     155 	inc	de
      00000C 7E                     156 	ld	a, (hl)
      00000D 87                     157 	add	a, a
      00000E 87                     158 	add	a, a
      00000F 12                     159 	ld	(de), a
                                    160 ;main.c:63: padsectors[2] = padheight * 6; // 75%
      000010 03                     161 	inc	bc
      000011 03                     162 	inc	bc
      000012 7E                     163 	ld	a, (hl)
      000013 5F                     164 	ld	e, a
      000014 87                     165 	add	a, a
      000015 83                     166 	add	a, e
      000016 87                     167 	add	a, a
      000017 02                     168 	ld	(bc), a
                                    169 ;main.c:64: }
      000018 C9                     170 	ret
      000019                        171 _pongbkgtiles:
      000019 00                     172 	.db #0x00	; 0
      00001A 00                     173 	.db #0x00	; 0
      00001B 00                     174 	.db #0x00	; 0
      00001C 00                     175 	.db #0x00	; 0
      00001D 00                     176 	.db #0x00	; 0
      00001E 00                     177 	.db #0x00	; 0
      00001F 00                     178 	.db #0x00	; 0
      000020 00                     179 	.db #0x00	; 0
      000021 00                     180 	.db #0x00	; 0
      000022 00                     181 	.db #0x00	; 0
      000023 00                     182 	.db #0x00	; 0
      000024 00                     183 	.db #0x00	; 0
      000025 00                     184 	.db #0x00	; 0
      000026 00                     185 	.db #0x00	; 0
      000027 00                     186 	.db #0x00	; 0
      000028 00                     187 	.db #0x00	; 0
      000029 00                     188 	.db #0x00	; 0
      00002A 00                     189 	.db #0x00	; 0
      00002B 00                     190 	.db #0x00	; 0
      00002C 00                     191 	.db #0x00	; 0
      00002D 00                     192 	.db #0x00	; 0
      00002E 00                     193 	.db #0x00	; 0
      00002F 00                     194 	.db #0x00	; 0
      000030 00                     195 	.db #0x00	; 0
      000031 00                     196 	.db #0x00	; 0
      000032 00                     197 	.db #0x00	; 0
      000033 FF                     198 	.db #0xff	; 255
      000034 00                     199 	.db #0x00	; 0
      000035 00                     200 	.db #0x00	; 0
      000036 FF                     201 	.db #0xff	; 255
      000037 FF                     202 	.db #0xff	; 255
      000038 FF                     203 	.db #0xff	; 255
      000039 FF                     204 	.db #0xff	; 255
      00003A FF                     205 	.db #0xff	; 255
      00003B 00                     206 	.db #0x00	; 0
      00003C FF                     207 	.db #0xff	; 255
      00003D FF                     208 	.db #0xff	; 255
      00003E 00                     209 	.db #0x00	; 0
      00003F 00                     210 	.db #0x00	; 0
      000040 00                     211 	.db #0x00	; 0
      000041 00                     212 	.db #0x00	; 0
      000042 00                     213 	.db #0x00	; 0
      000043 00                     214 	.db #0x00	; 0
      000044 00                     215 	.db #0x00	; 0
      000045 00                     216 	.db #0x00	; 0
      000046 00                     217 	.db #0x00	; 0
      000047 00                     218 	.db #0x00	; 0
      000048 00                     219 	.db #0x00	; 0
      000049 00                     220 	.db #0x00	; 0
      00004A 01                     221 	.db #0x01	; 1
      00004B 01                     222 	.db #0x01	; 1
      00004C 02                     223 	.db #0x02	; 2
      00004D 03                     224 	.db #0x03	; 3
      00004E 04                     225 	.db #0x04	; 4
      00004F 07                     226 	.db #0x07	; 7
      000050 08                     227 	.db #0x08	; 8
      000051 0F                     228 	.db #0x0f	; 15
      000052 10                     229 	.db #0x10	; 16
      000053 1E                     230 	.db #0x1e	; 30
      000054 21                     231 	.db #0x21	; 33
      000055 3C                     232 	.db #0x3c	; 60
      000056 43                     233 	.db #0x43	; 67	'C'
      000057 79                     234 	.db #0x79	; 121	'y'
      000058 86                     235 	.db #0x86	; 134
      000059 00                     236 	.db #0x00	; 0
      00005A 80                     237 	.db #0x80	; 128
      00005B 80                     238 	.db #0x80	; 128
      00005C 40                     239 	.db #0x40	; 64
      00005D C0                     240 	.db #0xc0	; 192
      00005E 20                     241 	.db #0x20	; 32
      00005F E0                     242 	.db #0xe0	; 224
      000060 10                     243 	.db #0x10	; 16
      000061 F0                     244 	.db #0xf0	; 240
      000062 08                     245 	.db #0x08	; 8
      000063 78                     246 	.db #0x78	; 120	'x'
      000064 84                     247 	.db #0x84	; 132
      000065 3C                     248 	.db #0x3c	; 60
      000066 C2                     249 	.db #0xc2	; 194
      000067 9E                     250 	.db #0x9e	; 158
      000068 61                     251 	.db #0x61	; 97	'a'
      000069 79                     252 	.db #0x79	; 121	'y'
      00006A 86                     253 	.db #0x86	; 134
      00006B 3C                     254 	.db #0x3c	; 60
      00006C 43                     255 	.db #0x43	; 67	'C'
      00006D 1E                     256 	.db #0x1e	; 30
      00006E 21                     257 	.db #0x21	; 33
      00006F 0F                     258 	.db #0x0f	; 15
      000070 10                     259 	.db #0x10	; 16
      000071 07                     260 	.db #0x07	; 7
      000072 08                     261 	.db #0x08	; 8
      000073 03                     262 	.db #0x03	; 3
      000074 04                     263 	.db #0x04	; 4
      000075 01                     264 	.db #0x01	; 1
      000076 02                     265 	.db #0x02	; 2
      000077 00                     266 	.db #0x00	; 0
      000078 01                     267 	.db #0x01	; 1
      000079 9E                     268 	.db #0x9e	; 158
      00007A 61                     269 	.db #0x61	; 97	'a'
      00007B 3C                     270 	.db #0x3c	; 60
      00007C C2                     271 	.db #0xc2	; 194
      00007D 78                     272 	.db #0x78	; 120	'x'
      00007E 84                     273 	.db #0x84	; 132
      00007F F0                     274 	.db #0xf0	; 240
      000080 08                     275 	.db #0x08	; 8
      000081 E0                     276 	.db #0xe0	; 224
      000082 10                     277 	.db #0x10	; 16
      000083 C0                     278 	.db #0xc0	; 192
      000084 20                     279 	.db #0x20	; 32
      000085 80                     280 	.db #0x80	; 128
      000086 40                     281 	.db #0x40	; 64
      000087 00                     282 	.db #0x00	; 0
      000088 80                     283 	.db #0x80	; 128
      000089                        284 _ponggamemap:
      000089 00                     285 	.db #0x00	; 0
      00008A 00                     286 	.db #0x00	; 0
      00008B 00                     287 	.db #0x00	; 0
      00008C 00                     288 	.db #0x00	; 0
      00008D 00                     289 	.db #0x00	; 0
      00008E 00                     290 	.db #0x00	; 0
      00008F 00                     291 	.db #0x00	; 0
      000090 00                     292 	.db #0x00	; 0
      000091 00                     293 	.db #0x00	; 0
      000092 00                     294 	.db #0x00	; 0
      000093 00                     295 	.db #0x00	; 0
      000094 00                     296 	.db #0x00	; 0
      000095 00                     297 	.db #0x00	; 0
      000096 00                     298 	.db #0x00	; 0
      000097 00                     299 	.db #0x00	; 0
      000098 00                     300 	.db #0x00	; 0
      000099 00                     301 	.db #0x00	; 0
      00009A 00                     302 	.db #0x00	; 0
      00009B 00                     303 	.db #0x00	; 0
      00009C 00                     304 	.db #0x00	; 0
      00009D 01                     305 	.db #0x01	; 1
      00009E 01                     306 	.db #0x01	; 1
      00009F 01                     307 	.db #0x01	; 1
      0000A0 01                     308 	.db #0x01	; 1
      0000A1 01                     309 	.db #0x01	; 1
      0000A2 01                     310 	.db #0x01	; 1
      0000A3 01                     311 	.db #0x01	; 1
      0000A4 01                     312 	.db #0x01	; 1
      0000A5 01                     313 	.db #0x01	; 1
      0000A6 01                     314 	.db #0x01	; 1
      0000A7 01                     315 	.db #0x01	; 1
      0000A8 01                     316 	.db #0x01	; 1
      0000A9 01                     317 	.db #0x01	; 1
      0000AA 01                     318 	.db #0x01	; 1
      0000AB 01                     319 	.db #0x01	; 1
      0000AC 01                     320 	.db #0x01	; 1
      0000AD 01                     321 	.db #0x01	; 1
      0000AE 01                     322 	.db #0x01	; 1
      0000AF 01                     323 	.db #0x01	; 1
      0000B0 01                     324 	.db #0x01	; 1
      0000B1 00                     325 	.db #0x00	; 0
      0000B2 00                     326 	.db #0x00	; 0
      0000B3 00                     327 	.db #0x00	; 0
      0000B4 00                     328 	.db #0x00	; 0
      0000B5 00                     329 	.db #0x00	; 0
      0000B6 00                     330 	.db #0x00	; 0
      0000B7 00                     331 	.db #0x00	; 0
      0000B8 00                     332 	.db #0x00	; 0
      0000B9 00                     333 	.db #0x00	; 0
      0000BA 00                     334 	.db #0x00	; 0
      0000BB 00                     335 	.db #0x00	; 0
      0000BC 00                     336 	.db #0x00	; 0
      0000BD 00                     337 	.db #0x00	; 0
      0000BE 00                     338 	.db #0x00	; 0
      0000BF 00                     339 	.db #0x00	; 0
      0000C0 00                     340 	.db #0x00	; 0
      0000C1 00                     341 	.db #0x00	; 0
      0000C2 00                     342 	.db #0x00	; 0
      0000C3 00                     343 	.db #0x00	; 0
      0000C4 00                     344 	.db #0x00	; 0
      0000C5 00                     345 	.db #0x00	; 0
      0000C6 00                     346 	.db #0x00	; 0
      0000C7 00                     347 	.db #0x00	; 0
      0000C8 00                     348 	.db #0x00	; 0
      0000C9 00                     349 	.db #0x00	; 0
      0000CA 00                     350 	.db #0x00	; 0
      0000CB 00                     351 	.db #0x00	; 0
      0000CC 00                     352 	.db #0x00	; 0
      0000CD 00                     353 	.db #0x00	; 0
      0000CE 00                     354 	.db #0x00	; 0
      0000CF 00                     355 	.db #0x00	; 0
      0000D0 00                     356 	.db #0x00	; 0
      0000D1 00                     357 	.db #0x00	; 0
      0000D2 00                     358 	.db #0x00	; 0
      0000D3 00                     359 	.db #0x00	; 0
      0000D4 00                     360 	.db #0x00	; 0
      0000D5 00                     361 	.db #0x00	; 0
      0000D6 00                     362 	.db #0x00	; 0
      0000D7 00                     363 	.db #0x00	; 0
      0000D8 00                     364 	.db #0x00	; 0
      0000D9 00                     365 	.db #0x00	; 0
      0000DA 00                     366 	.db #0x00	; 0
      0000DB 00                     367 	.db #0x00	; 0
      0000DC 00                     368 	.db #0x00	; 0
      0000DD 00                     369 	.db #0x00	; 0
      0000DE 00                     370 	.db #0x00	; 0
      0000DF 00                     371 	.db #0x00	; 0
      0000E0 00                     372 	.db #0x00	; 0
      0000E1 00                     373 	.db #0x00	; 0
      0000E2 00                     374 	.db #0x00	; 0
      0000E3 00                     375 	.db #0x00	; 0
      0000E4 00                     376 	.db #0x00	; 0
      0000E5 00                     377 	.db #0x00	; 0
      0000E6 00                     378 	.db #0x00	; 0
      0000E7 00                     379 	.db #0x00	; 0
      0000E8 00                     380 	.db #0x00	; 0
      0000E9 00                     381 	.db #0x00	; 0
      0000EA 00                     382 	.db #0x00	; 0
      0000EB 00                     383 	.db #0x00	; 0
      0000EC 00                     384 	.db #0x00	; 0
      0000ED 00                     385 	.db #0x00	; 0
      0000EE 00                     386 	.db #0x00	; 0
      0000EF 00                     387 	.db #0x00	; 0
      0000F0 00                     388 	.db #0x00	; 0
      0000F1 00                     389 	.db #0x00	; 0
      0000F2 00                     390 	.db #0x00	; 0
      0000F3 00                     391 	.db #0x00	; 0
      0000F4 00                     392 	.db #0x00	; 0
      0000F5 00                     393 	.db #0x00	; 0
      0000F6 00                     394 	.db #0x00	; 0
      0000F7 00                     395 	.db #0x00	; 0
      0000F8 00                     396 	.db #0x00	; 0
      0000F9 00                     397 	.db #0x00	; 0
      0000FA 00                     398 	.db #0x00	; 0
      0000FB 00                     399 	.db #0x00	; 0
      0000FC 00                     400 	.db #0x00	; 0
      0000FD 00                     401 	.db #0x00	; 0
      0000FE 00                     402 	.db #0x00	; 0
      0000FF 00                     403 	.db #0x00	; 0
      000100 00                     404 	.db #0x00	; 0
      000101 00                     405 	.db #0x00	; 0
      000102 00                     406 	.db #0x00	; 0
      000103 00                     407 	.db #0x00	; 0
      000104 00                     408 	.db #0x00	; 0
      000105 00                     409 	.db #0x00	; 0
      000106 00                     410 	.db #0x00	; 0
      000107 00                     411 	.db #0x00	; 0
      000108 00                     412 	.db #0x00	; 0
      000109 00                     413 	.db #0x00	; 0
      00010A 00                     414 	.db #0x00	; 0
      00010B 00                     415 	.db #0x00	; 0
      00010C 00                     416 	.db #0x00	; 0
      00010D 00                     417 	.db #0x00	; 0
      00010E 00                     418 	.db #0x00	; 0
      00010F 00                     419 	.db #0x00	; 0
      000110 00                     420 	.db #0x00	; 0
      000111 00                     421 	.db #0x00	; 0
      000112 00                     422 	.db #0x00	; 0
      000113 00                     423 	.db #0x00	; 0
      000114 00                     424 	.db #0x00	; 0
      000115 00                     425 	.db #0x00	; 0
      000116 07                     426 	.db #0x07	; 7
      000117 00                     427 	.db #0x00	; 0
      000118 00                     428 	.db #0x00	; 0
      000119 00                     429 	.db #0x00	; 0
      00011A 00                     430 	.db #0x00	; 0
      00011B 00                     431 	.db #0x00	; 0
      00011C 00                     432 	.db #0x00	; 0
      00011D 00                     433 	.db #0x00	; 0
      00011E 00                     434 	.db #0x00	; 0
      00011F 00                     435 	.db #0x00	; 0
      000120 00                     436 	.db #0x00	; 0
      000121 00                     437 	.db #0x00	; 0
      000122 00                     438 	.db #0x00	; 0
      000123 00                     439 	.db #0x00	; 0
      000124 00                     440 	.db #0x00	; 0
      000125 00                     441 	.db #0x00	; 0
      000126 00                     442 	.db #0x00	; 0
      000127 07                     443 	.db #0x07	; 7
      000128 00                     444 	.db #0x00	; 0
      000129 00                     445 	.db #0x00	; 0
      00012A 08                     446 	.db #0x08	; 8
      00012B 00                     447 	.db #0x00	; 0
      00012C 00                     448 	.db #0x00	; 0
      00012D 00                     449 	.db #0x00	; 0
      00012E 00                     450 	.db #0x00	; 0
      00012F 00                     451 	.db #0x00	; 0
      000130 00                     452 	.db #0x00	; 0
      000131 00                     453 	.db #0x00	; 0
      000132 03                     454 	.db #0x03	; 3
      000133 04                     455 	.db #0x04	; 4
      000134 00                     456 	.db #0x00	; 0
      000135 00                     457 	.db #0x00	; 0
      000136 00                     458 	.db #0x00	; 0
      000137 00                     459 	.db #0x00	; 0
      000138 00                     460 	.db #0x00	; 0
      000139 00                     461 	.db #0x00	; 0
      00013A 00                     462 	.db #0x00	; 0
      00013B 08                     463 	.db #0x08	; 8
      00013C 00                     464 	.db #0x00	; 0
      00013D 00                     465 	.db #0x00	; 0
      00013E 08                     466 	.db #0x08	; 8
      00013F 00                     467 	.db #0x00	; 0
      000140 00                     468 	.db #0x00	; 0
      000141 00                     469 	.db #0x00	; 0
      000142 00                     470 	.db #0x00	; 0
      000143 00                     471 	.db #0x00	; 0
      000144 00                     472 	.db #0x00	; 0
      000145 00                     473 	.db #0x00	; 0
      000146 05                     474 	.db #0x05	; 5
      000147 06                     475 	.db #0x06	; 6
      000148 00                     476 	.db #0x00	; 0
      000149 00                     477 	.db #0x00	; 0
      00014A 00                     478 	.db #0x00	; 0
      00014B 00                     479 	.db #0x00	; 0
      00014C 00                     480 	.db #0x00	; 0
      00014D 00                     481 	.db #0x00	; 0
      00014E 00                     482 	.db #0x00	; 0
      00014F 08                     483 	.db #0x08	; 8
      000150 00                     484 	.db #0x00	; 0
      000151 00                     485 	.db #0x00	; 0
      000152 09                     486 	.db #0x09	; 9
      000153 00                     487 	.db #0x00	; 0
      000154 00                     488 	.db #0x00	; 0
      000155 00                     489 	.db #0x00	; 0
      000156 00                     490 	.db #0x00	; 0
      000157 00                     491 	.db #0x00	; 0
      000158 00                     492 	.db #0x00	; 0
      000159 00                     493 	.db #0x00	; 0
      00015A 00                     494 	.db #0x00	; 0
      00015B 00                     495 	.db #0x00	; 0
      00015C 00                     496 	.db #0x00	; 0
      00015D 00                     497 	.db #0x00	; 0
      00015E 00                     498 	.db #0x00	; 0
      00015F 00                     499 	.db #0x00	; 0
      000160 00                     500 	.db #0x00	; 0
      000161 00                     501 	.db #0x00	; 0
      000162 00                     502 	.db #0x00	; 0
      000163 09                     503 	.db #0x09	; 9
      000164 00                     504 	.db #0x00	; 0
      000165 00                     505 	.db #0x00	; 0
      000166 00                     506 	.db #0x00	; 0
      000167 00                     507 	.db #0x00	; 0
      000168 00                     508 	.db #0x00	; 0
      000169 00                     509 	.db #0x00	; 0
      00016A 00                     510 	.db #0x00	; 0
      00016B 00                     511 	.db #0x00	; 0
      00016C 00                     512 	.db #0x00	; 0
      00016D 00                     513 	.db #0x00	; 0
      00016E 00                     514 	.db #0x00	; 0
      00016F 00                     515 	.db #0x00	; 0
      000170 00                     516 	.db #0x00	; 0
      000171 00                     517 	.db #0x00	; 0
      000172 00                     518 	.db #0x00	; 0
      000173 00                     519 	.db #0x00	; 0
      000174 00                     520 	.db #0x00	; 0
      000175 00                     521 	.db #0x00	; 0
      000176 00                     522 	.db #0x00	; 0
      000177 00                     523 	.db #0x00	; 0
      000178 00                     524 	.db #0x00	; 0
      000179 00                     525 	.db #0x00	; 0
      00017A 00                     526 	.db #0x00	; 0
      00017B 00                     527 	.db #0x00	; 0
      00017C 00                     528 	.db #0x00	; 0
      00017D 00                     529 	.db #0x00	; 0
      00017E 00                     530 	.db #0x00	; 0
      00017F 00                     531 	.db #0x00	; 0
      000180 00                     532 	.db #0x00	; 0
      000181 00                     533 	.db #0x00	; 0
      000182 00                     534 	.db #0x00	; 0
      000183 00                     535 	.db #0x00	; 0
      000184 00                     536 	.db #0x00	; 0
      000185 00                     537 	.db #0x00	; 0
      000186 00                     538 	.db #0x00	; 0
      000187 00                     539 	.db #0x00	; 0
      000188 00                     540 	.db #0x00	; 0
      000189 00                     541 	.db #0x00	; 0
      00018A 00                     542 	.db #0x00	; 0
      00018B 00                     543 	.db #0x00	; 0
      00018C 00                     544 	.db #0x00	; 0
      00018D 00                     545 	.db #0x00	; 0
      00018E 00                     546 	.db #0x00	; 0
      00018F 00                     547 	.db #0x00	; 0
      000190 00                     548 	.db #0x00	; 0
      000191 00                     549 	.db #0x00	; 0
      000192 00                     550 	.db #0x00	; 0
      000193 00                     551 	.db #0x00	; 0
      000194 00                     552 	.db #0x00	; 0
      000195 00                     553 	.db #0x00	; 0
      000196 00                     554 	.db #0x00	; 0
      000197 00                     555 	.db #0x00	; 0
      000198 00                     556 	.db #0x00	; 0
      000199 00                     557 	.db #0x00	; 0
      00019A 00                     558 	.db #0x00	; 0
      00019B 00                     559 	.db #0x00	; 0
      00019C 00                     560 	.db #0x00	; 0
      00019D 00                     561 	.db #0x00	; 0
      00019E 00                     562 	.db #0x00	; 0
      00019F 00                     563 	.db #0x00	; 0
      0001A0 00                     564 	.db #0x00	; 0
      0001A1 00                     565 	.db #0x00	; 0
      0001A2 00                     566 	.db #0x00	; 0
      0001A3 00                     567 	.db #0x00	; 0
      0001A4 00                     568 	.db #0x00	; 0
      0001A5 00                     569 	.db #0x00	; 0
      0001A6 00                     570 	.db #0x00	; 0
      0001A7 00                     571 	.db #0x00	; 0
      0001A8 00                     572 	.db #0x00	; 0
      0001A9 00                     573 	.db #0x00	; 0
      0001AA 00                     574 	.db #0x00	; 0
      0001AB 00                     575 	.db #0x00	; 0
      0001AC 00                     576 	.db #0x00	; 0
      0001AD 00                     577 	.db #0x00	; 0
      0001AE 00                     578 	.db #0x00	; 0
      0001AF 00                     579 	.db #0x00	; 0
      0001B0 00                     580 	.db #0x00	; 0
      0001B1 00                     581 	.db #0x00	; 0
      0001B2 00                     582 	.db #0x00	; 0
      0001B3 00                     583 	.db #0x00	; 0
      0001B4 00                     584 	.db #0x00	; 0
      0001B5 00                     585 	.db #0x00	; 0
      0001B6 00                     586 	.db #0x00	; 0
      0001B7 00                     587 	.db #0x00	; 0
      0001B8 00                     588 	.db #0x00	; 0
      0001B9 00                     589 	.db #0x00	; 0
      0001BA 00                     590 	.db #0x00	; 0
      0001BB 00                     591 	.db #0x00	; 0
      0001BC 00                     592 	.db #0x00	; 0
      0001BD 00                     593 	.db #0x00	; 0
      0001BE 00                     594 	.db #0x00	; 0
      0001BF 00                     595 	.db #0x00	; 0
      0001C0 00                     596 	.db #0x00	; 0
      0001C1 00                     597 	.db #0x00	; 0
      0001C2 00                     598 	.db #0x00	; 0
      0001C3 00                     599 	.db #0x00	; 0
      0001C4 00                     600 	.db #0x00	; 0
      0001C5 00                     601 	.db #0x00	; 0
      0001C6 00                     602 	.db #0x00	; 0
      0001C7 00                     603 	.db #0x00	; 0
      0001C8 00                     604 	.db #0x00	; 0
      0001C9 02                     605 	.db #0x02	; 2
      0001CA 02                     606 	.db #0x02	; 2
      0001CB 02                     607 	.db #0x02	; 2
      0001CC 02                     608 	.db #0x02	; 2
      0001CD 02                     609 	.db #0x02	; 2
      0001CE 02                     610 	.db #0x02	; 2
      0001CF 02                     611 	.db #0x02	; 2
      0001D0 02                     612 	.db #0x02	; 2
      0001D1 02                     613 	.db #0x02	; 2
      0001D2 02                     614 	.db #0x02	; 2
      0001D3 02                     615 	.db #0x02	; 2
      0001D4 02                     616 	.db #0x02	; 2
      0001D5 02                     617 	.db #0x02	; 2
      0001D6 02                     618 	.db #0x02	; 2
      0001D7 02                     619 	.db #0x02	; 2
      0001D8 02                     620 	.db #0x02	; 2
      0001D9 02                     621 	.db #0x02	; 2
      0001DA 02                     622 	.db #0x02	; 2
      0001DB 02                     623 	.db #0x02	; 2
      0001DC 02                     624 	.db #0x02	; 2
      0001DD 00                     625 	.db #0x00	; 0
      0001DE 00                     626 	.db #0x00	; 0
      0001DF 00                     627 	.db #0x00	; 0
      0001E0 00                     628 	.db #0x00	; 0
      0001E1 00                     629 	.db #0x00	; 0
      0001E2 00                     630 	.db #0x00	; 0
      0001E3 00                     631 	.db #0x00	; 0
      0001E4 00                     632 	.db #0x00	; 0
      0001E5 00                     633 	.db #0x00	; 0
      0001E6 00                     634 	.db #0x00	; 0
      0001E7 00                     635 	.db #0x00	; 0
      0001E8 00                     636 	.db #0x00	; 0
      0001E9 00                     637 	.db #0x00	; 0
      0001EA 00                     638 	.db #0x00	; 0
      0001EB 00                     639 	.db #0x00	; 0
      0001EC 00                     640 	.db #0x00	; 0
      0001ED 00                     641 	.db #0x00	; 0
      0001EE 00                     642 	.db #0x00	; 0
      0001EF 00                     643 	.db #0x00	; 0
      0001F0 00                     644 	.db #0x00	; 0
      0001F1                        645 _pongspritetiles:
      0001F1 00                     646 	.db #0x00	; 0
      0001F2 00                     647 	.db #0x00	; 0
      0001F3 00                     648 	.db #0x00	; 0
      0001F4 00                     649 	.db #0x00	; 0
      0001F5 00                     650 	.db #0x00	; 0
      0001F6 00                     651 	.db #0x00	; 0
      0001F7 00                     652 	.db #0x00	; 0
      0001F8 00                     653 	.db #0x00	; 0
      0001F9 00                     654 	.db #0x00	; 0
      0001FA 00                     655 	.db #0x00	; 0
      0001FB 00                     656 	.db #0x00	; 0
      0001FC 00                     657 	.db #0x00	; 0
      0001FD 00                     658 	.db #0x00	; 0
      0001FE 00                     659 	.db #0x00	; 0
      0001FF 00                     660 	.db #0x00	; 0
      000200 00                     661 	.db #0x00	; 0
      000201 FF                     662 	.db #0xff	; 255
      000202 FF                     663 	.db #0xff	; 255
      000203 FF                     664 	.db #0xff	; 255
      000204 81                     665 	.db #0x81	; 129
      000205 C3                     666 	.db #0xc3	; 195
      000206 81                     667 	.db #0x81	; 129
      000207 C3                     668 	.db #0xc3	; 195
      000208 99                     669 	.db #0x99	; 153
      000209 C3                     670 	.db #0xc3	; 195
      00020A 99                     671 	.db #0x99	; 153
      00020B C3                     672 	.db #0xc3	; 195
      00020C 81                     673 	.db #0x81	; 129
      00020D FF                     674 	.db #0xff	; 255
      00020E 81                     675 	.db #0x81	; 129
      00020F FF                     676 	.db #0xff	; 255
      000210 FF                     677 	.db #0xff	; 255
      000211 FF                     678 	.db #0xff	; 255
      000212 FF                     679 	.db #0xff	; 255
      000213 FF                     680 	.db #0xff	; 255
      000214 81                     681 	.db #0x81	; 129
      000215 C3                     682 	.db #0xc3	; 195
      000216 81                     683 	.db #0x81	; 129
      000217 C3                     684 	.db #0xc3	; 195
      000218 99                     685 	.db #0x99	; 153
      000219 C3                     686 	.db #0xc3	; 195
      00021A 99                     687 	.db #0x99	; 153
      00021B C3                     688 	.db #0xc3	; 195
      00021C 99                     689 	.db #0x99	; 153
      00021D C3                     690 	.db #0xc3	; 195
      00021E 99                     691 	.db #0x99	; 153
      00021F C3                     692 	.db #0xc3	; 195
      000220 99                     693 	.db #0x99	; 153
      000221 C3                     694 	.db #0xc3	; 195
      000222 99                     695 	.db #0x99	; 153
      000223 C3                     696 	.db #0xc3	; 195
      000224 99                     697 	.db #0x99	; 153
      000225 C3                     698 	.db #0xc3	; 195
      000226 99                     699 	.db #0x99	; 153
      000227 C3                     700 	.db #0xc3	; 195
      000228 99                     701 	.db #0x99	; 153
      000229 C3                     702 	.db #0xc3	; 195
      00022A 99                     703 	.db #0x99	; 153
      00022B C3                     704 	.db #0xc3	; 195
      00022C 99                     705 	.db #0x99	; 153
      00022D C3                     706 	.db #0xc3	; 195
      00022E 99                     707 	.db #0x99	; 153
      00022F C3                     708 	.db #0xc3	; 195
      000230 99                     709 	.db #0x99	; 153
      000231 18                     710 	.db #0x18	; 24
      000232 18                     711 	.db #0x18	; 24
      000233 7E                     712 	.db #0x7e	; 126
      000234 66                     713 	.db #0x66	; 102	'f'
      000235 7E                     714 	.db #0x7e	; 126
      000236 42                     715 	.db #0x42	; 66	'B'
      000237 E7                     716 	.db #0xe7	; 231
      000238 99                     717 	.db #0x99	; 153
      000239 E7                     718 	.db #0xe7	; 231
      00023A 99                     719 	.db #0x99	; 153
      00023B 7E                     720 	.db #0x7e	; 126
      00023C 42                     721 	.db #0x42	; 66	'B'
      00023D 7E                     722 	.db #0x7e	; 126
      00023E 66                     723 	.db #0x66	; 102	'f'
      00023F 18                     724 	.db #0x18	; 24
      000240 18                     725 	.db #0x18	; 24
      000241                        726 _startballposxy:
      000241 54                     727 	.db #0x54	; 84	'T'
      000242                        728 _difficulty_px:
      000242 8B                     729 	.db #0x8b	; 139
      000243 7E                     730 	.db #0x7e	; 126
      000244 54                     731 	.db #0x54	; 84	'T'
      000245                        732 _stspeedpoolx:
      000245 FC                     733 	.db #0xfc	; -4
      000246 04                     734 	.db #0x04	;  4
      000247                        735 _stspeedpooly:
      000247 FC                     736 	.db #0xfc	; -4
      000248 FE                     737 	.db #0xfe	; -2
      000249 00                     738 	.db #0x00	;  0
      00024A 02                     739 	.db #0x02	;  2
      00024B 04                     740 	.db #0x04	;  4
      00024C                        741 _bkgborderup:
      00024C 20                     742 	.db #0x20	; 32
      00024D                        743 _bkgborderdown:
      00024D 90                     744 	.db #0x90	; 144
      00024E                        745 _speedchframes:
      00024E 06                     746 	.db #0x06	; 6
      00024F 0C                     747 	.db #0x0c	; 12
      000250 24                     748 	.db #0x24	; 36
                                    749 ;main.c:66: UBYTE hits_walls(UINT8 nexty, UINT8 objheight) {
                                    750 ;	---------------------------------
                                    751 ; Function hits_walls
                                    752 ; ---------------------------------
      000251                        753 _hits_walls::
                                    754 ;main.c:67: return nexty < bkgborderup || nexty + objheight > bkgborderdown;
      000251 21r4Cr02               755 	ld	hl, #_bkgborderup
      000254 4E                     756 	ld	c, (hl)
      000255 F8 02                  757 	ldhl	sp,	#2
      000257 7E                     758 	ld	a,(hl)
      000258 B9                     759 	cp	a,c
      000259 38 2C                  760 	jr	C, 00104$
      00025B 06 00                  761 	ld	b, #0x00
      00025D 23                     762 	inc	hl
      00025E 5E                     763 	ld	e, (hl)
      00025F 16 00                  764 	ld	d, #0x00
      000261 83                     765 	add	a, e
      000262 4F                     766 	ld	c, a
      000263 78                     767 	ld	a, b
      000264 8A                     768 	adc	a, d
      000265 47                     769 	ld	b, a
      000266 21r4Dr02               770 	ld	hl, #_bkgborderdown
      000269 6E                     771 	ld	l, (hl)
      00026A 26 00                  772 	ld	h, #0x00
      00026C 58                     773 	ld	e, b
      00026D 54                     774 	ld	d, h
      00026E 7D                     775 	ld	a, l
      00026F 91                     776 	sub	a, c
      000270 7C                     777 	ld	a, h
      000271 98                     778 	sbc	a, b
      000272 CB 7B                  779 	bit	7, e
      000274 28 07                  780 	jr	Z, 00116$
      000276 CB 7A                  781 	bit	7, d
      000278 20 08                  782 	jr	NZ, 00117$
      00027A BF                     783 	cp	a, a
      00027B 18 05                  784 	jr	00117$
      00027D                        785 00116$:
      00027D CB 7A                  786 	bit	7, d
      00027F 28 01                  787 	jr	Z, 00117$
      000281 37                     788 	scf
      000282                        789 00117$:
      000282 38 03                  790 	jr	C, 00104$
      000284 1E 00                  791 	ld	e, #0x00
      000286 C9                     792 	ret
      000287                        793 00104$:
      000287 1E 01                  794 	ld	e, #0x01
                                    795 ;main.c:68: }
      000289 C9                     796 	ret
                                    797 ;main.c:70: UBYTE hits_paddle(UINT8 nextx, UINT8 nexty, Paddle * pdl) {
                                    798 ;	---------------------------------
                                    799 ; Function hits_paddle
                                    800 ; ---------------------------------
      00028A                        801 _hits_paddle::
      00028A E8 FA                  802 	add	sp, #-6
                                    803 ;main.c:71: return (nextx < pdl->x + 8 && pdl->x < nextx + 8) &&
      00028C F8 0A                  804 	ldhl	sp,	#10
      00028E 2A                     805 	ld	a, (hl+)
      00028F 5E                     806 	ld	e, (hl)
      000290 F8 02                  807 	ldhl	sp,	#2
      000292 22                     808 	ld	(hl+), a
      000293 7B                     809 	ld	a, e
      000294 32                     810 	ld	(hl-), a
      000295 2A                     811 	ld	a, (hl+)
      000296 5F                     812 	ld	e, a
      000297 56                     813 	ld	d, (hl)
      000298 1A                     814 	ld	a, (de)
      000299 F8 00                  815 	ldhl	sp,	#0
      00029B 77                     816 	ld	(hl), a
      00029C AF                     817 	xor	a, a
      00029D 23                     818 	inc	hl
      00029E 77                     819 	ld	(hl), a
                                    820 ;c
      00029F D1                     821 	pop	de
      0002A0 D5                     822 	push	de
      0002A1 21 08 00               823 	ld	hl, #0x0008
      0002A4 19                     824 	add	hl, de
      0002A5 4D                     825 	ld	c, l
      0002A6 44                     826 	ld	b, h
      0002A7 F8 08                  827 	ldhl	sp,	#8
      0002A9 7E                     828 	ld	a, (hl)
      0002AA F8 04                  829 	ldhl	sp,	#4
      0002AC 77                     830 	ld	(hl), a
      0002AD AF                     831 	xor	a, a
      0002AE 23                     832 	inc	hl
      0002AF 32                     833 	ld	(hl-), a
      0002B0 7E                     834 	ld	a, (hl)
      0002B1 91                     835 	sub	a, c
      0002B2 23                     836 	inc	hl
      0002B3 7E                     837 	ld	a, (hl)
      0002B4 98                     838 	sbc	a, b
      0002B5 56                     839 	ld	d, (hl)
      0002B6 78                     840 	ld	a, b
      0002B7 CB 7F                  841 	bit	7,a
      0002B9 28 07                  842 	jr	Z, 00126$
      0002BB CB 7A                  843 	bit	7, d
      0002BD 20 08                  844 	jr	NZ, 00127$
      0002BF BF                     845 	cp	a, a
      0002C0 18 05                  846 	jr	00127$
      0002C2                        847 00126$:
      0002C2 CB 7A                  848 	bit	7, d
      0002C4 28 01                  849 	jr	Z, 00127$
      0002C6 37                     850 	scf
      0002C7                        851 00127$:
      0002C7 D2r98r03               852 	jp	NC, 00103$
                                    853 ;c
      0002CA F8 04                  854 	ldhl	sp,#4
      0002CC 2A                     855 	ld	a, (hl+)
      0002CD 5F                     856 	ld	e, a
      0002CE 56                     857 	ld	d, (hl)
      0002CF 21 08 00               858 	ld	hl, #0x0008
      0002D2 19                     859 	add	hl, de
      0002D3 4D                     860 	ld	c, l
      0002D4 44                     861 	ld	b, h
      0002D5 F8 00                  862 	ldhl	sp,	#0
      0002D7 7E                     863 	ld	a, (hl)
      0002D8 91                     864 	sub	a, c
      0002D9 23                     865 	inc	hl
      0002DA 7E                     866 	ld	a, (hl)
      0002DB 98                     867 	sbc	a, b
      0002DC 56                     868 	ld	d, (hl)
      0002DD 78                     869 	ld	a, b
      0002DE CB 7F                  870 	bit	7,a
      0002E0 28 07                  871 	jr	Z, 00128$
      0002E2 CB 7A                  872 	bit	7, d
      0002E4 20 08                  873 	jr	NZ, 00129$
      0002E6 BF                     874 	cp	a, a
      0002E7 18 05                  875 	jr	00129$
      0002E9                        876 00128$:
      0002E9 CB 7A                  877 	bit	7, d
      0002EB 28 01                  878 	jr	Z, 00129$
      0002ED 37                     879 	scf
      0002EE                        880 00129$:
      0002EE D2r98r03               881 	jp	NC, 00103$
                                    882 ;main.c:72: (nexty < pdl->y + (padheight * 8) && pdl->y < nexty + 8);
                                    883 ;c
      0002F1 F8 02                  884 	ldhl	sp,#2
      0002F3 2A                     885 	ld	a, (hl+)
      0002F4 5F                     886 	ld	e, a
      0002F5 56                     887 	ld	d, (hl)
      0002F6 6B                     888 	ld	l, e
      0002F7 62                     889 	ld	h, d
      0002F8 23                     890 	inc	hl
      0002F9 E5                     891 	push	hl
      0002FA 7D                     892 	ld	a, l
      0002FB F8 06                  893 	ldhl	sp,	#6
      0002FD 77                     894 	ld	(hl), a
      0002FE E1                     895 	pop	hl
      0002FF 7C                     896 	ld	a, h
      000300 F8 05                  897 	ldhl	sp,	#5
      000302 32                     898 	ld	(hl-), a
      000303 2A                     899 	ld	a, (hl+)
      000304 5F                     900 	ld	e, a
      000305 56                     901 	ld	d, (hl)
      000306 1A                     902 	ld	a, (de)
      000307 77                     903 	ld	(hl), a
      000308 F8 00                  904 	ldhl	sp,	#0
      00030A 77                     905 	ld	(hl), a
      00030B AF                     906 	xor	a, a
      00030C 23                     907 	inc	hl
      00030D 77                     908 	ld	(hl), a
      00030E FAr02r00               909 	ld	a, (#_padheight)
      000311 F8 04                  910 	ldhl	sp,	#4
      000313 77                     911 	ld	(hl), a
      000314 AF                     912 	xor	a, a
      000315 23                     913 	inc	hl
      000316 32                     914 	ld	(hl-), a
      000317 3A                     915 	ld	a, (hl-)
      000318 2B                     916 	dec	hl
      000319 77                     917 	ld	(hl), a
      00031A F8 05                  918 	ldhl	sp,	#5
      00031C 3A                     919 	ld	a, (hl-)
      00031D 2B                     920 	dec	hl
      00031E 77                     921 	ld	(hl), a
      00031F 3E 03                  922 	ld	a, #0x03
      000321                        923 00130$:
      000321 F8 02                  924 	ldhl	sp,	#2
      000323 CB 26                  925 	sla	(hl)
      000325 23                     926 	inc	hl
      000326 CB 16                  927 	rl	(hl)
      000328 3D                     928 	dec	a
      000329 20 F6                  929 	jr	NZ, 00130$
                                    930 ;c
      00032B 2B                     931 	dec	hl
      00032C 2A                     932 	ld	a, (hl+)
      00032D 5F                     933 	ld	e, a
      00032E 56                     934 	ld	d, (hl)
      00032F E1                     935 	pop	hl
      000330 E5                     936 	push	hl
      000331 19                     937 	add	hl, de
      000332 E5                     938 	push	hl
      000333 7D                     939 	ld	a, l
      000334 F8 06                  940 	ldhl	sp,	#6
      000336 77                     941 	ld	(hl), a
      000337 E1                     942 	pop	hl
      000338 7C                     943 	ld	a, h
      000339 F8 05                  944 	ldhl	sp,	#5
      00033B 77                     945 	ld	(hl), a
      00033C F8 09                  946 	ldhl	sp,	#9
      00033E 7E                     947 	ld	a, (hl)
      00033F F8 02                  948 	ldhl	sp,	#2
      000341 77                     949 	ld	(hl), a
      000342 AF                     950 	xor	a, a
      000343 23                     951 	inc	hl
      000344 77                     952 	ld	(hl), a
      000345 F8 02                  953 	ldhl	sp,	#2
      000347 5D                     954 	ld	e, l
      000348 54                     955 	ld	d, h
      000349 F8 04                  956 	ldhl	sp,	#4
      00034B 1A                     957 	ld	a, (de)
      00034C 96                     958 	sub	a, (hl)
      00034D 23                     959 	inc	hl
      00034E 13                     960 	inc	de
      00034F 1A                     961 	ld	a, (de)
      000350 9E                     962 	sbc	a, (hl)
      000351 1A                     963 	ld	a, (de)
      000352 57                     964 	ld	d, a
      000353 CB 7E                  965 	bit	7, (hl)
      000355 28 07                  966 	jr	Z, 00131$
      000357 CB 7A                  967 	bit	7, d
      000359 20 08                  968 	jr	NZ, 00132$
      00035B BF                     969 	cp	a, a
      00035C 18 05                  970 	jr	00132$
      00035E                        971 00131$:
      00035E CB 7A                  972 	bit	7, d
      000360 28 01                  973 	jr	Z, 00132$
      000362 37                     974 	scf
      000363                        975 00132$:
      000363 30 33                  976 	jr	NC, 00103$
                                    977 ;c
      000365 F8 02                  978 	ldhl	sp,#2
      000367 2A                     979 	ld	a, (hl+)
      000368 5F                     980 	ld	e, a
      000369 56                     981 	ld	d, (hl)
      00036A 21 08 00               982 	ld	hl, #0x0008
      00036D 19                     983 	add	hl, de
      00036E E5                     984 	push	hl
      00036F 7D                     985 	ld	a, l
      000370 F8 06                  986 	ldhl	sp,	#6
      000372 77                     987 	ld	(hl), a
      000373 E1                     988 	pop	hl
      000374 7C                     989 	ld	a, h
      000375 F8 05                  990 	ldhl	sp,	#5
      000377 77                     991 	ld	(hl), a
      000378 F8 00                  992 	ldhl	sp,	#0
      00037A 5D                     993 	ld	e, l
      00037B 54                     994 	ld	d, h
      00037C F8 04                  995 	ldhl	sp,	#4
      00037E 1A                     996 	ld	a, (de)
      00037F 96                     997 	sub	a, (hl)
      000380 23                     998 	inc	hl
      000381 13                     999 	inc	de
      000382 1A                    1000 	ld	a, (de)
      000383 9E                    1001 	sbc	a, (hl)
      000384 1A                    1002 	ld	a, (de)
      000385 57                    1003 	ld	d, a
      000386 CB 7E                 1004 	bit	7, (hl)
      000388 28 07                 1005 	jr	Z, 00133$
      00038A CB 7A                 1006 	bit	7, d
      00038C 20 08                 1007 	jr	NZ, 00134$
      00038E BF                    1008 	cp	a, a
      00038F 18 05                 1009 	jr	00134$
      000391                       1010 00133$:
      000391 CB 7A                 1011 	bit	7, d
      000393 28 01                 1012 	jr	Z, 00134$
      000395 37                    1013 	scf
      000396                       1014 00134$:
      000396 38 04                 1015 	jr	C, 00104$
      000398                       1016 00103$:
      000398 1E 00                 1017 	ld	e, #0x00
      00039A 18 02                 1018 	jr	00105$
      00039C                       1019 00104$:
      00039C 1E 01                 1020 	ld	e, #0x01
      00039E                       1021 00105$:
                                   1022 ;main.c:73: }
      00039E E8 06                 1023 	add	sp, #6
      0003A0 C9                    1024 	ret
                                   1025 ;main.c:75: INT8 get_bounce_off_dir_y(Paddle * pad) {
                                   1026 ;	---------------------------------
                                   1027 ; Function get_bounce_off_dir_y
                                   1028 ; ---------------------------------
      0003A1                       1029 _get_bounce_off_dir_y::
      0003A1 E8 FA                 1030 	add	sp, #-6
                                   1031 ;main.c:77: UINT8 ballcentery = ball.y + 4;
      0003A3 FAr0Fr00              1032 	ld	a, (#(_ball + 0x0001) + 0)
      0003A6 C6 04                 1033 	add	a, #0x04
      0003A8 4F                    1034 	ld	c, a
                                   1035 ;main.c:78: if(ballcentery < pad->y + padsectors[0]) { // < 25%
      0003A9 F8 08                 1036 	ldhl	sp,#8
      0003AB 2A                    1037 	ld	a, (hl+)
      0003AC 5F                    1038 	ld	e, a
      0003AD 56                    1039 	ld	d, (hl)
      0003AE 13                    1040 	inc	de
      0003AF 1A                    1041 	ld	a, (de)
      0003B0 F8 00                 1042 	ldhl	sp,	#0
      0003B2 77                    1043 	ld	(hl), a
      0003B3 AF                    1044 	xor	a, a
      0003B4 23                    1045 	inc	hl
      0003B5 77                    1046 	ld	(hl), a
      0003B6 FAr04r00              1047 	ld	a, (#_padsectors + 0)
      0003B9 5F                    1048 	ld	e, a
      0003BA 16 00                 1049 	ld	d, #0x00
                                   1050 ;c
      0003BC E1                    1051 	pop	hl
      0003BD E5                    1052 	push	hl
      0003BE 19                    1053 	add	hl, de
      0003BF E5                    1054 	push	hl
      0003C0 7D                    1055 	ld	a, l
      0003C1 F8 06                 1056 	ldhl	sp,	#6
      0003C3 77                    1057 	ld	(hl), a
      0003C4 E1                    1058 	pop	hl
      0003C5 7C                    1059 	ld	a, h
      0003C6 F8 05                 1060 	ldhl	sp,	#5
      0003C8 77                    1061 	ld	(hl), a
      0003C9 06 00                 1062 	ld	b, #0x00
      0003CB 2B                    1063 	dec	hl
      0003CC 79                    1064 	ld	a, c
      0003CD 96                    1065 	sub	a, (hl)
      0003CE 23                    1066 	inc	hl
      0003CF 78                    1067 	ld	a, b
      0003D0 9E                    1068 	sbc	a, (hl)
      0003D1 78                    1069 	ld	a, b
      0003D2 57                    1070 	ld	d, a
      0003D3 CB 7E                 1071 	bit	7, (hl)
      0003D5 28 07                 1072 	jr	Z, 00142$
      0003D7 CB 7A                 1073 	bit	7, d
      0003D9 20 08                 1074 	jr	NZ, 00143$
      0003DB BF                    1075 	cp	a, a
      0003DC 18 05                 1076 	jr	00143$
      0003DE                       1077 00142$:
      0003DE CB 7A                 1078 	bit	7, d
      0003E0 28 01                 1079 	jr	Z, 00143$
      0003E2 37                    1080 	scf
      0003E3                       1081 00143$:
      0003E3 30 05                 1082 	jr	NC, 00113$
                                   1083 ;main.c:79: return -4;
      0003E5 1E FC                 1084 	ld	e, #0xfc
      0003E7 C3r7Br04              1085 	jp	00115$
      0003EA                       1086 00113$:
                                   1087 ;main.c:80: } else if(ballcentery < pad->y + padsectors[1]) { // < 50%
      0003EA FAr05r00              1088 	ld	a, (#(_padsectors + 0x0001) + 0)
      0003ED 16 00                 1089 	ld	d, #0x00
                                   1090 ;c
      0003EF 5F                    1091 	ld	e, a
      0003F0 E1                    1092 	pop	hl
      0003F1 E5                    1093 	push	hl
      0003F2 19                    1094 	add	hl, de
      0003F3 E5                    1095 	push	hl
      0003F4 7D                    1096 	ld	a, l
      0003F5 F8 04                 1097 	ldhl	sp,	#4
      0003F7 77                    1098 	ld	(hl), a
      0003F8 E1                    1099 	pop	hl
      0003F9 7C                    1100 	ld	a, h
      0003FA F8 03                 1101 	ldhl	sp,	#3
      0003FC 32                    1102 	ld	(hl-), a
      0003FD 79                    1103 	ld	a, c
      0003FE 96                    1104 	sub	a, (hl)
      0003FF 23                    1105 	inc	hl
      000400 78                    1106 	ld	a, b
      000401 9E                    1107 	sbc	a, (hl)
      000402 78                    1108 	ld	a, b
      000403 57                    1109 	ld	d, a
      000404 CB 7E                 1110 	bit	7, (hl)
      000406 28 07                 1111 	jr	Z, 00144$
      000408 CB 7A                 1112 	bit	7, d
      00040A 20 08                 1113 	jr	NZ, 00145$
      00040C BF                    1114 	cp	a, a
      00040D 18 05                 1115 	jr	00145$
      00040F                       1116 00144$:
      00040F CB 7A                 1117 	bit	7, d
      000411 28 01                 1118 	jr	Z, 00145$
      000413 37                    1119 	scf
      000414                       1120 00145$:
      000414 30 04                 1121 	jr	NC, 00110$
                                   1122 ;main.c:81: return -2;
      000416 1E FE                 1123 	ld	e, #0xfe
      000418 18 61                 1124 	jr	00115$
      00041A                       1125 00110$:
                                   1126 ;main.c:82: } else if(ballcentery == pad->y + padsectors[1]) { // == 50%
      00041A F8 02                 1127 	ldhl	sp,	#2
      00041C 7E                    1128 	ld	a, (hl)
      00041D 91                    1129 	sub	a, c
      00041E 20 08                 1130 	jr	NZ, 00107$
      000420 23                    1131 	inc	hl
      000421 7E                    1132 	ld	a, (hl)
                                   1133 ;main.c:83: return 0;
      000422 90                    1134 	sub	a,b
      000423 20 03                 1135 	jr	NZ, 00107$
      000425 5F                    1136 	ld	e,a
      000426 18 53                 1137 	jr	00115$
      000428                       1138 00107$:
                                   1139 ;main.c:84: } else if(ballcentery > pad->y + padsectors[2]) { // > 75%
      000428 FAr06r00              1140 	ld	a, (#(_padsectors + 0x0002) + 0)
      00042B 16 00                 1141 	ld	d, #0x00
                                   1142 ;c
      00042D 5F                    1143 	ld	e, a
      00042E E1                    1144 	pop	hl
      00042F E5                    1145 	push	hl
      000430 19                    1146 	add	hl, de
      000431 E5                    1147 	push	hl
      000432 7D                    1148 	ld	a, l
      000433 F8 06                 1149 	ldhl	sp,	#6
      000435 77                    1150 	ld	(hl), a
      000436 E1                    1151 	pop	hl
      000437 7C                    1152 	ld	a, h
      000438 F8 05                 1153 	ldhl	sp,	#5
      00043A 32                    1154 	ld	(hl-), a
      00043B 7E                    1155 	ld	a, (hl)
      00043C 91                    1156 	sub	a, c
      00043D 23                    1157 	inc	hl
      00043E 7E                    1158 	ld	a, (hl)
      00043F 98                    1159 	sbc	a, b
      000440 56                    1160 	ld	d, (hl)
      000441 78                    1161 	ld	a, b
      000442 CB 7F                 1162 	bit	7,a
      000444 28 07                 1163 	jr	Z, 00148$
      000446 CB 7A                 1164 	bit	7, d
      000448 20 08                 1165 	jr	NZ, 00149$
      00044A BF                    1166 	cp	a, a
      00044B 18 05                 1167 	jr	00149$
      00044D                       1168 00148$:
      00044D CB 7A                 1169 	bit	7, d
      00044F 28 01                 1170 	jr	Z, 00149$
      000451 37                    1171 	scf
      000452                       1172 00149$:
      000452 30 04                 1173 	jr	NC, 00104$
                                   1174 ;main.c:85: return 4;
      000454 1E 04                 1175 	ld	e, #0x04
      000456 18 23                 1176 	jr	00115$
      000458                       1177 00104$:
                                   1178 ;main.c:86: } else if(ballcentery > pad->y + padsectors[1]) { // > 50%
      000458 F8 02                 1179 	ldhl	sp,	#2
      00045A 7E                    1180 	ld	a, (hl)
      00045B 91                    1181 	sub	a, c
      00045C 23                    1182 	inc	hl
      00045D 7E                    1183 	ld	a, (hl)
      00045E 98                    1184 	sbc	a, b
      00045F 56                    1185 	ld	d, (hl)
      000460 78                    1186 	ld	a, b
      000461 CB 7F                 1187 	bit	7,a
      000463 28 07                 1188 	jr	Z, 00150$
      000465 CB 7A                 1189 	bit	7, d
      000467 20 08                 1190 	jr	NZ, 00151$
      000469 BF                    1191 	cp	a, a
      00046A 18 05                 1192 	jr	00151$
      00046C                       1193 00150$:
      00046C CB 7A                 1194 	bit	7, d
      00046E 28 01                 1195 	jr	Z, 00151$
      000470 37                    1196 	scf
      000471                       1197 00151$:
      000471 30 04                 1198 	jr	NC, 00108$
                                   1199 ;main.c:87: return 2;
      000473 1E 02                 1200 	ld	e, #0x02
      000475 18 04                 1201 	jr	00115$
      000477                       1202 00108$:
                                   1203 ;main.c:89: return ball.speedy; // Just getting rid of a compiler warning
      000477 FAr11r00              1204 	ld	a, (#(_ball + 0x0003) + 0)
      00047A 5F                    1205 	ld	e, a
      00047B                       1206 00115$:
                                   1207 ;main.c:90: }
      00047B E8 06                 1208 	add	sp, #6
      00047D C9                    1209 	ret
                                   1210 ;main.c:92: void move_ball(Paddle * ppl1, Paddle * pcpu) {
                                   1211 ;	---------------------------------
                                   1212 ; Function move_ball
                                   1213 ; ---------------------------------
      00047E                       1214 _move_ball::
      00047E 3B                    1215 	dec	sp
                                   1216 ;main.c:93: UINT8 nextballposx = ball.x + ball.speedx;
      00047F 21r0Er00              1217 	ld	hl, #_ball
      000482 4E                    1218 	ld	c, (hl)
      000483 FAr10r00              1219 	ld	a, (#(_ball + 0x0002) + 0)
      000486 81                    1220 	add	a, c
      000487 4F                    1221 	ld	c, a
                                   1222 ;main.c:94: UINT8 nextballposy = ball.y + ball.speedy;
      000488 21r0Fr00              1223 	ld	hl, #(_ball + 0x0001)
      00048B 46                    1224 	ld	b, (hl)
      00048C FAr11r00              1225 	ld	a, (#(_ball + 0x0003) + 0)
      00048F 80                    1226 	add	a, b
      000490 47                    1227 	ld	b, a
                                   1228 ;main.c:95: if(hits_walls(nextballposy, 8)) {
      000491 C5                    1229 	push	bc
      000492 3E 08                 1230 	ld	a, #0x08
      000494 F5                    1231 	push	af
      000495 33                    1232 	inc	sp
      000496 C5                    1233 	push	bc
      000497 33                    1234 	inc	sp
      000498 CDr51r02              1235 	call	_hits_walls
      00049B E8 02                 1236 	add	sp, #2
      00049D 7B                    1237 	ld	a, e
      00049E C1                    1238 	pop	bc
      00049F B7                    1239 	or	a, a
      0004A0 28 0E                 1240 	jr	Z, 00102$
                                   1241 ;main.c:96: ball.speedy *= -1;
      0004A2 21r11r00              1242 	ld	hl, #(_ball + 0x0003)
      0004A5 6E                    1243 	ld	l, (hl)
      0004A6 AF                    1244 	xor	a, a
      0004A7 95                    1245 	sub	a, l
      0004A8 F8 00                 1246 	ldhl	sp,	#0
      0004AA 77                    1247 	ld	(hl), a
      0004AB 11r11r00              1248 	ld	de, #(_ball + 0x0003)
      0004AE 7E                    1249 	ld	a, (hl)
      0004AF 12                    1250 	ld	(de), a
      0004B0                       1251 00102$:
                                   1252 ;main.c:98: if(hits_paddle(nextballposx, nextballposy, ppl1)) {
      0004B0 C5                    1253 	push	bc
      0004B1 F8 05                 1254 	ldhl	sp,	#5
      0004B3 2A                    1255 	ld	a, (hl+)
      0004B4 66                    1256 	ld	h, (hl)
      0004B5 6F                    1257 	ld	l, a
      0004B6 E5                    1258 	push	hl
      0004B7 C5                    1259 	push	bc
      0004B8 CDr8Ar02              1260 	call	_hits_paddle
      0004BB E8 04                 1261 	add	sp, #4
      0004BD 7B                    1262 	ld	a, e
      0004BE C1                    1263 	pop	bc
      0004BF B7                    1264 	or	a, a
      0004C0 28 1C                 1265 	jr	Z, 00106$
                                   1266 ;main.c:99: ball.speedx *= -1;
      0004C2 21r10r00              1267 	ld	hl, #(_ball + 0x0002)
      0004C5 4E                    1268 	ld	c, (hl)
      0004C6 AF                    1269 	xor	a, a
      0004C7 91                    1270 	sub	a, c
      0004C8 4F                    1271 	ld	c, a
      0004C9 21r10r00              1272 	ld	hl, #(_ball + 0x0002)
      0004CC 71                    1273 	ld	(hl), c
                                   1274 ;main.c:100: ball.speedy = get_bounce_off_dir_y(ppl1);
      0004CD F8 03                 1275 	ldhl	sp,	#3
      0004CF 2A                    1276 	ld	a, (hl+)
      0004D0 66                    1277 	ld	h, (hl)
      0004D1 6F                    1278 	ld	l, a
      0004D2 E5                    1279 	push	hl
      0004D3 CDrA1r03              1280 	call	_get_bounce_off_dir_y
      0004D6 E8 02                 1281 	add	sp, #2
      0004D8 7B                    1282 	ld	a, e
      0004D9 EAr11r00              1283 	ld	(#(_ball + 0x0003)),a
      0004DC 18 2A                 1284 	jr	00107$
      0004DE                       1285 00106$:
                                   1286 ;main.c:101: } else if(hits_paddle(nextballposx, nextballposy, pcpu)) {
      0004DE F8 05                 1287 	ldhl	sp,	#5
      0004E0 2A                    1288 	ld	a, (hl+)
      0004E1 66                    1289 	ld	h, (hl)
      0004E2 6F                    1290 	ld	l, a
      0004E3 E5                    1291 	push	hl
      0004E4 C5                    1292 	push	bc
      0004E5 CDr8Ar02              1293 	call	_hits_paddle
      0004E8 E8 04                 1294 	add	sp, #4
      0004EA 7B                    1295 	ld	a, e
      0004EB B7                    1296 	or	a, a
      0004EC 28 1A                 1297 	jr	Z, 00107$
                                   1298 ;main.c:102: ball.speedx *= -1;
      0004EE 21r10r00              1299 	ld	hl, #(_ball + 0x0002)
      0004F1 4E                    1300 	ld	c, (hl)
      0004F2 AF                    1301 	xor	a, a
      0004F3 91                    1302 	sub	a, c
      0004F4 4F                    1303 	ld	c, a
      0004F5 21r10r00              1304 	ld	hl, #(_ball + 0x0002)
      0004F8 71                    1305 	ld	(hl), c
                                   1306 ;main.c:103: ball.speedy = get_bounce_off_dir_y(pcpu);
      0004F9 F8 05                 1307 	ldhl	sp,	#5
      0004FB 2A                    1308 	ld	a, (hl+)
      0004FC 66                    1309 	ld	h, (hl)
      0004FD 6F                    1310 	ld	l, a
      0004FE E5                    1311 	push	hl
      0004FF CDrA1r03              1312 	call	_get_bounce_off_dir_y
      000502 E8 02                 1313 	add	sp, #2
      000504 7B                    1314 	ld	a, e
      000505 EAr11r00              1315 	ld	(#(_ball + 0x0003)),a
      000508                       1316 00107$:
                                   1317 ;main.c:105: ball.x += ball.speedx;
      000508 FAr0Er00              1318 	ld	a, (#_ball + 0)
      00050B 21r10r00              1319 	ld	hl, #(_ball + 0x0002)
      00050E 4E                    1320 	ld	c, (hl)
      00050F 81                    1321 	add	a, c
      000510 EAr0Er00              1322 	ld	(#_ball),a
                                   1323 ;main.c:106: ball.y += ball.speedy;
      000513 FAr0Fr00              1324 	ld	a, (#(_ball + 0x0001) + 0)
      000516 21r11r00              1325 	ld	hl, #(_ball + 0x0003)
      000519 4E                    1326 	ld	c, (hl)
      00051A 81                    1327 	add	a, c
      00051B EAr0Fr00              1328 	ld	(#(_ball + 0x0001)),a
                                   1329 ;main.c:107: scroll_sprite(0, ball.speedx, ball.speedy);
      00051E 21r11r00              1330 	ld	hl, #(_ball + 0x0003)
      000521 4E                    1331 	ld	c, (hl)
      000522 21r10r00              1332 	ld	hl, #(_ball + 0x0002)
      000525 46                    1333 	ld	b, (hl)
                                   1334 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      000526 11r00r00              1335 	ld	de, #_shadow_OAM
                                   1336 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      000529 1A                    1337 	ld	a, (de)
      00052A 81                    1338 	add	a, c
      00052B 12                    1339 	ld	(de), a
      00052C 13                    1340 	inc	de
      00052D 1A                    1341 	ld	a, (de)
      00052E 80                    1342 	add	a, b
      00052F 12                    1343 	ld	(de), a
                                   1344 ;main.c:107: scroll_sprite(0, ball.speedx, ball.speedy);
                                   1345 ;main.c:108: }
      000530 33                    1346 	inc	sp
      000531 C9                    1347 	ret
                                   1348 ;main.c:110: void init_paddle(Paddle * pdl, UINT8 firsttilenum,UINT8 posx, UINT8 posy) {
                                   1349 ;	---------------------------------
                                   1350 ; Function init_paddle
                                   1351 ; ---------------------------------
      000532                       1352 _init_paddle::
      000532 E8 FB                 1353 	add	sp, #-5
                                   1354 ;main.c:113: pdl->x = posx;
      000534 F8 07                 1355 	ldhl	sp,#7
      000536 2A                    1356 	ld	a, (hl+)
      000537 5F                    1357 	ld	e, a
      000538 2A                    1358 	ld	a, (hl+)
      000539 57                    1359 	ld	d, a
      00053A 23                    1360 	inc	hl
      00053B 7E                    1361 	ld	a, (hl)
      00053C 12                    1362 	ld	(de), a
                                   1363 ;main.c:114: pdl->y = posy;
      00053D 4B                    1364 	ld	c, e
      00053E 42                    1365 	ld	b, d
      00053F 03                    1366 	inc	bc
      000540 23                    1367 	inc	hl
      000541 7E                    1368 	ld	a, (hl)
      000542 02                    1369 	ld	(bc), a
                                   1370 ;main.c:115: pdl->firsttile = firsttilenum;
      000543 13                    1371 	inc	de
      000544 13                    1372 	inc	de
      000545 2B                    1373 	dec	hl
      000546 2B                    1374 	dec	hl
      000547 7E                    1375 	ld	a, (hl)
      000548 12                    1376 	ld	(de), a
                                   1377 ;main.c:117: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000549 21r02r00              1378 	ld	hl, #_padheight
      00054C 4E                    1379 	ld	c, (hl)
      00054D 06 00                 1380 	ld	b, #0x00
      00054F 0B                    1381 	dec	bc
                                   1382 ;main.c:118: set_sprite_tile(firsttilenum, 1);
      000550 F8 09                 1383 	ldhl	sp,	#9
      000552 5E                    1384 	ld	e, (hl)
                                   1385 ;main.c:117: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000553 78                    1386 	ld	a, b
      000554 B1                    1387 	or	a, c
      000555 20 1C                 1388 	jr	NZ, 00102$
                                   1389 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000557 6B                    1390 	ld	l, e
      000558 26 00                 1391 	ld	h, #0x00
      00055A 29                    1392 	add	hl, hl
      00055B 29                    1393 	add	hl, hl
      00055C 5D                    1394 	ld	e, l
      00055D 54                    1395 	ld	d, h
      00055E 21r02r00              1396 	ld	hl,#_shadow_OAM+1+1
      000561 19                    1397 	add	hl,de
      000562 36 01                 1398 	ld	(hl), #0x01
                                   1399 ;main.c:119: move_sprite(firsttilenum, posx, posy);
      000564 F8 0B                 1400 	ldhl	sp,	#11
      000566 3A                    1401 	ld	a, (hl-)
      000567 47                    1402 	ld	b, a
      000568 4E                    1403 	ld	c, (hl)
                                   1404 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000569 21r00r00              1405 	ld	hl, #_shadow_OAM
      00056C 19                    1406 	add	hl, de
                                   1407 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00056D 78                    1408 	ld	a, b
      00056E 22                    1409 	ld	(hl+), a
      00056F 71                    1410 	ld	(hl), c
                                   1411 ;main.c:120: return;
      000570 C3r42r06              1412 	jp	00115$
      000573                       1413 00102$:
                                   1414 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000573 F8 00                 1415 	ldhl	sp,	#0
      000575 73                    1416 	ld	(hl), e
      000576 AF                    1417 	xor	a, a
      000577 23                    1418 	inc	hl
      000578 77                    1419 	ld	(hl), a
      000579 C1                    1420 	pop	bc
      00057A C5                    1421 	push	bc
      00057B CB 21                 1422 	sla	c
      00057D CB 10                 1423 	rl	b
      00057F CB 21                 1424 	sla	c
      000581 CB 10                 1425 	rl	b
      000583 21r02r00              1426 	ld	hl,#_shadow_OAM+1+1
      000586 09                    1427 	add	hl,bc
      000587 36 02                 1428 	ld	(hl), #0x02
                                   1429 ;main.c:123: move_sprite(firsttilenum, posx, posy);
      000589 F8 0B                 1430 	ldhl	sp,	#11
      00058B 3A                    1431 	ld	a, (hl-)
      00058C 57                    1432 	ld	d, a
      00058D 7E                    1433 	ld	a, (hl)
      00058E F8 02                 1434 	ldhl	sp,	#2
      000590 77                    1435 	ld	(hl), a
                                   1436 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000591 21r00r00              1437 	ld	hl, #_shadow_OAM
      000594 09                    1438 	add	hl, bc
      000595 4D                    1439 	ld	c, l
      000596 44                    1440 	ld	b, h
                                   1441 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000597 7A                    1442 	ld	a, d
      000598 02                    1443 	ld	(bc), a
      000599 03                    1444 	inc	bc
      00059A F8 02                 1445 	ldhl	sp,	#2
      00059C 7E                    1446 	ld	a, (hl)
      00059D 02                    1447 	ld	(bc), a
                                   1448 ;main.c:125: tileind = firsttilenum + 1;
      00059E 7B                    1449 	ld	a, e
      00059F 3C                    1450 	inc	a
      0005A0 EAr12r00              1451 	ld	(#_tileind),a
                                   1452 ;main.c:126: itr = 1;
      0005A3 21r14r00              1453 	ld	hl, #_itr
      0005A6 36 01                 1454 	ld	(hl), #0x01
                                   1455 ;main.c:127: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      0005A8                       1456 00103$:
      0005A8 21r02r00              1457 	ld	hl, #_padheight
      0005AB 4E                    1458 	ld	c, (hl)
      0005AC 06 00                 1459 	ld	b, #0x00
      0005AE E1                    1460 	pop	hl
      0005AF E5                    1461 	push	hl
      0005B0 09                    1462 	add	hl, bc
      0005B1 4D                    1463 	ld	c, l
      0005B2 44                    1464 	ld	b, h
      0005B3 0B                    1465 	dec	bc
      0005B4 FAr12r00              1466 	ld	a, (#_tileind)
      0005B7 F8 03                 1467 	ldhl	sp,	#3
      0005B9 77                    1468 	ld	(hl), a
      0005BA AF                    1469 	xor	a, a
      0005BB 23                    1470 	inc	hl
      0005BC 77                    1471 	ld	(hl), a
                                   1472 ;main.c:128: set_sprite_tile(tileind, 3);
      0005BD 21r12r00              1473 	ld	hl, #_tileind
      0005C0 5E                    1474 	ld	e, (hl)
                                   1475 ;main.c:127: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      0005C1 F8 03                 1476 	ldhl	sp,	#3
      0005C3 7E                    1477 	ld	a, (hl)
      0005C4 91                    1478 	sub	a, c
      0005C5 20 05                 1479 	jr	NZ, 00133$
      0005C7 23                    1480 	inc	hl
      0005C8 7E                    1481 	ld	a, (hl)
      0005C9 90                    1482 	sub	a, b
      0005CA 28 36                 1483 	jr	Z, 00105$
      0005CC                       1484 00133$:
                                   1485 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0005CC 01r00r00              1486 	ld	bc, #_shadow_OAM+0
      0005CF 26 00                 1487 	ld	h, #0x00
      0005D1 6B                    1488 	ld	l, e
      0005D2 29                    1489 	add	hl, hl
      0005D3 29                    1490 	add	hl, hl
      0005D4 09                    1491 	add	hl, bc
      0005D5 23                    1492 	inc	hl
      0005D6 23                    1493 	inc	hl
      0005D7 36 03                 1494 	ld	(hl), #0x03
                                   1495 ;main.c:129: move_sprite(tileind, posx, posy + itr * 8);
      0005D9 FAr14r00              1496 	ld	a, (#_itr)
      0005DC 87                    1497 	add	a, a
      0005DD 87                    1498 	add	a, a
      0005DE 87                    1499 	add	a, a
      0005DF 4A                    1500 	ld	c, d
      0005E0 81                    1501 	add	a, c
      0005E1 5F                    1502 	ld	e, a
      0005E2 21r12r00              1503 	ld	hl, #_tileind
      0005E5 4E                    1504 	ld	c, (hl)
                                   1505 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0005E6 26 00                 1506 	ld	h, #0x00
      0005E8 69                    1507 	ld	l, c
      0005E9 29                    1508 	add	hl, hl
      0005EA 29                    1509 	add	hl, hl
      0005EB 01r00r00              1510 	ld	bc, #_shadow_OAM
      0005EE 09                    1511 	add	hl, bc
      0005EF 4D                    1512 	ld	c, l
      0005F0 44                    1513 	ld	b, h
                                   1514 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0005F1 7B                    1515 	ld	a, e
      0005F2 02                    1516 	ld	(bc), a
      0005F3 03                    1517 	inc	bc
      0005F4 F8 02                 1518 	ldhl	sp,	#2
      0005F6 7E                    1519 	ld	a, (hl)
      0005F7 02                    1520 	ld	(bc), a
                                   1521 ;main.c:130: tileind++;
      0005F8 21r12r00              1522 	ld	hl, #_tileind
      0005FB 34                    1523 	inc	(hl)
                                   1524 ;main.c:131: itr++;
      0005FC 21r14r00              1525 	ld	hl, #_itr
      0005FF 34                    1526 	inc	(hl)
      000600 18 A6                 1527 	jr	00103$
      000602                       1528 00105$:
                                   1529 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000602 01r00r00              1530 	ld	bc, #_shadow_OAM+0
      000605 26 00                 1531 	ld	h, #0x00
      000607 6B                    1532 	ld	l, e
      000608 29                    1533 	add	hl, hl
      000609 29                    1534 	add	hl, hl
      00060A 09                    1535 	add	hl, bc
      00060B 23                    1536 	inc	hl
      00060C 23                    1537 	inc	hl
      00060D 36 02                 1538 	ld	(hl), #0x02
                                   1539 ;main.c:135: set_sprite_prop(tileind, 0x40); // Flip the last tile vertically
      00060F 21r12r00              1540 	ld	hl, #_tileind
      000612 5E                    1541 	ld	e, (hl)
                                   1542 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1191: shadow_OAM[nb].prop=prop;
      000613 01r00r00              1543 	ld	bc, #_shadow_OAM+0
      000616 26 00                 1544 	ld	h, #0x00
      000618 6B                    1545 	ld	l, e
      000619 29                    1546 	add	hl, hl
      00061A 29                    1547 	add	hl, hl
      00061B 09                    1548 	add	hl, bc
      00061C 23                    1549 	inc	hl
      00061D 23                    1550 	inc	hl
      00061E 23                    1551 	inc	hl
      00061F 36 40                 1552 	ld	(hl), #0x40
                                   1553 ;main.c:136: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000621 FAr02r00              1554 	ld	a, (#_padheight)
      000624 3D                    1555 	dec	a
      000625 87                    1556 	add	a, a
      000626 87                    1557 	add	a, a
      000627 87                    1558 	add	a, a
      000628 82                    1559 	add	a, d
      000629 4F                    1560 	ld	c, a
      00062A 21r12r00              1561 	ld	hl, #_tileind
      00062D 46                    1562 	ld	b, (hl)
                                   1563 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00062E 26 00                 1564 	ld	h, #0x00
      000630 68                    1565 	ld	l, b
      000631 29                    1566 	add	hl, hl
      000632 29                    1567 	add	hl, hl
      000633 7D                    1568 	ld	a, l
      000634 C6r00                 1569 	add	a, #<(_shadow_OAM)
      000636 5F                    1570 	ld	e, a
      000637 7C                    1571 	ld	a, h
      000638 CEs00                 1572 	adc	a, #>(_shadow_OAM)
      00063A 57                    1573 	ld	d, a
                                   1574 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00063B 79                    1575 	ld	a, c
      00063C 12                    1576 	ld	(de), a
      00063D 13                    1577 	inc	de
      00063E F8 02                 1578 	ldhl	sp,	#2
      000640 7E                    1579 	ld	a, (hl)
      000641 12                    1580 	ld	(de), a
                                   1581 ;main.c:136: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000642                       1582 00115$:
                                   1583 ;main.c:138: }
      000642 E8 05                 1584 	add	sp, #5
      000644 C9                    1585 	ret
                                   1586 ;main.c:140: void scroll_paddle_tiles(Paddle * pdl, INT8 pdlsp) {
                                   1587 ;	---------------------------------
                                   1588 ; Function scroll_paddle_tiles
                                   1589 ; ---------------------------------
      000645                       1590 _scroll_paddle_tiles::
      000645 3B                    1591 	dec	sp
                                   1592 ;main.c:141: for(itr = 0; itr != padheight; itr++) {
      000646 21r14r00              1593 	ld	hl, #_itr
      000649 36 00                 1594 	ld	(hl), #0x00
      00064B F8 05                 1595 	ldhl	sp,	#5
      00064D 7E                    1596 	ld	a, (hl)
      00064E F8 00                 1597 	ldhl	sp,	#0
      000650 77                    1598 	ld	(hl), a
      000651 F8 03                 1599 	ldhl	sp,#3
      000653 2A                    1600 	ld	a, (hl+)
      000654 5F                    1601 	ld	e, a
      000655 56                    1602 	ld	d, (hl)
      000656 13                    1603 	inc	de
      000657 13                    1604 	inc	de
      000658                       1605 00104$:
      000658 FAr14r00              1606 	ld	a, (#_itr)
      00065B 21r02r00              1607 	ld	hl, #_padheight
      00065E 96                    1608 	sub	a, (hl)
      00065F 28 1F                 1609 	jr	Z, 00106$
                                   1610 ;main.c:142: scroll_sprite(pdl->firsttile + itr, 0, pdlsp);
      000661 1A                    1611 	ld	a, (de)
      000662 21r14r00              1612 	ld	hl, #_itr
      000665 86                    1613 	add	a, (hl)
      000666 4F                    1614 	ld	c, a
                                   1615 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      000667 26 00                 1616 	ld	h, #0x00
      000669 69                    1617 	ld	l, c
      00066A 29                    1618 	add	hl, hl
      00066B 29                    1619 	add	hl, hl
      00066C 01r00r00              1620 	ld	bc, #_shadow_OAM
      00066F 09                    1621 	add	hl, bc
      000670 4D                    1622 	ld	c, l
      000671 44                    1623 	ld	b, h
                                   1624 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      000672 0A                    1625 	ld	a, (bc)
      000673 F8 00                 1626 	ldhl	sp,	#0
      000675 86                    1627 	add	a, (hl)
      000676 02                    1628 	ld	(bc), a
      000677 03                    1629 	inc	bc
      000678 0A                    1630 	ld	a, (bc)
      000679 02                    1631 	ld	(bc), a
                                   1632 ;main.c:141: for(itr = 0; itr != padheight; itr++) {
      00067A 21r14r00              1633 	ld	hl, #_itr
      00067D 34                    1634 	inc	(hl)
      00067E 18 D8                 1635 	jr	00104$
      000680                       1636 00106$:
                                   1637 ;main.c:144: }
      000680 33                    1638 	inc	sp
      000681 C9                    1639 	ret
                                   1640 ;main.c:146: void move_paddle(Paddle * pdl, INT8 pdlspd) {
                                   1641 ;	---------------------------------
                                   1642 ; Function move_paddle
                                   1643 ; ---------------------------------
      000682                       1644 _move_paddle::
      000682 E8 F7                 1645 	add	sp, #-9
                                   1646 ;main.c:147: UINT8 nextpdly = pdl->y + pdlspd;
      000684 F8 0B                 1647 	ldhl	sp,	#11
      000686 2A                    1648 	ld	a, (hl+)
      000687 5E                    1649 	ld	e, (hl)
      000688 F8 00                 1650 	ldhl	sp,	#0
      00068A 22                    1651 	ld	(hl+), a
      00068B 73                    1652 	ld	(hl), e
      00068C C1                    1653 	pop	bc
      00068D C5                    1654 	push	bc
      00068E 03                    1655 	inc	bc
      00068F 0A                    1656 	ld	a, (bc)
      000690 F8 0D                 1657 	ldhl	sp,	#13
      000692 86                    1658 	add	a, (hl)
      000693 57                    1659 	ld	d, a
                                   1660 ;main.c:148: if(!hits_walls(nextpdly, padheight * 8)) {
      000694 FAr02r00              1661 	ld	a, (#_padheight)
      000697 87                    1662 	add	a, a
      000698 87                    1663 	add	a, a
      000699 87                    1664 	add	a, a
      00069A C5                    1665 	push	bc
      00069B F5                    1666 	push	af
      00069C 33                    1667 	inc	sp
      00069D D5                    1668 	push	de
      00069E 33                    1669 	inc	sp
      00069F CDr51r02              1670 	call	_hits_walls
      0006A2 E8 02                 1671 	add	sp, #2
      0006A4 7B                    1672 	ld	a, e
      0006A5 C1                    1673 	pop	bc
      0006A6 B7                    1674 	or	a, a
      0006A7 20 1A                 1675 	jr	NZ, 00105$
                                   1676 ;main.c:149: scroll_paddle_tiles(pdl, pdlspd);
      0006A9 C5                    1677 	push	bc
      0006AA F8 0F                 1678 	ldhl	sp,	#15
      0006AC 7E                    1679 	ld	a, (hl)
      0006AD F5                    1680 	push	af
      0006AE 33                    1681 	inc	sp
      0006AF F8 03                 1682 	ldhl	sp,	#3
      0006B1 2A                    1683 	ld	a, (hl+)
      0006B2 66                    1684 	ld	h, (hl)
      0006B3 6F                    1685 	ld	l, a
      0006B4 E5                    1686 	push	hl
      0006B5 CDr45r06              1687 	call	_scroll_paddle_tiles
      0006B8 E8 03                 1688 	add	sp, #3
      0006BA C1                    1689 	pop	bc
                                   1690 ;main.c:150: pdl->y += pdlspd;
      0006BB 0A                    1691 	ld	a, (bc)
      0006BC F8 0D                 1692 	ldhl	sp,	#13
      0006BE 86                    1693 	add	a, (hl)
      0006BF 02                    1694 	ld	(bc), a
      0006C0 C3r58r07              1695 	jp	00107$
      0006C3                       1696 00105$:
                                   1697 ;main.c:151: } else if(pdl->y > bkgborderup || pdl->y + padheight * 8 < bkgborderdown) {
      0006C3 0A                    1698 	ld	a, (bc)
      0006C4 F8 02                 1699 	ldhl	sp,	#2
      0006C6 77                    1700 	ld	(hl), a
      0006C7 FAr4Cr02              1701 	ld	a, (#_bkgborderup)
      0006CA F8 03                 1702 	ldhl	sp,	#3
      0006CC 77                    1703 	ld	(hl), a
      0006CD FAr4Dr02              1704 	ld	a, (#_bkgborderdown)
      0006D0 F8 04                 1705 	ldhl	sp,	#4
      0006D2 32                    1706 	ld	(hl-), a
      0006D3 3A                    1707 	ld	a, (hl-)
      0006D4 96                    1708 	sub	a, (hl)
      0006D5 38 51                 1709 	jr	C, 00101$
      0006D7 7E                    1710 	ld	a, (hl)
      0006D8 F8 07                 1711 	ldhl	sp,	#7
      0006DA 77                    1712 	ld	(hl), a
      0006DB AF                    1713 	xor	a, a
      0006DC 23                    1714 	inc	hl
      0006DD 77                    1715 	ld	(hl), a
      0006DE 21r02r00              1716 	ld	hl, #_padheight
      0006E1 5E                    1717 	ld	e, (hl)
      0006E2 16 00                 1718 	ld	d, #0x00
      0006E4 7B                    1719 	ld	a, e
      0006E5 87                    1720 	add	a, a
      0006E6 CB 12                 1721 	rl	d
      0006E8 87                    1722 	add	a, a
      0006E9 CB 12                 1723 	rl	d
      0006EB 87                    1724 	add	a, a
      0006EC CB 12                 1725 	rl	d
                                   1726 ;c
      0006EE 5F                    1727 	ld	e, a
      0006EF F8 07                 1728 	ldhl	sp,	#7
      0006F1 2A                    1729 	ld	a, (hl+)
      0006F2 66                    1730 	ld	h, (hl)
      0006F3 6F                    1731 	ld	l, a
      0006F4 19                    1732 	add	hl, de
      0006F5 E5                    1733 	push	hl
      0006F6 7D                    1734 	ld	a, l
      0006F7 F8 07                 1735 	ldhl	sp,	#7
      0006F9 77                    1736 	ld	(hl), a
      0006FA E1                    1737 	pop	hl
      0006FB 7C                    1738 	ld	a, h
      0006FC F8 06                 1739 	ldhl	sp,	#6
      0006FE 32                    1740 	ld	(hl-), a
      0006FF 2B                    1741 	dec	hl
      000700 7E                    1742 	ld	a, (hl)
      000701 F8 07                 1743 	ldhl	sp,	#7
      000703 77                    1744 	ld	(hl), a
      000704 AF                    1745 	xor	a, a
      000705 23                    1746 	inc	hl
      000706 77                    1747 	ld	(hl), a
      000707 F8 05                 1748 	ldhl	sp,	#5
      000709 5D                    1749 	ld	e, l
      00070A 54                    1750 	ld	d, h
      00070B F8 07                 1751 	ldhl	sp,	#7
      00070D 1A                    1752 	ld	a, (de)
      00070E 96                    1753 	sub	a, (hl)
      00070F 23                    1754 	inc	hl
      000710 13                    1755 	inc	de
      000711 1A                    1756 	ld	a, (de)
      000712 9E                    1757 	sbc	a, (hl)
      000713 1A                    1758 	ld	a, (de)
      000714 57                    1759 	ld	d, a
      000715 5E                    1760 	ld	e, (hl)
      000716 CB 7B                 1761 	bit	7, e
      000718 28 07                 1762 	jr	Z, 00127$
      00071A CB 7A                 1763 	bit	7, d
      00071C 20 08                 1764 	jr	NZ, 00128$
      00071E BF                    1765 	cp	a, a
      00071F 18 05                 1766 	jr	00128$
      000721                       1767 00127$:
      000721 CB 7A                 1768 	bit	7, d
      000723 28 01                 1769 	jr	Z, 00128$
      000725 37                    1770 	scf
      000726                       1771 00128$:
      000726 30 30                 1772 	jr	NC, 00107$
      000728                       1773 00101$:
                                   1774 ;main.c:153: INT8 adjspd = pdlspd < 0 ? bkgborderup - pdl->y : bkgborderdown - (pdl->y + padheight * 8);
      000728 F8 0D                 1775 	ldhl	sp,	#13
      00072A CB 7E                 1776 	bit	7, (hl)
      00072C 28 06                 1777 	jr	Z, 00109$
      00072E F8 03                 1778 	ldhl	sp,	#3
      000730 3A                    1779 	ld	a, (hl-)
      000731 96                    1780 	sub	a, (hl)
      000732 18 0F                 1781 	jr	00110$
      000734                       1782 00109$:
      000734 FAr02r00              1783 	ld	a, (#_padheight)
      000737 87                    1784 	add	a, a
      000738 87                    1785 	add	a, a
      000739 87                    1786 	add	a, a
      00073A F8 02                 1787 	ldhl	sp,	#2
      00073C 5E                    1788 	ld	e, (hl)
      00073D 83                    1789 	add	a, e
      00073E 5F                    1790 	ld	e, a
      00073F 23                    1791 	inc	hl
      000740 23                    1792 	inc	hl
      000741 7E                    1793 	ld	a, (hl)
      000742 93                    1794 	sub	a, e
      000743                       1795 00110$:
      000743 57                    1796 	ld	d, a
                                   1797 ;main.c:154: scroll_paddle_tiles(pdl, adjspd);
      000744 C5                    1798 	push	bc
      000745 D5                    1799 	push	de
      000746 D5                    1800 	push	de
      000747 33                    1801 	inc	sp
      000748 F8 05                 1802 	ldhl	sp,	#5
      00074A 2A                    1803 	ld	a, (hl+)
      00074B 66                    1804 	ld	h, (hl)
      00074C 6F                    1805 	ld	l, a
      00074D E5                    1806 	push	hl
      00074E CDr45r06              1807 	call	_scroll_paddle_tiles
      000751 E8 03                 1808 	add	sp, #3
      000753 D1                    1809 	pop	de
      000754 C1                    1810 	pop	bc
                                   1811 ;main.c:155: pdl->y += adjspd;
      000755 0A                    1812 	ld	a, (bc)
      000756 82                    1813 	add	a, d
      000757 02                    1814 	ld	(bc), a
      000758                       1815 00107$:
                                   1816 ;main.c:157: }
      000758 E8 09                 1817 	add	sp, #9
      00075A C9                    1818 	ret
                                   1819 ;main.c:159: void action_cpu() {
                                   1820 ;	---------------------------------
                                   1821 ; Function action_cpu
                                   1822 ; ---------------------------------
      00075B                       1823 _action_cpu::
      00075B 3B                    1824 	dec	sp
                                   1825 ;main.c:160: if(ball.x > difficulty_px[difficulty]) { // Determine when the cpu will react to the ball's position
      00075C 21r0Er00              1826 	ld	hl, #_ball
      00075F 4E                    1827 	ld	c, (hl)
      000760 11r42r02              1828 	ld	de, #_difficulty_px+0
      000763 7B                    1829 	ld	a, e
      000764 21r13r00              1830 	ld	hl, #_difficulty
      000767 86                    1831 	add	a, (hl)
      000768 5F                    1832 	ld	e, a
      000769 30 01                 1833 	jr	NC, 00117$
      00076B 14                    1834 	inc	d
      00076C                       1835 00117$:
      00076C 1A                    1836 	ld	a, (de)
      00076D 91                    1837 	sub	a, c
      00076E 30 2A                 1838 	jr	NC, 00103$
                                   1839 ;main.c:161: move_paddle(&pdlcpu, pdlcpu.y < ball.y ? padspeed : -padspeed);
      000770 21r0Cr00              1840 	ld	hl, #_pdlcpu + 1
      000773 4E                    1841 	ld	c, (hl)
      000774 21r0Fr00              1842 	ld	hl, #(_ball + 0x0001)
      000777 46                    1843 	ld	b, (hl)
      000778 79                    1844 	ld	a, c
      000779 90                    1845 	sub	a, b
      00077A 30 08                 1846 	jr	NC, 00105$
      00077C FAr03r00              1847 	ld	a, (#_padspeed)
      00077F F8 00                 1848 	ldhl	sp,	#0
      000781 77                    1849 	ld	(hl), a
      000782 18 08                 1850 	jr	00106$
      000784                       1851 00105$:
      000784 AF                    1852 	xor	a, a
      000785 21r03r00              1853 	ld	hl, #_padspeed
      000788 96                    1854 	sub	a, (hl)
      000789 F8 00                 1855 	ldhl	sp,	#0
      00078B 77                    1856 	ld	(hl), a
      00078C                       1857 00106$:
      00078C F8 00                 1858 	ldhl	sp,	#0
      00078E 7E                    1859 	ld	a, (hl)
      00078F F5                    1860 	push	af
      000790 33                    1861 	inc	sp
      000791 21r0Br00              1862 	ld	hl, #_pdlcpu
      000794 E5                    1863 	push	hl
      000795 CDr82r06              1864 	call	_move_paddle
      000798 E8 03                 1865 	add	sp, #3
      00079A                       1866 00103$:
                                   1867 ;main.c:163: }
      00079A 33                    1868 	inc	sp
      00079B C9                    1869 	ret
                                   1870 ;main.c:166: void auto_speed_adj() {
                                   1871 ;	---------------------------------
                                   1872 ; Function auto_speed_adj
                                   1873 ; ---------------------------------
      00079C                       1874 _auto_speed_adj::
                                   1875 ;main.c:167: if(chspeedflgdir == -ball.speedx) {
      00079C FAr10r00              1876 	ld	a, (#(_ball + 0x0002) + 0)
      00079F 4F                    1877 	ld	c, a
      0007A0 17                    1878 	rla
      0007A1 9F                    1879 	sbc	a, a
      0007A2 47                    1880 	ld	b, a
      0007A3 AF                    1881 	xor	a, a
      0007A4 91                    1882 	sub	a, c
      0007A5 4F                    1883 	ld	c, a
      0007A6 3E 00                 1884 	ld	a, #0x00
      0007A8 98                    1885 	sbc	a, b
      0007A9 47                    1886 	ld	b, a
      0007AA FAr1Br00              1887 	ld	a, (#_chspeedflgdir)
      0007AD 5F                    1888 	ld	e, a
      0007AE 17                    1889 	rla
      0007AF 9F                    1890 	sbc	a, a
      0007B0 57                    1891 	ld	d, a
      0007B1 7B                    1892 	ld	a, e
      0007B2 91                    1893 	sub	a, c
      0007B3 C0                    1894 	ret	NZ
      0007B4 7A                    1895 	ld	a, d
      0007B5 90                    1896 	sub	a, b
      0007B6 C0                    1897 	ret	NZ
                                   1898 ;main.c:169: paddlehitscnt++;
      0007B7 21r1Cr00              1899 	ld	hl, #_paddlehitscnt
      0007BA 34                    1900 	inc	(hl)
                                   1901 ;main.c:170: chspeedflgdir = ball.speedx; // New ball horizontal direction
      0007BB FAr10r00              1902 	ld	a, (#(_ball + 0x0002) + 0)
      0007BE EAr1Br00              1903 	ld	(#_chspeedflgdir),a
                                   1904 ;main.c:171: if(speedind != 3 && paddlehitscnt == speedchframes[speedind]) {
      0007C1 FAr1Dr00              1905 	ld	a, (#_speedind)
      0007C4 D6 03                 1906 	sub	a, #0x03
      0007C6 C8                    1907 	ret	Z
      0007C7 01r4Er02              1908 	ld	bc, #_speedchframes+0
      0007CA 79                    1909 	ld	a, c
      0007CB 21r1Dr00              1910 	ld	hl, #_speedind
      0007CE 86                    1911 	add	a, (hl)
      0007CF 4F                    1912 	ld	c, a
      0007D0 30 01                 1913 	jr	NC, 00126$
      0007D2 04                    1914 	inc	b
      0007D3                       1915 00126$:
      0007D3 0A                    1916 	ld	a, (bc)
      0007D4 4F                    1917 	ld	c, a
      0007D5 FAr1Cr00              1918 	ld	a, (#_paddlehitscnt)
      0007D8 91                    1919 	sub	a, c
      0007D9 C0                    1920 	ret	NZ
                                   1921 ;main.c:172: speedind++; // Checking for next speed threshold
      0007DA 21r1Dr00              1922 	ld	hl, #_speedind
      0007DD 34                    1923 	inc	(hl)
                                   1924 ;main.c:173: ballmvframe--; // Speed up
      0007DE 21r01r00              1925 	ld	hl, #_ballmvframe
      0007E1 35                    1926 	dec	(hl)
                                   1927 ;main.c:174: framecnt--; // Preventing overflow when calculating next framecnt
      0007E2 21r00r00              1928 	ld	hl, #_framecnt
      0007E5 35                    1929 	dec	(hl)
                                   1930 ;main.c:177: }
      0007E6 C9                    1931 	ret
                                   1932 ;main.c:180: void init_game() {
                                   1933 ;	---------------------------------
                                   1934 ; Function init_game
                                   1935 ; ---------------------------------
      0007E7                       1936 _init_game::
                                   1937 ;main.c:181: set_bkg_data(0, 7, pongbkgtiles);
      0007E7 21r19r00              1938 	ld	hl, #_pongbkgtiles
      0007EA E5                    1939 	push	hl
      0007EB 3E 07                 1940 	ld	a, #0x07
      0007ED F5                    1941 	push	af
      0007EE 33                    1942 	inc	sp
      0007EF AF                    1943 	xor	a, a
      0007F0 F5                    1944 	push	af
      0007F1 33                    1945 	inc	sp
      0007F2 CDr00r00              1946 	call	_set_bkg_data
      0007F5 E8 04                 1947 	add	sp, #4
                                   1948 ;main.c:182: set_bkg_tiles(0, 0, 20, 18, ponggamemap);
      0007F7 21r89r00              1949 	ld	hl, #_ponggamemap
      0007FA E5                    1950 	push	hl
      0007FB 11 14 12              1951 	ld	de, #0x1214
      0007FE D5                    1952 	push	de
      0007FF AF                    1953 	xor	a, a
      000800 F5                    1954 	push	af
      000801 33                    1955 	inc	sp
      000802 AF                    1956 	xor	a, a
      000803 F5                    1957 	push	af
      000804 33                    1958 	inc	sp
      000805 CDr00r00              1959 	call	_set_bkg_tiles
      000808 E8 06                 1960 	add	sp, #6
                                   1961 ;main.c:184: set_sprite_data(0, 5, pongspritetiles);
      00080A 21rF1r01              1962 	ld	hl, #_pongspritetiles
      00080D E5                    1963 	push	hl
      00080E 3E 05                 1964 	ld	a, #0x05
      000810 F5                    1965 	push	af
      000811 33                    1966 	inc	sp
      000812 AF                    1967 	xor	a, a
      000813 F5                    1968 	push	af
      000814 33                    1969 	inc	sp
      000815 CDr00r00              1970 	call	_set_sprite_data
      000818 E8 04                 1971 	add	sp, #4
                                   1972 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      00081A 21r02r00              1973 	ld	hl, #(_shadow_OAM + 0x0002)
      00081D 36 04                 1974 	ld	(hl), #0x04
                                   1975 ;main.c:186: ball.x = ball.y = startballposxy;
      00081F 21r41r02              1976 	ld	hl, #_startballposxy
      000822 46                    1977 	ld	b, (hl)
      000823 21r0Fr00              1978 	ld	hl, #(_ball + 0x0001)
      000826 70                    1979 	ld	(hl), b
      000827 21r0Er00              1980 	ld	hl, #_ball
      00082A 70                    1981 	ld	(hl), b
                                   1982 ;main.c:187: move_sprite(0, ball.x, ball.y); // Move ball to the middle of the playing field
      00082B 21r0Er00              1983 	ld	hl, #_ball
      00082E 4E                    1984 	ld	c, (hl)
                                   1985 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00082F 21r00r00              1986 	ld	hl, #_shadow_OAM
                                   1987 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000832 78                    1988 	ld	a, b
      000833 22                    1989 	ld	(hl+), a
      000834 71                    1990 	ld	(hl), c
                                   1991 ;main.c:191: padinity = 16 + (144 - (padheight * 8)) / 2;
      000835 21r02r00              1992 	ld	hl, #_padheight
      000838 6E                    1993 	ld	l, (hl)
      000839 26 00                 1994 	ld	h, #0x00
      00083B 29                    1995 	add	hl, hl
      00083C 29                    1996 	add	hl, hl
      00083D 29                    1997 	add	hl, hl
      00083E 3E 90                 1998 	ld	a, #0x90
      000840 95                    1999 	sub	a, l
      000841 6F                    2000 	ld	l, a
      000842 3E 00                 2001 	ld	a, #0x00
      000844 9C                    2002 	sbc	a, h
      000845 67                    2003 	ld	h, a
      000846 4D                    2004 	ld	c, l
      000847 44                    2005 	ld	b, h
      000848 CB 7C                 2006 	bit	7, h
      00084A 28 03                 2007 	jr	Z, 00108$
      00084C 23                    2008 	inc	hl
      00084D 4D                    2009 	ld	c, l
      00084E 44                    2010 	ld	b, h
      00084F                       2011 00108$:
      00084F CB 28                 2012 	sra	b
      000851 CB 19                 2013 	rr	c
      000853 79                    2014 	ld	a, c
      000854 C6 10                 2015 	add	a, #0x10
      000856 21r07r00              2016 	ld	hl, #_padinity
      000859 77                    2017 	ld	(hl), a
                                   2018 ;main.c:192: init_paddle(&pdlpl1, 2, 16, padinity);
      00085A 56                    2019 	ld	d, (hl)
      00085B 1E 10                 2020 	ld	e,#0x10
      00085D D5                    2021 	push	de
      00085E 3E 02                 2022 	ld	a, #0x02
      000860 F5                    2023 	push	af
      000861 33                    2024 	inc	sp
      000862 21r08r00              2025 	ld	hl, #_pdlpl1
      000865 E5                    2026 	push	hl
      000866 CDr32r05              2027 	call	_init_paddle
      000869 E8 05                 2028 	add	sp, #5
                                   2029 ;main.c:193: init_paddle(&pdlcpu, pdlpl1.firsttile + padheight, 152, padinity);
      00086B FAr0Ar00              2030 	ld	a, (#(_pdlpl1 + 0x0002) + 0)
      00086E 21r02r00              2031 	ld	hl, #_padheight
      000871 86                    2032 	add	a, (hl)
      000872 47                    2033 	ld	b, a
      000873 FAr07r00              2034 	ld	a, (#_padinity)
      000876 57                    2035 	ld	d,a
      000877 1E 98                 2036 	ld	e,#0x98
      000879 D5                    2037 	push	de
      00087A C5                    2038 	push	bc
      00087B 33                    2039 	inc	sp
      00087C 21r0Br00              2040 	ld	hl, #_pdlcpu
      00087F E5                    2041 	push	hl
      000880 CDr32r05              2042 	call	_init_paddle
      000883 E8 05                 2043 	add	sp, #5
                                   2044 ;main.c:194: set_pad_sectors();
      000885 CDr00r00              2045 	call	_set_pad_sectors
                                   2046 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000888 21r04r00              2047 	ld	hl, #(_shadow_OAM + 0x0004)
                                   2048 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00088B 3E 50                 2049 	ld	a, #0x50
      00088D 22                    2050 	ld	(hl+), a
      00088E 36 18                 2051 	ld	(hl), #0x18
                                   2052 ;main.c:197: pl1score = cpuscore = 0;
      000890 21r18r00              2053 	ld	hl, #_cpuscore
      000893 36 00                 2054 	ld	(hl), #0x00
      000895 21r17r00              2055 	ld	hl, #_pl1score
      000898 36 00                 2056 	ld	(hl), #0x00
                                   2057 ;main.c:198: roundcnt = 1;
      00089A 21r1Fr00              2058 	ld	hl, #_roundcnt
      00089D 36 01                 2059 	ld	(hl), #0x01
                                   2060 ;main.c:199: framecnt  = 0;
      00089F 21r00r00              2061 	ld	hl, #_framecnt
      0008A2 36 00                 2062 	ld	(hl), #0x00
                                   2063 ;main.c:200: if(autospeedflg) {
      0008A4 FAr1Ar00              2064 	ld	a, (#_autospeedflg)
      0008A7 B7                    2065 	or	a, a
      0008A8 C8                    2066 	ret	Z
                                   2067 ;main.c:201: speedind = 0;
      0008A9 21r1Dr00              2068 	ld	hl, #_speedind
      0008AC 36 00                 2069 	ld	(hl), #0x00
                                   2070 ;main.c:202: paddlehitscnt = 0;
      0008AE 21r1Cr00              2071 	ld	hl, #_paddlehitscnt
      0008B1 36 00                 2072 	ld	(hl), #0x00
                                   2073 ;main.c:203: ballmvframe = 4;
      0008B3 21r01r00              2074 	ld	hl, #_ballmvframe
      0008B6 36 04                 2075 	ld	(hl), #0x04
                                   2076 ;main.c:205: }
      0008B8 C9                    2077 	ret
                                   2078 ;main.c:207: void prep_next_round() {
                                   2079 ;	---------------------------------
                                   2080 ; Function prep_next_round
                                   2081 ; ---------------------------------
      0008B9                       2082 _prep_next_round::
                                   2083 ;main.c:209: ball.x = ball.y = startballposxy;
      0008B9 21r41r02              2084 	ld	hl, #_startballposxy
      0008BC 46                    2085 	ld	b, (hl)
      0008BD 21r0Fr00              2086 	ld	hl, #(_ball + 0x0001)
      0008C0 70                    2087 	ld	(hl), b
      0008C1 21r0Er00              2088 	ld	hl, #_ball
      0008C4 70                    2089 	ld	(hl), b
                                   2090 ;main.c:210: move_sprite(0, ball.x, ball.y);
      0008C5 21r0Er00              2091 	ld	hl, #_ball
      0008C8 4E                    2092 	ld	c, (hl)
                                   2093 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0008C9 21r00r00              2094 	ld	hl, #_shadow_OAM
                                   2095 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0008CC 78                    2096 	ld	a, b
      0008CD 22                    2097 	ld	(hl+), a
      0008CE 71                    2098 	ld	(hl), c
                                   2099 ;main.c:213: scroll_paddle_tiles(&pdlpl1, padinity - pdlpl1.y);
      0008CF 21r09r00              2100 	ld	hl, #(_pdlpl1 + 0x0001)
      0008D2 4E                    2101 	ld	c, (hl)
      0008D3 FAr07r00              2102 	ld	a, (#_padinity)
      0008D6 91                    2103 	sub	a, c
      0008D7 47                    2104 	ld	b, a
      0008D8 C5                    2105 	push	bc
      0008D9 33                    2106 	inc	sp
      0008DA 21r08r00              2107 	ld	hl, #_pdlpl1
      0008DD E5                    2108 	push	hl
      0008DE CDr45r06              2109 	call	_scroll_paddle_tiles
      0008E1 E8 03                 2110 	add	sp, #3
                                   2111 ;main.c:214: scroll_paddle_tiles(&pdlcpu, padinity - pdlcpu.y);
      0008E3 21r0Cr00              2112 	ld	hl, #(_pdlcpu + 0x0001)
      0008E6 4E                    2113 	ld	c, (hl)
      0008E7 FAr07r00              2114 	ld	a, (#_padinity)
      0008EA 91                    2115 	sub	a, c
      0008EB 47                    2116 	ld	b, a
      0008EC C5                    2117 	push	bc
      0008ED 33                    2118 	inc	sp
      0008EE 21r0Br00              2119 	ld	hl, #_pdlcpu
      0008F1 E5                    2120 	push	hl
      0008F2 CDr45r06              2121 	call	_scroll_paddle_tiles
      0008F5 E8 03                 2122 	add	sp, #3
                                   2123 ;main.c:215: pdlpl1.y = pdlcpu.y = padinity;
      0008F7 11r0Cr00              2124 	ld	de, #(_pdlcpu + 0x0001)
      0008FA 21r07r00              2125 	ld	hl, #_padinity
      0008FD 7E                    2126 	ld	a, (hl)
      0008FE 12                    2127 	ld	(de), a
      0008FF 11r09r00              2128 	ld	de, #(_pdlpl1 + 0x0001)
      000902 7E                    2129 	ld	a, (hl)
      000903 12                    2130 	ld	(de), a
                                   2131 ;main.c:216: roundcnt++;
      000904 21r1Fr00              2132 	ld	hl, #_roundcnt
      000907 34                    2133 	inc	(hl)
                                   2134 ;main.c:217: framecnt  = 0;
      000908 21r00r00              2135 	ld	hl, #_framecnt
      00090B 36 00                 2136 	ld	(hl), #0x00
                                   2137 ;main.c:220: if(autospeedflg) {
      00090D FAr1Ar00              2138 	ld	a, (#_autospeedflg)
      000910 B7                    2139 	or	a, a
      000911 C8                    2140 	ret	Z
                                   2141 ;main.c:221: speedind = 1;
      000912 21r1Dr00              2142 	ld	hl, #_speedind
      000915 36 01                 2143 	ld	(hl), #0x01
                                   2144 ;main.c:222: ballmvframe = 3;
      000917 21r01r00              2145 	ld	hl, #_ballmvframe
      00091A 36 03                 2146 	ld	(hl), #0x03
                                   2147 ;main.c:223: paddlehitscnt = speedchframes[0];
      00091C FAr4Er02              2148 	ld	a, (#_speedchframes + 0)
      00091F EAr1Cr00              2149 	ld	(#_paddlehitscnt),a
                                   2150 ;main.c:225: }
      000922 C9                    2151 	ret
                                   2152 ;main.c:227: void begin_round() {
                                   2153 ;	---------------------------------
                                   2154 ; Function begin_round
                                   2155 ; ---------------------------------
      000923                       2156 _begin_round::
                                   2157 ;main.c:229: while(1) {  // Start round or return to titlescreen
      000923                       2158 00107$:
                                   2159 ;main.c:230: initrand(DIV_REG);
      000923 F0r00                 2160 	ldh	a, (_DIV_REG+0)
      000925 4F                    2161 	ld	c, a
      000926 06 00                 2162 	ld	b, #0x00
      000928 C5                    2163 	push	bc
      000929 CDr00r00              2164 	call	_initrand
      00092C E8 02                 2165 	add	sp, #2
                                   2166 ;main.c:231: if(joypad() & J_START) {
      00092E CDr00r00              2167 	call	_joypad
      000931 7B                    2168 	ld	a, e
      000932 07                    2169 	rlca
      000933 38 0D                 2170 	jr	C, 00108$
                                   2171 ;main.c:233: } else if(joypad() & J_SELECT) {
      000935 CDr00r00              2172 	call	_joypad
      000938 CB 73                 2173 	bit	6, e
      00093A 28 E7                 2174 	jr	Z, 00107$
                                   2175 ;main.c:234: exitgameflg = 1;
      00093C 21r19r00              2176 	ld	hl, #_exitgameflg
      00093F 36 01                 2177 	ld	(hl), #0x01
                                   2178 ;main.c:235: return;
      000941 C9                    2179 	ret
      000942                       2180 00108$:
                                   2181 ;main.c:239: randindx = rand() % 2; // Random number between 0 and 1
      000942 CDr00r00              2182 	call	_rand
      000945 7B                    2183 	ld	a, e
      000946 17                    2184 	rla
      000947 9F                    2185 	sbc	a, a
      000948 57                    2186 	ld	d, a
      000949 21 02 00              2187 	ld	hl, #0x0002
      00094C E5                    2188 	push	hl
      00094D D5                    2189 	push	de
      00094E CDr00r00              2190 	call	__modsint
      000951 E8 04                 2191 	add	sp, #4
      000953 21r15r00              2192 	ld	hl, #_randindx
      000956 73                    2193 	ld	(hl), e
                                   2194 ;main.c:240: initrand(DIV_REG);
      000957 F0r00                 2195 	ldh	a, (_DIV_REG+0)
      000959 4F                    2196 	ld	c, a
      00095A 06 00                 2197 	ld	b, #0x00
      00095C C5                    2198 	push	bc
      00095D CDr00r00              2199 	call	_initrand
      000960 E8 02                 2200 	add	sp, #2
                                   2201 ;main.c:241: randindy = rand() % 5; // Random number between 0 and 4
      000962 CDr00r00              2202 	call	_rand
      000965 7B                    2203 	ld	a, e
      000966 17                    2204 	rla
      000967 9F                    2205 	sbc	a, a
      000968 57                    2206 	ld	d, a
      000969 21 05 00              2207 	ld	hl, #0x0005
      00096C E5                    2208 	push	hl
      00096D D5                    2209 	push	de
      00096E CDr00r00              2210 	call	__modsint
      000971 E8 04                 2211 	add	sp, #4
      000973 21r16r00              2212 	ld	hl, #_randindy
      000976 73                    2213 	ld	(hl), e
                                   2214 ;main.c:242: ball.speedx = stspeedpoolx[randindx];
      000977 01r45r02              2215 	ld	bc, #_stspeedpoolx+0
      00097A 79                    2216 	ld	a, c
      00097B 21r15r00              2217 	ld	hl, #_randindx
      00097E 86                    2218 	add	a, (hl)
      00097F 4F                    2219 	ld	c, a
      000980 30 01                 2220 	jr	NC, 00186$
      000982 04                    2221 	inc	b
      000983                       2222 00186$:
      000983 0A                    2223 	ld	a, (bc)
      000984 4F                    2224 	ld	c, a
      000985 21r10r00              2225 	ld	hl, #(_ball + 0x0002)
      000988 71                    2226 	ld	(hl), c
                                   2227 ;main.c:243: ball.speedy = stspeedpooly[randindy];
      000989 11r47r02              2228 	ld	de, #_stspeedpooly+0
      00098C 7B                    2229 	ld	a, e
      00098D 21r16r00              2230 	ld	hl, #_randindy
      000990 86                    2231 	add	a, (hl)
      000991 5F                    2232 	ld	e, a
      000992 30 01                 2233 	jr	NC, 00187$
      000994 14                    2234 	inc	d
      000995                       2235 00187$:
      000995 1A                    2236 	ld	a, (de)
      000996 EAr11r00              2237 	ld	(#(_ball + 0x0003)),a
                                   2238 ;main.c:244: chspeedflgdir = ball.speedx;
      000999 21r1Br00              2239 	ld	hl, #_chspeedflgdir
      00099C 71                    2240 	ld	(hl), c
                                   2241 ;main.c:246: while(1) {
      00099D                       2242 00122$:
                                   2243 ;main.c:247: if(autospeedflg) {
      00099D FAr1Ar00              2244 	ld	a, (#_autospeedflg)
      0009A0 B7                    2245 	or	a, a
      0009A1 28 03                 2246 	jr	Z, 00110$
                                   2247 ;main.c:248: auto_speed_adj();
      0009A3 CDr9Cr07              2248 	call	_auto_speed_adj
      0009A6                       2249 00110$:
                                   2250 ;main.c:251: framecnt += framecnt != ballmvframe ? 1 : -ballmvframe + 1; // Resetting the frame counter
      0009A6 FAr00r00              2251 	ld	a, (#_framecnt)
      0009A9 21r01r00              2252 	ld	hl, #_ballmvframe
      0009AC 96                    2253 	sub	a, (hl)
      0009AD 28 05                 2254 	jr	Z, 00126$
      0009AF 01 01 00              2255 	ld	bc, #0x0001
      0009B2 18 09                 2256 	jr	00127$
      0009B4                       2257 00126$:
      0009B4 AF                    2258 	xor	a, a
      0009B5 21r01r00              2259 	ld	hl, #_ballmvframe
      0009B8 96                    2260 	sub	a, (hl)
      0009B9 4F                    2261 	ld	c, a
      0009BA 0C                    2262 	inc	c
      0009BB 79                    2263 	ld	a, c
      0009BC 17                    2264 	rla
      0009BD                       2265 00127$:
      0009BD 21r00r00              2266 	ld	hl, #_framecnt
      0009C0 7E                    2267 	ld	a, (hl)
      0009C1 81                    2268 	add	a, c
      0009C2 77                    2269 	ld	(hl), a
                                   2270 ;main.c:253: switch(joypad()) {
      0009C3 CDr00r00              2271 	call	_joypad
      0009C6 7B                    2272 	ld	a, e
      0009C7 FE 04                 2273 	cp	a, #0x04
      0009C9 28 06                 2274 	jr	Z, 00111$
      0009CB D6 08                 2275 	sub	a, #0x08
      0009CD 28 15                 2276 	jr	Z, 00112$
      0009CF 18 21                 2277 	jr	00113$
                                   2278 ;main.c:254: case J_UP:
      0009D1                       2279 00111$:
                                   2280 ;main.c:255: move_paddle(&pdlpl1, -padspeed);
      0009D1 AF                    2281 	xor	a, a
      0009D2 21r03r00              2282 	ld	hl, #_padspeed
      0009D5 96                    2283 	sub	a, (hl)
      0009D6 47                    2284 	ld	b, a
      0009D7 C5                    2285 	push	bc
      0009D8 33                    2286 	inc	sp
      0009D9 21r08r00              2287 	ld	hl, #_pdlpl1
      0009DC E5                    2288 	push	hl
      0009DD CDr82r06              2289 	call	_move_paddle
      0009E0 E8 03                 2290 	add	sp, #3
                                   2291 ;main.c:256: break;
      0009E2 18 0E                 2292 	jr	00113$
                                   2293 ;main.c:257: case J_DOWN:
      0009E4                       2294 00112$:
                                   2295 ;main.c:258: move_paddle(&pdlpl1, padspeed);
      0009E4 FAr03r00              2296 	ld	a, (#_padspeed)
      0009E7 F5                    2297 	push	af
      0009E8 33                    2298 	inc	sp
      0009E9 21r08r00              2299 	ld	hl, #_pdlpl1
      0009EC E5                    2300 	push	hl
      0009ED CDr82r06              2301 	call	_move_paddle
      0009F0 E8 03                 2302 	add	sp, #3
                                   2303 ;main.c:260: }
      0009F2                       2304 00113$:
                                   2305 ;main.c:262: if(framecnt == ballmvframe) {
      0009F2 FAr00r00              2306 	ld	a, (#_framecnt)
      0009F5 21r01r00              2307 	ld	hl, #_ballmvframe
      0009F8 96                    2308 	sub	a, (hl)
      0009F9 20 0D                 2309 	jr	NZ, 00115$
                                   2310 ;main.c:263: move_ball(&pdlpl1, &pdlcpu);
      0009FB 21r0Br00              2311 	ld	hl, #_pdlcpu
      0009FE E5                    2312 	push	hl
      0009FF 21r08r00              2313 	ld	hl, #_pdlpl1
      000A02 E5                    2314 	push	hl
      000A03 CDr7Er04              2315 	call	_move_ball
      000A06 E8 04                 2316 	add	sp, #4
      000A08                       2317 00115$:
                                   2318 ;main.c:266: action_cpu();
      000A08 CDr5Br07              2319 	call	_action_cpu
                                   2320 ;main.c:267: if(is_round_over()) {
      000A0B CDr2Er0A              2321 	call	_is_round_over
      000A0E 7B                    2322 	ld	a, e
      000A0F B7                    2323 	or	a, a
      000A10 28 16                 2324 	jr	Z, 00120$
                                   2325 ;main.c:268: if(ball.x < startballposxy) { // Compare to the middle of the field x
      000A12 21r0Er00              2326 	ld	hl, #_ball
      000A15 4E                    2327 	ld	c, (hl)
      000A16 21r41r02              2328 	ld	hl, #_startballposxy
      000A19 46                    2329 	ld	b, (hl)
      000A1A 79                    2330 	ld	a, c
      000A1B 90                    2331 	sub	a, b
      000A1C 30 05                 2332 	jr	NC, 00117$
                                   2333 ;main.c:269: pl1score++;
      000A1E 21r17r00              2334 	ld	hl, #_pl1score
      000A21 34                    2335 	inc	(hl)
      000A22 C9                    2336 	ret
      000A23                       2337 00117$:
                                   2338 ;main.c:271: cpuscore++;
      000A23 21r18r00              2339 	ld	hl, #_cpuscore
      000A26 34                    2340 	inc	(hl)
                                   2341 ;main.c:273: break;
      000A27 C9                    2342 	ret
      000A28                       2343 00120$:
                                   2344 ;main.c:275: wait_vbl_done();
      000A28 CDr00r00              2345 	call	_wait_vbl_done
                                   2346 ;main.c:277: }
      000A2B C3r9Dr09              2347 	jp	00122$
                                   2348 ;main.c:279: UBYTE is_round_over() {
                                   2349 ;	---------------------------------
                                   2350 ; Function is_round_over
                                   2351 ; ---------------------------------
      000A2E                       2352 _is_round_over::
      000A2E E8 FE                 2353 	add	sp, #-2
                                   2354 ;main.c:280: return ball.x + 8 < pdlpl1.x - 8 || ball.x > pdlcpu.x + 16;
      000A30 FAr0Er00              2355 	ld	a, (#_ball + 0)
      000A33 F8 00                 2356 	ldhl	sp,	#0
      000A35 77                    2357 	ld	(hl), a
      000A36 AF                    2358 	xor	a, a
      000A37 23                    2359 	inc	hl
      000A38 77                    2360 	ld	(hl), a
                                   2361 ;c
      000A39 D1                    2362 	pop	de
      000A3A D5                    2363 	push	de
      000A3B 21 08 00              2364 	ld	hl, #0x0008
      000A3E 19                    2365 	add	hl, de
      000A3F 4D                    2366 	ld	c, l
      000A40 44                    2367 	ld	b, h
      000A41 FAr08r00              2368 	ld	a, (#_pdlpl1 + 0)
      000A44 1E 00                 2369 	ld	e, #0x00
      000A46 C6 F8                 2370 	add	a, #0xf8
      000A48 6F                    2371 	ld	l, a
      000A49 7B                    2372 	ld	a, e
      000A4A CE FF                 2373 	adc	a, #0xff
      000A4C 67                    2374 	ld	h, a
      000A4D 5C                    2375 	ld	e, h
      000A4E 50                    2376 	ld	d, b
      000A4F 79                    2377 	ld	a, c
      000A50 95                    2378 	sub	a, l
      000A51 78                    2379 	ld	a, b
      000A52 9C                    2380 	sbc	a, h
      000A53 CB 7B                 2381 	bit	7, e
      000A55 28 07                 2382 	jr	Z, 00116$
      000A57 CB 7A                 2383 	bit	7, d
      000A59 20 08                 2384 	jr	NZ, 00117$
      000A5B BF                    2385 	cp	a, a
      000A5C 18 05                 2386 	jr	00117$
      000A5E                       2387 00116$:
      000A5E CB 7A                 2388 	bit	7, d
      000A60 28 01                 2389 	jr	Z, 00117$
      000A62 37                    2390 	scf
      000A63                       2391 00117$:
      000A63 38 2A                 2392 	jr	C, 00104$
      000A65 FAr0Br00              2393 	ld	a, (#_pdlcpu + 0)
      000A68 0E 00                 2394 	ld	c, #0x00
      000A6A C6 10                 2395 	add	a, #0x10
      000A6C 47                    2396 	ld	b, a
      000A6D 30 01                 2397 	jr	NC, 00118$
      000A6F 0C                    2398 	inc	c
      000A70                       2399 00118$:
      000A70 F8 00                 2400 	ldhl	sp,	#0
      000A72 78                    2401 	ld	a, b
      000A73 96                    2402 	sub	a, (hl)
      000A74 23                    2403 	inc	hl
      000A75 79                    2404 	ld	a, c
      000A76 9E                    2405 	sbc	a, (hl)
      000A77 79                    2406 	ld	a, c
      000A78 57                    2407 	ld	d, a
      000A79 CB 7E                 2408 	bit	7, (hl)
      000A7B 28 07                 2409 	jr	Z, 00119$
      000A7D CB 7A                 2410 	bit	7, d
      000A7F 20 08                 2411 	jr	NZ, 00120$
      000A81 BF                    2412 	cp	a, a
      000A82 18 05                 2413 	jr	00120$
      000A84                       2414 00119$:
      000A84 CB 7A                 2415 	bit	7, d
      000A86 28 01                 2416 	jr	Z, 00120$
      000A88 37                    2417 	scf
      000A89                       2418 00120$:
      000A89 38 04                 2419 	jr	C, 00104$
      000A8B 1E 00                 2420 	ld	e, #0x00
      000A8D 18 02                 2421 	jr	00105$
      000A8F                       2422 00104$:
      000A8F 1E 01                 2423 	ld	e, #0x01
      000A91                       2424 00105$:
                                   2425 ;main.c:281: }
      000A91 E8 02                 2426 	add	sp, #2
      000A93 C9                    2427 	ret
                                   2428 ;main.c:284: void default_settings() {
                                   2429 ;	---------------------------------
                                   2430 ; Function default_settings
                                   2431 ; ---------------------------------
      000A94                       2432 _default_settings::
                                   2433 ;main.c:286: autospeedflg = 1;
      000A94 21r1Ar00              2434 	ld	hl, #_autospeedflg
      000A97 36 01                 2435 	ld	(hl), #0x01
                                   2436 ;main.c:287: roundlimit = 25;
      000A99 21r1Er00              2437 	ld	hl, #_roundlimit
      000A9C 36 19                 2438 	ld	(hl), #0x19
                                   2439 ;main.c:288: difficulty = 1;
      000A9E 21r13r00              2440 	ld	hl, #_difficulty
      000AA1 36 01                 2441 	ld	(hl), #0x01
                                   2442 ;main.c:289: padheight = 3;
      000AA3 21r02r00              2443 	ld	hl, #_padheight
      000AA6 36 03                 2444 	ld	(hl), #0x03
                                   2445 ;main.c:290: padspeed = 3;
      000AA8 21r03r00              2446 	ld	hl, #_padspeed
      000AAB 36 03                 2447 	ld	(hl), #0x03
                                   2448 ;main.c:291: }
      000AAD C9                    2449 	ret
                                   2450 ;main.c:293: void start_game() {
                                   2451 ;	---------------------------------
                                   2452 ; Function start_game
                                   2453 ; ---------------------------------
      000AAE                       2454 _start_game::
                                   2455 ;main.c:295: exitgameflg = 0;
      000AAE 21r19r00              2456 	ld	hl, #_exitgameflg
      000AB1 36 00                 2457 	ld	(hl), #0x00
                                   2458 ;main.c:296: init_game();
      000AB3 CDrE7r07              2459 	call	_init_game
                                   2460 ;main.c:297: while(1) {
      000AB6                       2461 00105$:
                                   2462 ;main.c:298: begin_round();
      000AB6 CDr23r09              2463 	call	_begin_round
                                   2464 ;main.c:299: if(exitgameflg || roundcnt == roundlimit) {
      000AB9 FAr19r00              2465 	ld	a, (#_exitgameflg)
      000ABC B7                    2466 	or	a, a
      000ABD C0                    2467 	ret	NZ
      000ABE FAr1Fr00              2468 	ld	a, (#_roundcnt)
      000AC1 21r1Er00              2469 	ld	hl, #_roundlimit
      000AC4 96                    2470 	sub	a, (hl)
      000AC5 C8                    2471 	ret	Z
                                   2472 ;main.c:302: prep_next_round();
      000AC6 CDrB9r08              2473 	call	_prep_next_round
                                   2474 ;main.c:304: }
      000AC9 18 EB                 2475 	jr	00105$
                                   2476 ;main.c:306: void main() {
                                   2477 ;	---------------------------------
                                   2478 ; Function main
                                   2479 ; ---------------------------------
      000ACB                       2480 _main::
                                   2481 ;main.c:308: DISPLAY_ON;
      000ACB F0r00                 2482 	ldh	a, (_LCDC_REG+0)
      000ACD F6 80                 2483 	or	a, #0x80
      000ACF E0r00                 2484 	ldh	(_LCDC_REG+0),a
                                   2485 ;main.c:309: SHOW_BKG;
      000AD1 F0r00                 2486 	ldh	a, (_LCDC_REG+0)
      000AD3 F6 01                 2487 	or	a, #0x01
      000AD5 E0r00                 2488 	ldh	(_LCDC_REG+0),a
                                   2489 ;main.c:310: SHOW_SPRITES;
      000AD7 F0r00                 2490 	ldh	a, (_LCDC_REG+0)
      000AD9 F6 02                 2491 	or	a, #0x02
      000ADB E0r00                 2492 	ldh	(_LCDC_REG+0),a
                                   2493 ;main.c:312: default_settings();
      000ADD CDr94r0A              2494 	call	_default_settings
                                   2495 ;main.c:313: start_game();
                                   2496 ;main.c:315: }
      000AE0 C3rAEr0A              2497 	jp  _start_game
                                   2498 	.area _CODE
                                   2499 	.area _CABS (ABS)
