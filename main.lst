                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _rand
                                     13 	.globl _initrand
                                     14 	.globl _set_sprite_data
                                     15 	.globl _set_bkg_tiles
                                     16 	.globl _set_bkg_data
                                     17 	.globl _wait_vbl_done
                                     18 	.globl _joypad
                                     19 	.globl _randindy
                                     20 	.globl _randindx
                                     21 	.globl _itr
                                     22 	.globl _tileind
                                     23 	.globl _pdlcpu
                                     24 	.globl _pdlpl1
                                     25 	.globl _padsectors
                                     26 	.globl _padcpuspeed
                                     27 	.globl _padpl1speed
                                     28 	.globl _padheight
                                     29 	.globl _ballmvframe
                                     30 	.globl _framecnt
                                     31 	.globl _ballposy
                                     32 	.globl _ballposx
                                     33 	.globl _ballspeedy
                                     34 	.globl _ballspeedx
                                     35 	.globl _bkgborderdown
                                     36 	.globl _bkgborderup
                                     37 	.globl _stspeedpooly
                                     38 	.globl _stspeedpoolx
                                     39 	.globl _pongspritetiles
                                     40 	.globl _ponggamemap
                                     41 	.globl _pongbkgtiles
                                     42 	.globl _set_pad_sectors
                                     43 	.globl _hits_walls
                                     44 	.globl _hits_paddle
                                     45 	.globl _get_bounce_off_dir_y
                                     46 	.globl _move_ball
                                     47 	.globl _init_paddle
                                     48 	.globl _move_paddle
                                     49 	.globl _init_playfield
                                     50 	.globl _begin_round
                                     51 	.globl _auto_speed_adj
                                     52 	.globl _manual_speed_adj
                                     53 ;--------------------------------------------------------
                                     54 ; special function registers
                                     55 ;--------------------------------------------------------
                                     56 ;--------------------------------------------------------
                                     57 ; ram data
                                     58 ;--------------------------------------------------------
                                     59 	.area _DATA
      000000                         60 _ballspeedx::
      000000                         61 	.ds 1
      000001                         62 _ballspeedy::
      000001                         63 	.ds 1
      000002                         64 _ballposx::
      000002                         65 	.ds 1
      000003                         66 _ballposy::
      000003                         67 	.ds 1
      000004                         68 _framecnt::
      000004                         69 	.ds 1
      000005                         70 _ballmvframe::
      000005                         71 	.ds 1
      000006                         72 _padheight::
      000006                         73 	.ds 1
      000007                         74 _padpl1speed::
      000007                         75 	.ds 1
      000008                         76 _padcpuspeed::
      000008                         77 	.ds 1
      000009                         78 _padsectors::
      000009                         79 	.ds 3
      00000C                         80 _pdlpl1::
      00000C                         81 	.ds 3
      00000F                         82 _pdlcpu::
      00000F                         83 	.ds 3
      000012                         84 _tileind::
      000012                         85 	.ds 1
      000013                         86 _itr::
      000013                         87 	.ds 1
      000014                         88 _randindx::
      000014                         89 	.ds 1
      000015                         90 _randindy::
      000015                         91 	.ds 1
                                     92 ;--------------------------------------------------------
                                     93 ; absolute external ram data
                                     94 ;--------------------------------------------------------
                                     95 	.area _DABS (ABS)
                                     96 ;--------------------------------------------------------
                                     97 ; global & static initialisations
                                     98 ;--------------------------------------------------------
                                     99 	.area _HOME
                                    100 	.area _GSINIT
                                    101 	.area _GSFINAL
                                    102 	.area _GSINIT
                                    103 ;main.c:11: UINT8 ballposx = 84;
      000000 21r02r00               104 	ld	hl, #_ballposx
      000003 36 54                  105 	ld	(hl), #0x54
                                    106 ;main.c:12: UINT8 ballposy = 84;
      000005 21r03r00               107 	ld	hl, #_ballposy
      000008 36 54                  108 	ld	(hl), #0x54
                                    109 ;main.c:13: UINT8 framecnt = 0;
      00000A 21r04r00               110 	ld	hl, #_framecnt
      00000D 36 00                  111 	ld	(hl), #0x00
                                    112 ;main.c:14: UINT8 ballmvframe = 2; // controlls the ball's speed
      00000F 21r05r00               113 	ld	hl, #_ballmvframe
      000012 36 02                  114 	ld	(hl), #0x02
                                    115 ;main.c:15: UINT8 padheight = 4;
      000014 21r06r00               116 	ld	hl, #_padheight
      000017 36 04                  117 	ld	(hl), #0x04
                                    118 ;main.c:16: UINT8 padpl1speed = 4;
      000019 21r07r00               119 	ld	hl, #_padpl1speed
      00001C 36 04                  120 	ld	(hl), #0x04
                                    121 ;main.c:17: UINT8 padcpuspeed = 4;
      00001E 21r08r00               122 	ld	hl, #_padcpuspeed
      000021 36 04                  123 	ld	(hl), #0x04
                                    124 ;main.c:21: UINT8 tileind = 0;
      000023 21r12r00               125 	ld	hl, #_tileind
      000026 36 00                  126 	ld	(hl), #0x00
                                    127 ;--------------------------------------------------------
                                    128 ; Home
                                    129 ;--------------------------------------------------------
                                    130 	.area _HOME
                                    131 	.area _HOME
                                    132 ;--------------------------------------------------------
                                    133 ; code
                                    134 ;--------------------------------------------------------
                                    135 	.area _CODE
                                    136 ;main.c:42: void set_pad_sectors() {
                                    137 ;	---------------------------------
                                    138 ; Function set_pad_sectors
                                    139 ; ---------------------------------
      000000                        140 _set_pad_sectors::
                                    141 ;main.c:44: padsectors[0] = padheight * 2; // 25%
      000000 01r09r00               142 	ld	bc, #_padsectors+0
      000003 21r06r00               143 	ld	hl, #_padheight
      000006 7E                     144 	ld	a, (hl)
      000007 87                     145 	add	a, a
      000008 02                     146 	ld	(bc), a
                                    147 ;main.c:45: padsectors[1] = padheight * 4; // 50%
      000009 59                     148 	ld	e, c
      00000A 50                     149 	ld	d, b
      00000B 13                     150 	inc	de
      00000C 7E                     151 	ld	a, (hl)
      00000D 87                     152 	add	a, a
      00000E 87                     153 	add	a, a
      00000F 12                     154 	ld	(de), a
                                    155 ;main.c:46: padsectors[2] = padheight * 6; // 75%
      000010 03                     156 	inc	bc
      000011 03                     157 	inc	bc
      000012 7E                     158 	ld	a, (hl)
      000013 5F                     159 	ld	e, a
      000014 87                     160 	add	a, a
      000015 83                     161 	add	a, e
      000016 87                     162 	add	a, a
      000017 02                     163 	ld	(bc), a
                                    164 ;main.c:47: }
      000018 C9                     165 	ret
      000019                        166 _pongbkgtiles:
      000019 00                     167 	.db #0x00	; 0
      00001A 00                     168 	.db #0x00	; 0
      00001B 00                     169 	.db #0x00	; 0
      00001C 00                     170 	.db #0x00	; 0
      00001D 00                     171 	.db #0x00	; 0
      00001E 00                     172 	.db #0x00	; 0
      00001F 00                     173 	.db #0x00	; 0
      000020 00                     174 	.db #0x00	; 0
      000021 00                     175 	.db #0x00	; 0
      000022 00                     176 	.db #0x00	; 0
      000023 00                     177 	.db #0x00	; 0
      000024 00                     178 	.db #0x00	; 0
      000025 00                     179 	.db #0x00	; 0
      000026 00                     180 	.db #0x00	; 0
      000027 00                     181 	.db #0x00	; 0
      000028 00                     182 	.db #0x00	; 0
      000029 00                     183 	.db #0x00	; 0
      00002A 00                     184 	.db #0x00	; 0
      00002B 00                     185 	.db #0x00	; 0
      00002C 00                     186 	.db #0x00	; 0
      00002D 00                     187 	.db #0x00	; 0
      00002E 00                     188 	.db #0x00	; 0
      00002F 00                     189 	.db #0x00	; 0
      000030 00                     190 	.db #0x00	; 0
      000031 00                     191 	.db #0x00	; 0
      000032 00                     192 	.db #0x00	; 0
      000033 FF                     193 	.db #0xff	; 255
      000034 00                     194 	.db #0x00	; 0
      000035 00                     195 	.db #0x00	; 0
      000036 FF                     196 	.db #0xff	; 255
      000037 FF                     197 	.db #0xff	; 255
      000038 FF                     198 	.db #0xff	; 255
      000039 FF                     199 	.db #0xff	; 255
      00003A FF                     200 	.db #0xff	; 255
      00003B 00                     201 	.db #0x00	; 0
      00003C FF                     202 	.db #0xff	; 255
      00003D FF                     203 	.db #0xff	; 255
      00003E 00                     204 	.db #0x00	; 0
      00003F 00                     205 	.db #0x00	; 0
      000040 00                     206 	.db #0x00	; 0
      000041 00                     207 	.db #0x00	; 0
      000042 00                     208 	.db #0x00	; 0
      000043 00                     209 	.db #0x00	; 0
      000044 00                     210 	.db #0x00	; 0
      000045 00                     211 	.db #0x00	; 0
      000046 00                     212 	.db #0x00	; 0
      000047 00                     213 	.db #0x00	; 0
      000048 00                     214 	.db #0x00	; 0
      000049 00                     215 	.db #0x00	; 0
      00004A 01                     216 	.db #0x01	; 1
      00004B 01                     217 	.db #0x01	; 1
      00004C 02                     218 	.db #0x02	; 2
      00004D 03                     219 	.db #0x03	; 3
      00004E 04                     220 	.db #0x04	; 4
      00004F 07                     221 	.db #0x07	; 7
      000050 08                     222 	.db #0x08	; 8
      000051 0F                     223 	.db #0x0f	; 15
      000052 10                     224 	.db #0x10	; 16
      000053 1E                     225 	.db #0x1e	; 30
      000054 21                     226 	.db #0x21	; 33
      000055 3C                     227 	.db #0x3c	; 60
      000056 43                     228 	.db #0x43	; 67	'C'
      000057 79                     229 	.db #0x79	; 121	'y'
      000058 86                     230 	.db #0x86	; 134
      000059 00                     231 	.db #0x00	; 0
      00005A 80                     232 	.db #0x80	; 128
      00005B 80                     233 	.db #0x80	; 128
      00005C 40                     234 	.db #0x40	; 64
      00005D C0                     235 	.db #0xc0	; 192
      00005E 20                     236 	.db #0x20	; 32
      00005F E0                     237 	.db #0xe0	; 224
      000060 10                     238 	.db #0x10	; 16
      000061 F0                     239 	.db #0xf0	; 240
      000062 08                     240 	.db #0x08	; 8
      000063 78                     241 	.db #0x78	; 120	'x'
      000064 84                     242 	.db #0x84	; 132
      000065 3C                     243 	.db #0x3c	; 60
      000066 C2                     244 	.db #0xc2	; 194
      000067 9E                     245 	.db #0x9e	; 158
      000068 61                     246 	.db #0x61	; 97	'a'
      000069 79                     247 	.db #0x79	; 121	'y'
      00006A 86                     248 	.db #0x86	; 134
      00006B 3C                     249 	.db #0x3c	; 60
      00006C 43                     250 	.db #0x43	; 67	'C'
      00006D 1E                     251 	.db #0x1e	; 30
      00006E 21                     252 	.db #0x21	; 33
      00006F 0F                     253 	.db #0x0f	; 15
      000070 10                     254 	.db #0x10	; 16
      000071 07                     255 	.db #0x07	; 7
      000072 08                     256 	.db #0x08	; 8
      000073 03                     257 	.db #0x03	; 3
      000074 04                     258 	.db #0x04	; 4
      000075 01                     259 	.db #0x01	; 1
      000076 02                     260 	.db #0x02	; 2
      000077 00                     261 	.db #0x00	; 0
      000078 01                     262 	.db #0x01	; 1
      000079 9E                     263 	.db #0x9e	; 158
      00007A 61                     264 	.db #0x61	; 97	'a'
      00007B 3C                     265 	.db #0x3c	; 60
      00007C C2                     266 	.db #0xc2	; 194
      00007D 78                     267 	.db #0x78	; 120	'x'
      00007E 84                     268 	.db #0x84	; 132
      00007F F0                     269 	.db #0xf0	; 240
      000080 08                     270 	.db #0x08	; 8
      000081 E0                     271 	.db #0xe0	; 224
      000082 10                     272 	.db #0x10	; 16
      000083 C0                     273 	.db #0xc0	; 192
      000084 20                     274 	.db #0x20	; 32
      000085 80                     275 	.db #0x80	; 128
      000086 40                     276 	.db #0x40	; 64
      000087 00                     277 	.db #0x00	; 0
      000088 80                     278 	.db #0x80	; 128
      000089                        279 _ponggamemap:
      000089 00                     280 	.db #0x00	; 0
      00008A 00                     281 	.db #0x00	; 0
      00008B 00                     282 	.db #0x00	; 0
      00008C 00                     283 	.db #0x00	; 0
      00008D 00                     284 	.db #0x00	; 0
      00008E 00                     285 	.db #0x00	; 0
      00008F 00                     286 	.db #0x00	; 0
      000090 00                     287 	.db #0x00	; 0
      000091 00                     288 	.db #0x00	; 0
      000092 00                     289 	.db #0x00	; 0
      000093 00                     290 	.db #0x00	; 0
      000094 00                     291 	.db #0x00	; 0
      000095 00                     292 	.db #0x00	; 0
      000096 00                     293 	.db #0x00	; 0
      000097 00                     294 	.db #0x00	; 0
      000098 00                     295 	.db #0x00	; 0
      000099 00                     296 	.db #0x00	; 0
      00009A 00                     297 	.db #0x00	; 0
      00009B 00                     298 	.db #0x00	; 0
      00009C 00                     299 	.db #0x00	; 0
      00009D 01                     300 	.db #0x01	; 1
      00009E 01                     301 	.db #0x01	; 1
      00009F 01                     302 	.db #0x01	; 1
      0000A0 01                     303 	.db #0x01	; 1
      0000A1 01                     304 	.db #0x01	; 1
      0000A2 01                     305 	.db #0x01	; 1
      0000A3 01                     306 	.db #0x01	; 1
      0000A4 01                     307 	.db #0x01	; 1
      0000A5 01                     308 	.db #0x01	; 1
      0000A6 01                     309 	.db #0x01	; 1
      0000A7 01                     310 	.db #0x01	; 1
      0000A8 01                     311 	.db #0x01	; 1
      0000A9 01                     312 	.db #0x01	; 1
      0000AA 01                     313 	.db #0x01	; 1
      0000AB 01                     314 	.db #0x01	; 1
      0000AC 01                     315 	.db #0x01	; 1
      0000AD 01                     316 	.db #0x01	; 1
      0000AE 01                     317 	.db #0x01	; 1
      0000AF 01                     318 	.db #0x01	; 1
      0000B0 01                     319 	.db #0x01	; 1
      0000B1 00                     320 	.db #0x00	; 0
      0000B2 00                     321 	.db #0x00	; 0
      0000B3 00                     322 	.db #0x00	; 0
      0000B4 00                     323 	.db #0x00	; 0
      0000B5 00                     324 	.db #0x00	; 0
      0000B6 00                     325 	.db #0x00	; 0
      0000B7 00                     326 	.db #0x00	; 0
      0000B8 00                     327 	.db #0x00	; 0
      0000B9 00                     328 	.db #0x00	; 0
      0000BA 00                     329 	.db #0x00	; 0
      0000BB 00                     330 	.db #0x00	; 0
      0000BC 00                     331 	.db #0x00	; 0
      0000BD 00                     332 	.db #0x00	; 0
      0000BE 00                     333 	.db #0x00	; 0
      0000BF 00                     334 	.db #0x00	; 0
      0000C0 00                     335 	.db #0x00	; 0
      0000C1 00                     336 	.db #0x00	; 0
      0000C2 00                     337 	.db #0x00	; 0
      0000C3 00                     338 	.db #0x00	; 0
      0000C4 00                     339 	.db #0x00	; 0
      0000C5 00                     340 	.db #0x00	; 0
      0000C6 00                     341 	.db #0x00	; 0
      0000C7 00                     342 	.db #0x00	; 0
      0000C8 00                     343 	.db #0x00	; 0
      0000C9 00                     344 	.db #0x00	; 0
      0000CA 00                     345 	.db #0x00	; 0
      0000CB 00                     346 	.db #0x00	; 0
      0000CC 00                     347 	.db #0x00	; 0
      0000CD 00                     348 	.db #0x00	; 0
      0000CE 00                     349 	.db #0x00	; 0
      0000CF 00                     350 	.db #0x00	; 0
      0000D0 00                     351 	.db #0x00	; 0
      0000D1 00                     352 	.db #0x00	; 0
      0000D2 00                     353 	.db #0x00	; 0
      0000D3 00                     354 	.db #0x00	; 0
      0000D4 00                     355 	.db #0x00	; 0
      0000D5 00                     356 	.db #0x00	; 0
      0000D6 00                     357 	.db #0x00	; 0
      0000D7 00                     358 	.db #0x00	; 0
      0000D8 00                     359 	.db #0x00	; 0
      0000D9 00                     360 	.db #0x00	; 0
      0000DA 00                     361 	.db #0x00	; 0
      0000DB 00                     362 	.db #0x00	; 0
      0000DC 00                     363 	.db #0x00	; 0
      0000DD 00                     364 	.db #0x00	; 0
      0000DE 00                     365 	.db #0x00	; 0
      0000DF 00                     366 	.db #0x00	; 0
      0000E0 00                     367 	.db #0x00	; 0
      0000E1 00                     368 	.db #0x00	; 0
      0000E2 00                     369 	.db #0x00	; 0
      0000E3 00                     370 	.db #0x00	; 0
      0000E4 00                     371 	.db #0x00	; 0
      0000E5 00                     372 	.db #0x00	; 0
      0000E6 00                     373 	.db #0x00	; 0
      0000E7 00                     374 	.db #0x00	; 0
      0000E8 00                     375 	.db #0x00	; 0
      0000E9 00                     376 	.db #0x00	; 0
      0000EA 00                     377 	.db #0x00	; 0
      0000EB 00                     378 	.db #0x00	; 0
      0000EC 00                     379 	.db #0x00	; 0
      0000ED 00                     380 	.db #0x00	; 0
      0000EE 00                     381 	.db #0x00	; 0
      0000EF 00                     382 	.db #0x00	; 0
      0000F0 00                     383 	.db #0x00	; 0
      0000F1 00                     384 	.db #0x00	; 0
      0000F2 00                     385 	.db #0x00	; 0
      0000F3 00                     386 	.db #0x00	; 0
      0000F4 00                     387 	.db #0x00	; 0
      0000F5 00                     388 	.db #0x00	; 0
      0000F6 00                     389 	.db #0x00	; 0
      0000F7 00                     390 	.db #0x00	; 0
      0000F8 00                     391 	.db #0x00	; 0
      0000F9 00                     392 	.db #0x00	; 0
      0000FA 00                     393 	.db #0x00	; 0
      0000FB 00                     394 	.db #0x00	; 0
      0000FC 00                     395 	.db #0x00	; 0
      0000FD 00                     396 	.db #0x00	; 0
      0000FE 00                     397 	.db #0x00	; 0
      0000FF 00                     398 	.db #0x00	; 0
      000100 00                     399 	.db #0x00	; 0
      000101 00                     400 	.db #0x00	; 0
      000102 00                     401 	.db #0x00	; 0
      000103 00                     402 	.db #0x00	; 0
      000104 00                     403 	.db #0x00	; 0
      000105 00                     404 	.db #0x00	; 0
      000106 00                     405 	.db #0x00	; 0
      000107 00                     406 	.db #0x00	; 0
      000108 00                     407 	.db #0x00	; 0
      000109 00                     408 	.db #0x00	; 0
      00010A 00                     409 	.db #0x00	; 0
      00010B 00                     410 	.db #0x00	; 0
      00010C 00                     411 	.db #0x00	; 0
      00010D 00                     412 	.db #0x00	; 0
      00010E 00                     413 	.db #0x00	; 0
      00010F 00                     414 	.db #0x00	; 0
      000110 00                     415 	.db #0x00	; 0
      000111 00                     416 	.db #0x00	; 0
      000112 00                     417 	.db #0x00	; 0
      000113 00                     418 	.db #0x00	; 0
      000114 00                     419 	.db #0x00	; 0
      000115 00                     420 	.db #0x00	; 0
      000116 07                     421 	.db #0x07	; 7
      000117 00                     422 	.db #0x00	; 0
      000118 00                     423 	.db #0x00	; 0
      000119 00                     424 	.db #0x00	; 0
      00011A 00                     425 	.db #0x00	; 0
      00011B 00                     426 	.db #0x00	; 0
      00011C 00                     427 	.db #0x00	; 0
      00011D 00                     428 	.db #0x00	; 0
      00011E 00                     429 	.db #0x00	; 0
      00011F 00                     430 	.db #0x00	; 0
      000120 00                     431 	.db #0x00	; 0
      000121 00                     432 	.db #0x00	; 0
      000122 00                     433 	.db #0x00	; 0
      000123 00                     434 	.db #0x00	; 0
      000124 00                     435 	.db #0x00	; 0
      000125 00                     436 	.db #0x00	; 0
      000126 00                     437 	.db #0x00	; 0
      000127 07                     438 	.db #0x07	; 7
      000128 00                     439 	.db #0x00	; 0
      000129 00                     440 	.db #0x00	; 0
      00012A 08                     441 	.db #0x08	; 8
      00012B 00                     442 	.db #0x00	; 0
      00012C 00                     443 	.db #0x00	; 0
      00012D 00                     444 	.db #0x00	; 0
      00012E 00                     445 	.db #0x00	; 0
      00012F 00                     446 	.db #0x00	; 0
      000130 00                     447 	.db #0x00	; 0
      000131 00                     448 	.db #0x00	; 0
      000132 03                     449 	.db #0x03	; 3
      000133 04                     450 	.db #0x04	; 4
      000134 00                     451 	.db #0x00	; 0
      000135 00                     452 	.db #0x00	; 0
      000136 00                     453 	.db #0x00	; 0
      000137 00                     454 	.db #0x00	; 0
      000138 00                     455 	.db #0x00	; 0
      000139 00                     456 	.db #0x00	; 0
      00013A 00                     457 	.db #0x00	; 0
      00013B 08                     458 	.db #0x08	; 8
      00013C 00                     459 	.db #0x00	; 0
      00013D 00                     460 	.db #0x00	; 0
      00013E 08                     461 	.db #0x08	; 8
      00013F 00                     462 	.db #0x00	; 0
      000140 00                     463 	.db #0x00	; 0
      000141 00                     464 	.db #0x00	; 0
      000142 00                     465 	.db #0x00	; 0
      000143 00                     466 	.db #0x00	; 0
      000144 00                     467 	.db #0x00	; 0
      000145 00                     468 	.db #0x00	; 0
      000146 05                     469 	.db #0x05	; 5
      000147 06                     470 	.db #0x06	; 6
      000148 00                     471 	.db #0x00	; 0
      000149 00                     472 	.db #0x00	; 0
      00014A 00                     473 	.db #0x00	; 0
      00014B 00                     474 	.db #0x00	; 0
      00014C 00                     475 	.db #0x00	; 0
      00014D 00                     476 	.db #0x00	; 0
      00014E 00                     477 	.db #0x00	; 0
      00014F 08                     478 	.db #0x08	; 8
      000150 00                     479 	.db #0x00	; 0
      000151 00                     480 	.db #0x00	; 0
      000152 09                     481 	.db #0x09	; 9
      000153 00                     482 	.db #0x00	; 0
      000154 00                     483 	.db #0x00	; 0
      000155 00                     484 	.db #0x00	; 0
      000156 00                     485 	.db #0x00	; 0
      000157 00                     486 	.db #0x00	; 0
      000158 00                     487 	.db #0x00	; 0
      000159 00                     488 	.db #0x00	; 0
      00015A 00                     489 	.db #0x00	; 0
      00015B 00                     490 	.db #0x00	; 0
      00015C 00                     491 	.db #0x00	; 0
      00015D 00                     492 	.db #0x00	; 0
      00015E 00                     493 	.db #0x00	; 0
      00015F 00                     494 	.db #0x00	; 0
      000160 00                     495 	.db #0x00	; 0
      000161 00                     496 	.db #0x00	; 0
      000162 00                     497 	.db #0x00	; 0
      000163 09                     498 	.db #0x09	; 9
      000164 00                     499 	.db #0x00	; 0
      000165 00                     500 	.db #0x00	; 0
      000166 00                     501 	.db #0x00	; 0
      000167 00                     502 	.db #0x00	; 0
      000168 00                     503 	.db #0x00	; 0
      000169 00                     504 	.db #0x00	; 0
      00016A 00                     505 	.db #0x00	; 0
      00016B 00                     506 	.db #0x00	; 0
      00016C 00                     507 	.db #0x00	; 0
      00016D 00                     508 	.db #0x00	; 0
      00016E 00                     509 	.db #0x00	; 0
      00016F 00                     510 	.db #0x00	; 0
      000170 00                     511 	.db #0x00	; 0
      000171 00                     512 	.db #0x00	; 0
      000172 00                     513 	.db #0x00	; 0
      000173 00                     514 	.db #0x00	; 0
      000174 00                     515 	.db #0x00	; 0
      000175 00                     516 	.db #0x00	; 0
      000176 00                     517 	.db #0x00	; 0
      000177 00                     518 	.db #0x00	; 0
      000178 00                     519 	.db #0x00	; 0
      000179 00                     520 	.db #0x00	; 0
      00017A 00                     521 	.db #0x00	; 0
      00017B 00                     522 	.db #0x00	; 0
      00017C 00                     523 	.db #0x00	; 0
      00017D 00                     524 	.db #0x00	; 0
      00017E 00                     525 	.db #0x00	; 0
      00017F 00                     526 	.db #0x00	; 0
      000180 00                     527 	.db #0x00	; 0
      000181 00                     528 	.db #0x00	; 0
      000182 00                     529 	.db #0x00	; 0
      000183 00                     530 	.db #0x00	; 0
      000184 00                     531 	.db #0x00	; 0
      000185 00                     532 	.db #0x00	; 0
      000186 00                     533 	.db #0x00	; 0
      000187 00                     534 	.db #0x00	; 0
      000188 00                     535 	.db #0x00	; 0
      000189 00                     536 	.db #0x00	; 0
      00018A 00                     537 	.db #0x00	; 0
      00018B 00                     538 	.db #0x00	; 0
      00018C 00                     539 	.db #0x00	; 0
      00018D 00                     540 	.db #0x00	; 0
      00018E 00                     541 	.db #0x00	; 0
      00018F 00                     542 	.db #0x00	; 0
      000190 00                     543 	.db #0x00	; 0
      000191 00                     544 	.db #0x00	; 0
      000192 00                     545 	.db #0x00	; 0
      000193 00                     546 	.db #0x00	; 0
      000194 00                     547 	.db #0x00	; 0
      000195 00                     548 	.db #0x00	; 0
      000196 00                     549 	.db #0x00	; 0
      000197 00                     550 	.db #0x00	; 0
      000198 00                     551 	.db #0x00	; 0
      000199 00                     552 	.db #0x00	; 0
      00019A 00                     553 	.db #0x00	; 0
      00019B 00                     554 	.db #0x00	; 0
      00019C 00                     555 	.db #0x00	; 0
      00019D 00                     556 	.db #0x00	; 0
      00019E 00                     557 	.db #0x00	; 0
      00019F 00                     558 	.db #0x00	; 0
      0001A0 00                     559 	.db #0x00	; 0
      0001A1 00                     560 	.db #0x00	; 0
      0001A2 00                     561 	.db #0x00	; 0
      0001A3 00                     562 	.db #0x00	; 0
      0001A4 00                     563 	.db #0x00	; 0
      0001A5 00                     564 	.db #0x00	; 0
      0001A6 00                     565 	.db #0x00	; 0
      0001A7 00                     566 	.db #0x00	; 0
      0001A8 00                     567 	.db #0x00	; 0
      0001A9 00                     568 	.db #0x00	; 0
      0001AA 00                     569 	.db #0x00	; 0
      0001AB 00                     570 	.db #0x00	; 0
      0001AC 00                     571 	.db #0x00	; 0
      0001AD 00                     572 	.db #0x00	; 0
      0001AE 00                     573 	.db #0x00	; 0
      0001AF 00                     574 	.db #0x00	; 0
      0001B0 00                     575 	.db #0x00	; 0
      0001B1 00                     576 	.db #0x00	; 0
      0001B2 00                     577 	.db #0x00	; 0
      0001B3 00                     578 	.db #0x00	; 0
      0001B4 00                     579 	.db #0x00	; 0
      0001B5 00                     580 	.db #0x00	; 0
      0001B6 00                     581 	.db #0x00	; 0
      0001B7 00                     582 	.db #0x00	; 0
      0001B8 00                     583 	.db #0x00	; 0
      0001B9 00                     584 	.db #0x00	; 0
      0001BA 00                     585 	.db #0x00	; 0
      0001BB 00                     586 	.db #0x00	; 0
      0001BC 00                     587 	.db #0x00	; 0
      0001BD 00                     588 	.db #0x00	; 0
      0001BE 00                     589 	.db #0x00	; 0
      0001BF 00                     590 	.db #0x00	; 0
      0001C0 00                     591 	.db #0x00	; 0
      0001C1 00                     592 	.db #0x00	; 0
      0001C2 00                     593 	.db #0x00	; 0
      0001C3 00                     594 	.db #0x00	; 0
      0001C4 00                     595 	.db #0x00	; 0
      0001C5 00                     596 	.db #0x00	; 0
      0001C6 00                     597 	.db #0x00	; 0
      0001C7 00                     598 	.db #0x00	; 0
      0001C8 00                     599 	.db #0x00	; 0
      0001C9 02                     600 	.db #0x02	; 2
      0001CA 02                     601 	.db #0x02	; 2
      0001CB 02                     602 	.db #0x02	; 2
      0001CC 02                     603 	.db #0x02	; 2
      0001CD 02                     604 	.db #0x02	; 2
      0001CE 02                     605 	.db #0x02	; 2
      0001CF 02                     606 	.db #0x02	; 2
      0001D0 02                     607 	.db #0x02	; 2
      0001D1 02                     608 	.db #0x02	; 2
      0001D2 02                     609 	.db #0x02	; 2
      0001D3 02                     610 	.db #0x02	; 2
      0001D4 02                     611 	.db #0x02	; 2
      0001D5 02                     612 	.db #0x02	; 2
      0001D6 02                     613 	.db #0x02	; 2
      0001D7 02                     614 	.db #0x02	; 2
      0001D8 02                     615 	.db #0x02	; 2
      0001D9 02                     616 	.db #0x02	; 2
      0001DA 02                     617 	.db #0x02	; 2
      0001DB 02                     618 	.db #0x02	; 2
      0001DC 02                     619 	.db #0x02	; 2
      0001DD 00                     620 	.db #0x00	; 0
      0001DE 00                     621 	.db #0x00	; 0
      0001DF 00                     622 	.db #0x00	; 0
      0001E0 00                     623 	.db #0x00	; 0
      0001E1 00                     624 	.db #0x00	; 0
      0001E2 00                     625 	.db #0x00	; 0
      0001E3 00                     626 	.db #0x00	; 0
      0001E4 00                     627 	.db #0x00	; 0
      0001E5 00                     628 	.db #0x00	; 0
      0001E6 00                     629 	.db #0x00	; 0
      0001E7 00                     630 	.db #0x00	; 0
      0001E8 00                     631 	.db #0x00	; 0
      0001E9 00                     632 	.db #0x00	; 0
      0001EA 00                     633 	.db #0x00	; 0
      0001EB 00                     634 	.db #0x00	; 0
      0001EC 00                     635 	.db #0x00	; 0
      0001ED 00                     636 	.db #0x00	; 0
      0001EE 00                     637 	.db #0x00	; 0
      0001EF 00                     638 	.db #0x00	; 0
      0001F0 00                     639 	.db #0x00	; 0
      0001F1                        640 _pongspritetiles:
      0001F1 00                     641 	.db #0x00	; 0
      0001F2 00                     642 	.db #0x00	; 0
      0001F3 00                     643 	.db #0x00	; 0
      0001F4 00                     644 	.db #0x00	; 0
      0001F5 00                     645 	.db #0x00	; 0
      0001F6 00                     646 	.db #0x00	; 0
      0001F7 00                     647 	.db #0x00	; 0
      0001F8 00                     648 	.db #0x00	; 0
      0001F9 00                     649 	.db #0x00	; 0
      0001FA 00                     650 	.db #0x00	; 0
      0001FB 00                     651 	.db #0x00	; 0
      0001FC 00                     652 	.db #0x00	; 0
      0001FD 00                     653 	.db #0x00	; 0
      0001FE 00                     654 	.db #0x00	; 0
      0001FF 00                     655 	.db #0x00	; 0
      000200 00                     656 	.db #0x00	; 0
      000201 FF                     657 	.db #0xff	; 255
      000202 FF                     658 	.db #0xff	; 255
      000203 FF                     659 	.db #0xff	; 255
      000204 81                     660 	.db #0x81	; 129
      000205 C3                     661 	.db #0xc3	; 195
      000206 81                     662 	.db #0x81	; 129
      000207 C3                     663 	.db #0xc3	; 195
      000208 99                     664 	.db #0x99	; 153
      000209 C3                     665 	.db #0xc3	; 195
      00020A 99                     666 	.db #0x99	; 153
      00020B C3                     667 	.db #0xc3	; 195
      00020C 81                     668 	.db #0x81	; 129
      00020D FF                     669 	.db #0xff	; 255
      00020E 81                     670 	.db #0x81	; 129
      00020F FF                     671 	.db #0xff	; 255
      000210 FF                     672 	.db #0xff	; 255
      000211 FF                     673 	.db #0xff	; 255
      000212 FF                     674 	.db #0xff	; 255
      000213 FF                     675 	.db #0xff	; 255
      000214 81                     676 	.db #0x81	; 129
      000215 C3                     677 	.db #0xc3	; 195
      000216 81                     678 	.db #0x81	; 129
      000217 C3                     679 	.db #0xc3	; 195
      000218 99                     680 	.db #0x99	; 153
      000219 C3                     681 	.db #0xc3	; 195
      00021A 99                     682 	.db #0x99	; 153
      00021B C3                     683 	.db #0xc3	; 195
      00021C 99                     684 	.db #0x99	; 153
      00021D C3                     685 	.db #0xc3	; 195
      00021E 99                     686 	.db #0x99	; 153
      00021F C3                     687 	.db #0xc3	; 195
      000220 99                     688 	.db #0x99	; 153
      000221 C3                     689 	.db #0xc3	; 195
      000222 99                     690 	.db #0x99	; 153
      000223 C3                     691 	.db #0xc3	; 195
      000224 99                     692 	.db #0x99	; 153
      000225 C3                     693 	.db #0xc3	; 195
      000226 99                     694 	.db #0x99	; 153
      000227 C3                     695 	.db #0xc3	; 195
      000228 99                     696 	.db #0x99	; 153
      000229 C3                     697 	.db #0xc3	; 195
      00022A 99                     698 	.db #0x99	; 153
      00022B C3                     699 	.db #0xc3	; 195
      00022C 99                     700 	.db #0x99	; 153
      00022D C3                     701 	.db #0xc3	; 195
      00022E 99                     702 	.db #0x99	; 153
      00022F C3                     703 	.db #0xc3	; 195
      000230 99                     704 	.db #0x99	; 153
      000231 18                     705 	.db #0x18	; 24
      000232 18                     706 	.db #0x18	; 24
      000233 7E                     707 	.db #0x7e	; 126
      000234 66                     708 	.db #0x66	; 102	'f'
      000235 7E                     709 	.db #0x7e	; 126
      000236 42                     710 	.db #0x42	; 66	'B'
      000237 E7                     711 	.db #0xe7	; 231
      000238 99                     712 	.db #0x99	; 153
      000239 E7                     713 	.db #0xe7	; 231
      00023A 99                     714 	.db #0x99	; 153
      00023B 7E                     715 	.db #0x7e	; 126
      00023C 42                     716 	.db #0x42	; 66	'B'
      00023D 7E                     717 	.db #0x7e	; 126
      00023E 66                     718 	.db #0x66	; 102	'f'
      00023F 18                     719 	.db #0x18	; 24
      000240 18                     720 	.db #0x18	; 24
      000241                        721 _stspeedpoolx:
      000241 FC                     722 	.db #0xfc	; -4
      000242 04                     723 	.db #0x04	;  4
      000243                        724 _stspeedpooly:
      000243 FC                     725 	.db #0xfc	; -4
      000244 FE                     726 	.db #0xfe	; -2
      000245 00                     727 	.db #0x00	;  0
      000246 02                     728 	.db #0x02	;  2
      000247 04                     729 	.db #0x04	;  4
      000248                        730 _bkgborderup:
      000248 20                     731 	.db #0x20	; 32
      000249                        732 _bkgborderdown:
      000249 90                     733 	.db #0x90	; 144
                                    734 ;main.c:49: UBYTE hits_walls(UINT8 nexty, UINT8 objheight) {
                                    735 ;	---------------------------------
                                    736 ; Function hits_walls
                                    737 ; ---------------------------------
      00024A                        738 _hits_walls::
                                    739 ;main.c:50: return nexty < bkgborderup || nexty + objheight > bkgborderdown;
      00024A 21r48r02               740 	ld	hl, #_bkgborderup
      00024D 4E                     741 	ld	c, (hl)
      00024E F8 02                  742 	ldhl	sp,	#2
      000250 7E                     743 	ld	a,(hl)
      000251 B9                     744 	cp	a,c
      000252 38 2C                  745 	jr	C, 00104$
      000254 06 00                  746 	ld	b, #0x00
      000256 23                     747 	inc	hl
      000257 5E                     748 	ld	e, (hl)
      000258 16 00                  749 	ld	d, #0x00
      00025A 83                     750 	add	a, e
      00025B 4F                     751 	ld	c, a
      00025C 78                     752 	ld	a, b
      00025D 8A                     753 	adc	a, d
      00025E 47                     754 	ld	b, a
      00025F 21r49r02               755 	ld	hl, #_bkgborderdown
      000262 6E                     756 	ld	l, (hl)
      000263 26 00                  757 	ld	h, #0x00
      000265 58                     758 	ld	e, b
      000266 54                     759 	ld	d, h
      000267 7D                     760 	ld	a, l
      000268 91                     761 	sub	a, c
      000269 7C                     762 	ld	a, h
      00026A 98                     763 	sbc	a, b
      00026B CB 7B                  764 	bit	7, e
      00026D 28 07                  765 	jr	Z, 00116$
      00026F CB 7A                  766 	bit	7, d
      000271 20 08                  767 	jr	NZ, 00117$
      000273 BF                     768 	cp	a, a
      000274 18 05                  769 	jr	00117$
      000276                        770 00116$:
      000276 CB 7A                  771 	bit	7, d
      000278 28 01                  772 	jr	Z, 00117$
      00027A 37                     773 	scf
      00027B                        774 00117$:
      00027B 38 03                  775 	jr	C, 00104$
      00027D 1E 00                  776 	ld	e, #0x00
      00027F C9                     777 	ret
      000280                        778 00104$:
      000280 1E 01                  779 	ld	e, #0x01
                                    780 ;main.c:51: }
      000282 C9                     781 	ret
                                    782 ;main.c:53: UBYTE hits_paddle(UINT8 nextx, UINT8 nexty, Paddle * pdl) {
                                    783 ;	---------------------------------
                                    784 ; Function hits_paddle
                                    785 ; ---------------------------------
      000283                        786 _hits_paddle::
      000283 E8 FA                  787 	add	sp, #-6
                                    788 ;main.c:54: return (nextx < pdl->x + 8 && pdl->x < nextx + 8) &&
      000285 F8 0A                  789 	ldhl	sp,	#10
      000287 2A                     790 	ld	a, (hl+)
      000288 5E                     791 	ld	e, (hl)
      000289 F8 02                  792 	ldhl	sp,	#2
      00028B 22                     793 	ld	(hl+), a
      00028C 7B                     794 	ld	a, e
      00028D 32                     795 	ld	(hl-), a
      00028E 2A                     796 	ld	a, (hl+)
      00028F 5F                     797 	ld	e, a
      000290 56                     798 	ld	d, (hl)
      000291 1A                     799 	ld	a, (de)
      000292 F8 00                  800 	ldhl	sp,	#0
      000294 77                     801 	ld	(hl), a
      000295 AF                     802 	xor	a, a
      000296 23                     803 	inc	hl
      000297 77                     804 	ld	(hl), a
                                    805 ;c
      000298 D1                     806 	pop	de
      000299 D5                     807 	push	de
      00029A 21 08 00               808 	ld	hl, #0x0008
      00029D 19                     809 	add	hl, de
      00029E 4D                     810 	ld	c, l
      00029F 44                     811 	ld	b, h
      0002A0 F8 08                  812 	ldhl	sp,	#8
      0002A2 7E                     813 	ld	a, (hl)
      0002A3 F8 04                  814 	ldhl	sp,	#4
      0002A5 77                     815 	ld	(hl), a
      0002A6 AF                     816 	xor	a, a
      0002A7 23                     817 	inc	hl
      0002A8 32                     818 	ld	(hl-), a
      0002A9 7E                     819 	ld	a, (hl)
      0002AA 91                     820 	sub	a, c
      0002AB 23                     821 	inc	hl
      0002AC 7E                     822 	ld	a, (hl)
      0002AD 98                     823 	sbc	a, b
      0002AE 56                     824 	ld	d, (hl)
      0002AF 78                     825 	ld	a, b
      0002B0 CB 7F                  826 	bit	7,a
      0002B2 28 07                  827 	jr	Z, 00126$
      0002B4 CB 7A                  828 	bit	7, d
      0002B6 20 08                  829 	jr	NZ, 00127$
      0002B8 BF                     830 	cp	a, a
      0002B9 18 05                  831 	jr	00127$
      0002BB                        832 00126$:
      0002BB CB 7A                  833 	bit	7, d
      0002BD 28 01                  834 	jr	Z, 00127$
      0002BF 37                     835 	scf
      0002C0                        836 00127$:
      0002C0 D2r91r03               837 	jp	NC, 00103$
                                    838 ;c
      0002C3 F8 04                  839 	ldhl	sp,#4
      0002C5 2A                     840 	ld	a, (hl+)
      0002C6 5F                     841 	ld	e, a
      0002C7 56                     842 	ld	d, (hl)
      0002C8 21 08 00               843 	ld	hl, #0x0008
      0002CB 19                     844 	add	hl, de
      0002CC 4D                     845 	ld	c, l
      0002CD 44                     846 	ld	b, h
      0002CE F8 00                  847 	ldhl	sp,	#0
      0002D0 7E                     848 	ld	a, (hl)
      0002D1 91                     849 	sub	a, c
      0002D2 23                     850 	inc	hl
      0002D3 7E                     851 	ld	a, (hl)
      0002D4 98                     852 	sbc	a, b
      0002D5 56                     853 	ld	d, (hl)
      0002D6 78                     854 	ld	a, b
      0002D7 CB 7F                  855 	bit	7,a
      0002D9 28 07                  856 	jr	Z, 00128$
      0002DB CB 7A                  857 	bit	7, d
      0002DD 20 08                  858 	jr	NZ, 00129$
      0002DF BF                     859 	cp	a, a
      0002E0 18 05                  860 	jr	00129$
      0002E2                        861 00128$:
      0002E2 CB 7A                  862 	bit	7, d
      0002E4 28 01                  863 	jr	Z, 00129$
      0002E6 37                     864 	scf
      0002E7                        865 00129$:
      0002E7 D2r91r03               866 	jp	NC, 00103$
                                    867 ;main.c:55: (nexty < pdl->y + (padheight * 8) && pdl->y < nexty + 8);
                                    868 ;c
      0002EA F8 02                  869 	ldhl	sp,#2
      0002EC 2A                     870 	ld	a, (hl+)
      0002ED 5F                     871 	ld	e, a
      0002EE 56                     872 	ld	d, (hl)
      0002EF 6B                     873 	ld	l, e
      0002F0 62                     874 	ld	h, d
      0002F1 23                     875 	inc	hl
      0002F2 E5                     876 	push	hl
      0002F3 7D                     877 	ld	a, l
      0002F4 F8 06                  878 	ldhl	sp,	#6
      0002F6 77                     879 	ld	(hl), a
      0002F7 E1                     880 	pop	hl
      0002F8 7C                     881 	ld	a, h
      0002F9 F8 05                  882 	ldhl	sp,	#5
      0002FB 32                     883 	ld	(hl-), a
      0002FC 2A                     884 	ld	a, (hl+)
      0002FD 5F                     885 	ld	e, a
      0002FE 56                     886 	ld	d, (hl)
      0002FF 1A                     887 	ld	a, (de)
      000300 77                     888 	ld	(hl), a
      000301 F8 00                  889 	ldhl	sp,	#0
      000303 77                     890 	ld	(hl), a
      000304 AF                     891 	xor	a, a
      000305 23                     892 	inc	hl
      000306 77                     893 	ld	(hl), a
      000307 FAr06r00               894 	ld	a, (#_padheight)
      00030A F8 04                  895 	ldhl	sp,	#4
      00030C 77                     896 	ld	(hl), a
      00030D AF                     897 	xor	a, a
      00030E 23                     898 	inc	hl
      00030F 32                     899 	ld	(hl-), a
      000310 3A                     900 	ld	a, (hl-)
      000311 2B                     901 	dec	hl
      000312 77                     902 	ld	(hl), a
      000313 F8 05                  903 	ldhl	sp,	#5
      000315 3A                     904 	ld	a, (hl-)
      000316 2B                     905 	dec	hl
      000317 77                     906 	ld	(hl), a
      000318 3E 03                  907 	ld	a, #0x03
      00031A                        908 00130$:
      00031A F8 02                  909 	ldhl	sp,	#2
      00031C CB 26                  910 	sla	(hl)
      00031E 23                     911 	inc	hl
      00031F CB 16                  912 	rl	(hl)
      000321 3D                     913 	dec	a
      000322 20 F6                  914 	jr	NZ, 00130$
                                    915 ;c
      000324 2B                     916 	dec	hl
      000325 2A                     917 	ld	a, (hl+)
      000326 5F                     918 	ld	e, a
      000327 56                     919 	ld	d, (hl)
      000328 E1                     920 	pop	hl
      000329 E5                     921 	push	hl
      00032A 19                     922 	add	hl, de
      00032B E5                     923 	push	hl
      00032C 7D                     924 	ld	a, l
      00032D F8 06                  925 	ldhl	sp,	#6
      00032F 77                     926 	ld	(hl), a
      000330 E1                     927 	pop	hl
      000331 7C                     928 	ld	a, h
      000332 F8 05                  929 	ldhl	sp,	#5
      000334 77                     930 	ld	(hl), a
      000335 F8 09                  931 	ldhl	sp,	#9
      000337 7E                     932 	ld	a, (hl)
      000338 F8 02                  933 	ldhl	sp,	#2
      00033A 77                     934 	ld	(hl), a
      00033B AF                     935 	xor	a, a
      00033C 23                     936 	inc	hl
      00033D 77                     937 	ld	(hl), a
      00033E F8 02                  938 	ldhl	sp,	#2
      000340 5D                     939 	ld	e, l
      000341 54                     940 	ld	d, h
      000342 F8 04                  941 	ldhl	sp,	#4
      000344 1A                     942 	ld	a, (de)
      000345 96                     943 	sub	a, (hl)
      000346 23                     944 	inc	hl
      000347 13                     945 	inc	de
      000348 1A                     946 	ld	a, (de)
      000349 9E                     947 	sbc	a, (hl)
      00034A 1A                     948 	ld	a, (de)
      00034B 57                     949 	ld	d, a
      00034C CB 7E                  950 	bit	7, (hl)
      00034E 28 07                  951 	jr	Z, 00131$
      000350 CB 7A                  952 	bit	7, d
      000352 20 08                  953 	jr	NZ, 00132$
      000354 BF                     954 	cp	a, a
      000355 18 05                  955 	jr	00132$
      000357                        956 00131$:
      000357 CB 7A                  957 	bit	7, d
      000359 28 01                  958 	jr	Z, 00132$
      00035B 37                     959 	scf
      00035C                        960 00132$:
      00035C 30 33                  961 	jr	NC, 00103$
                                    962 ;c
      00035E F8 02                  963 	ldhl	sp,#2
      000360 2A                     964 	ld	a, (hl+)
      000361 5F                     965 	ld	e, a
      000362 56                     966 	ld	d, (hl)
      000363 21 08 00               967 	ld	hl, #0x0008
      000366 19                     968 	add	hl, de
      000367 E5                     969 	push	hl
      000368 7D                     970 	ld	a, l
      000369 F8 06                  971 	ldhl	sp,	#6
      00036B 77                     972 	ld	(hl), a
      00036C E1                     973 	pop	hl
      00036D 7C                     974 	ld	a, h
      00036E F8 05                  975 	ldhl	sp,	#5
      000370 77                     976 	ld	(hl), a
      000371 F8 00                  977 	ldhl	sp,	#0
      000373 5D                     978 	ld	e, l
      000374 54                     979 	ld	d, h
      000375 F8 04                  980 	ldhl	sp,	#4
      000377 1A                     981 	ld	a, (de)
      000378 96                     982 	sub	a, (hl)
      000379 23                     983 	inc	hl
      00037A 13                     984 	inc	de
      00037B 1A                     985 	ld	a, (de)
      00037C 9E                     986 	sbc	a, (hl)
      00037D 1A                     987 	ld	a, (de)
      00037E 57                     988 	ld	d, a
      00037F CB 7E                  989 	bit	7, (hl)
      000381 28 07                  990 	jr	Z, 00133$
      000383 CB 7A                  991 	bit	7, d
      000385 20 08                  992 	jr	NZ, 00134$
      000387 BF                     993 	cp	a, a
      000388 18 05                  994 	jr	00134$
      00038A                        995 00133$:
      00038A CB 7A                  996 	bit	7, d
      00038C 28 01                  997 	jr	Z, 00134$
      00038E 37                     998 	scf
      00038F                        999 00134$:
      00038F 38 04                 1000 	jr	C, 00104$
      000391                       1001 00103$:
      000391 1E 00                 1002 	ld	e, #0x00
      000393 18 02                 1003 	jr	00105$
      000395                       1004 00104$:
      000395 1E 01                 1005 	ld	e, #0x01
      000397                       1006 00105$:
                                   1007 ;main.c:56: }
      000397 E8 06                 1008 	add	sp, #6
      000399 C9                    1009 	ret
                                   1010 ;main.c:58: INT8 get_bounce_off_dir_y(Paddle * pad) {
                                   1011 ;	---------------------------------
                                   1012 ; Function get_bounce_off_dir_y
                                   1013 ; ---------------------------------
      00039A                       1014 _get_bounce_off_dir_y::
      00039A E8 FA                 1015 	add	sp, #-6
                                   1016 ;main.c:60: UINT8 ballcentery = ballposy + 4;
      00039C FAr03r00              1017 	ld	a, (#_ballposy)
      00039F C6 04                 1018 	add	a, #0x04
      0003A1 4F                    1019 	ld	c, a
                                   1020 ;main.c:61: if(ballcentery < pad->y + padsectors[0]) { // < 25%
      0003A2 F8 08                 1021 	ldhl	sp,#8
      0003A4 2A                    1022 	ld	a, (hl+)
      0003A5 5F                    1023 	ld	e, a
      0003A6 56                    1024 	ld	d, (hl)
      0003A7 13                    1025 	inc	de
      0003A8 1A                    1026 	ld	a, (de)
      0003A9 F8 00                 1027 	ldhl	sp,	#0
      0003AB 77                    1028 	ld	(hl), a
      0003AC AF                    1029 	xor	a, a
      0003AD 23                    1030 	inc	hl
      0003AE 77                    1031 	ld	(hl), a
      0003AF FAr09r00              1032 	ld	a, (#_padsectors + 0)
      0003B2 16 00                 1033 	ld	d, #0x00
                                   1034 ;c
      0003B4 5F                    1035 	ld	e, a
      0003B5 E1                    1036 	pop	hl
      0003B6 E5                    1037 	push	hl
      0003B7 19                    1038 	add	hl, de
      0003B8 E5                    1039 	push	hl
      0003B9 7D                    1040 	ld	a, l
      0003BA F8 06                 1041 	ldhl	sp,	#6
      0003BC 77                    1042 	ld	(hl), a
      0003BD E1                    1043 	pop	hl
      0003BE 7C                    1044 	ld	a, h
      0003BF F8 05                 1045 	ldhl	sp,	#5
      0003C1 77                    1046 	ld	(hl), a
      0003C2 06 00                 1047 	ld	b, #0x00
      0003C4 2B                    1048 	dec	hl
      0003C5 79                    1049 	ld	a, c
      0003C6 96                    1050 	sub	a, (hl)
      0003C7 23                    1051 	inc	hl
      0003C8 78                    1052 	ld	a, b
      0003C9 9E                    1053 	sbc	a, (hl)
      0003CA 78                    1054 	ld	a, b
      0003CB 57                    1055 	ld	d, a
      0003CC CB 7E                 1056 	bit	7, (hl)
      0003CE 28 07                 1057 	jr	Z, 00142$
      0003D0 CB 7A                 1058 	bit	7, d
      0003D2 20 08                 1059 	jr	NZ, 00143$
      0003D4 BF                    1060 	cp	a, a
      0003D5 18 05                 1061 	jr	00143$
      0003D7                       1062 00142$:
      0003D7 CB 7A                 1063 	bit	7, d
      0003D9 28 01                 1064 	jr	Z, 00143$
      0003DB 37                    1065 	scf
      0003DC                       1066 00143$:
      0003DC 30 05                 1067 	jr	NC, 00113$
                                   1068 ;main.c:62: return -4;
      0003DE 1E FC                 1069 	ld	e, #0xfc
      0003E0 C3r74r04              1070 	jp	00115$
      0003E3                       1071 00113$:
                                   1072 ;main.c:63: } else if(ballcentery < pad->y + padsectors[1]) { // < 50%
      0003E3 FAr0Ar00              1073 	ld	a, (#(_padsectors + 0x0001) + 0)
      0003E6 16 00                 1074 	ld	d, #0x00
                                   1075 ;c
      0003E8 5F                    1076 	ld	e, a
      0003E9 E1                    1077 	pop	hl
      0003EA E5                    1078 	push	hl
      0003EB 19                    1079 	add	hl, de
      0003EC E5                    1080 	push	hl
      0003ED 7D                    1081 	ld	a, l
      0003EE F8 04                 1082 	ldhl	sp,	#4
      0003F0 77                    1083 	ld	(hl), a
      0003F1 E1                    1084 	pop	hl
      0003F2 7C                    1085 	ld	a, h
      0003F3 F8 03                 1086 	ldhl	sp,	#3
      0003F5 32                    1087 	ld	(hl-), a
      0003F6 79                    1088 	ld	a, c
      0003F7 96                    1089 	sub	a, (hl)
      0003F8 23                    1090 	inc	hl
      0003F9 78                    1091 	ld	a, b
      0003FA 9E                    1092 	sbc	a, (hl)
      0003FB 78                    1093 	ld	a, b
      0003FC 57                    1094 	ld	d, a
      0003FD CB 7E                 1095 	bit	7, (hl)
      0003FF 28 07                 1096 	jr	Z, 00144$
      000401 CB 7A                 1097 	bit	7, d
      000403 20 08                 1098 	jr	NZ, 00145$
      000405 BF                    1099 	cp	a, a
      000406 18 05                 1100 	jr	00145$
      000408                       1101 00144$:
      000408 CB 7A                 1102 	bit	7, d
      00040A 28 01                 1103 	jr	Z, 00145$
      00040C 37                    1104 	scf
      00040D                       1105 00145$:
      00040D 30 04                 1106 	jr	NC, 00110$
                                   1107 ;main.c:64: return -2;
      00040F 1E FE                 1108 	ld	e, #0xfe
      000411 18 61                 1109 	jr	00115$
      000413                       1110 00110$:
                                   1111 ;main.c:65: } else if(ballcentery == pad->y + padsectors[1]) { // == 50%
      000413 F8 02                 1112 	ldhl	sp,	#2
      000415 7E                    1113 	ld	a, (hl)
      000416 91                    1114 	sub	a, c
      000417 20 08                 1115 	jr	NZ, 00107$
      000419 23                    1116 	inc	hl
      00041A 7E                    1117 	ld	a, (hl)
                                   1118 ;main.c:66: return 0;
      00041B 90                    1119 	sub	a,b
      00041C 20 03                 1120 	jr	NZ, 00107$
      00041E 5F                    1121 	ld	e,a
      00041F 18 53                 1122 	jr	00115$
      000421                       1123 00107$:
                                   1124 ;main.c:67: } else if(ballcentery > pad->y + padsectors[2]) { // > 75%
      000421 FAr0Br00              1125 	ld	a, (#(_padsectors + 0x0002) + 0)
      000424 16 00                 1126 	ld	d, #0x00
                                   1127 ;c
      000426 5F                    1128 	ld	e, a
      000427 E1                    1129 	pop	hl
      000428 E5                    1130 	push	hl
      000429 19                    1131 	add	hl, de
      00042A E5                    1132 	push	hl
      00042B 7D                    1133 	ld	a, l
      00042C F8 06                 1134 	ldhl	sp,	#6
      00042E 77                    1135 	ld	(hl), a
      00042F E1                    1136 	pop	hl
      000430 7C                    1137 	ld	a, h
      000431 F8 05                 1138 	ldhl	sp,	#5
      000433 32                    1139 	ld	(hl-), a
      000434 7E                    1140 	ld	a, (hl)
      000435 91                    1141 	sub	a, c
      000436 23                    1142 	inc	hl
      000437 7E                    1143 	ld	a, (hl)
      000438 98                    1144 	sbc	a, b
      000439 56                    1145 	ld	d, (hl)
      00043A 78                    1146 	ld	a, b
      00043B CB 7F                 1147 	bit	7,a
      00043D 28 07                 1148 	jr	Z, 00148$
      00043F CB 7A                 1149 	bit	7, d
      000441 20 08                 1150 	jr	NZ, 00149$
      000443 BF                    1151 	cp	a, a
      000444 18 05                 1152 	jr	00149$
      000446                       1153 00148$:
      000446 CB 7A                 1154 	bit	7, d
      000448 28 01                 1155 	jr	Z, 00149$
      00044A 37                    1156 	scf
      00044B                       1157 00149$:
      00044B 30 04                 1158 	jr	NC, 00104$
                                   1159 ;main.c:68: return 4;
      00044D 1E 04                 1160 	ld	e, #0x04
      00044F 18 23                 1161 	jr	00115$
      000451                       1162 00104$:
                                   1163 ;main.c:69: } else if(ballcentery > pad->y + padsectors[1]) { // > 50%
      000451 F8 02                 1164 	ldhl	sp,	#2
      000453 7E                    1165 	ld	a, (hl)
      000454 91                    1166 	sub	a, c
      000455 23                    1167 	inc	hl
      000456 7E                    1168 	ld	a, (hl)
      000457 98                    1169 	sbc	a, b
      000458 56                    1170 	ld	d, (hl)
      000459 78                    1171 	ld	a, b
      00045A CB 7F                 1172 	bit	7,a
      00045C 28 07                 1173 	jr	Z, 00150$
      00045E CB 7A                 1174 	bit	7, d
      000460 20 08                 1175 	jr	NZ, 00151$
      000462 BF                    1176 	cp	a, a
      000463 18 05                 1177 	jr	00151$
      000465                       1178 00150$:
      000465 CB 7A                 1179 	bit	7, d
      000467 28 01                 1180 	jr	Z, 00151$
      000469 37                    1181 	scf
      00046A                       1182 00151$:
      00046A 30 04                 1183 	jr	NC, 00108$
                                   1184 ;main.c:70: return 2;
      00046C 1E 02                 1185 	ld	e, #0x02
      00046E 18 04                 1186 	jr	00115$
      000470                       1187 00108$:
                                   1188 ;main.c:72: return ballspeedy; // Just getting rid of a compiler warning
      000470 21r01r00              1189 	ld	hl, #_ballspeedy
      000473 5E                    1190 	ld	e, (hl)
      000474                       1191 00115$:
                                   1192 ;main.c:73: }
      000474 E8 06                 1193 	add	sp, #6
      000476 C9                    1194 	ret
                                   1195 ;main.c:75: void move_ball(Paddle * ppl1, Paddle * pcpu) {
                                   1196 ;	---------------------------------
                                   1197 ; Function move_ball
                                   1198 ; ---------------------------------
      000477                       1199 _move_ball::
                                   1200 ;main.c:76: UINT8 nextballposx = ballposx + ballspeedx;
      000477 FAr02r00              1201 	ld	a, (#_ballposx)
      00047A 21r00r00              1202 	ld	hl, #_ballspeedx
      00047D 86                    1203 	add	a, (hl)
      00047E 4F                    1204 	ld	c, a
                                   1205 ;main.c:77: UINT8 nextballposy = ballposy + ballspeedy;
      00047F FAr03r00              1206 	ld	a, (#_ballposy)
      000482 21r01r00              1207 	ld	hl, #_ballspeedy
      000485 86                    1208 	add	a, (hl)
      000486 47                    1209 	ld	b, a
                                   1210 ;main.c:78: if(hits_walls(nextballposy, 8)) {
      000487 C5                    1211 	push	bc
      000488 3E 08                 1212 	ld	a, #0x08
      00048A F5                    1213 	push	af
      00048B 33                    1214 	inc	sp
      00048C C5                    1215 	push	bc
      00048D 33                    1216 	inc	sp
      00048E CDr4Ar02              1217 	call	_hits_walls
      000491 E8 02                 1218 	add	sp, #2
      000493 7B                    1219 	ld	a, e
      000494 C1                    1220 	pop	bc
      000495 B7                    1221 	or	a, a
      000496 28 06                 1222 	jr	Z, 00102$
                                   1223 ;main.c:79: ballspeedy *= -1; // Bounce off wall
      000498 AF                    1224 	xor	a, a
      000499 21r01r00              1225 	ld	hl, #_ballspeedy
      00049C 96                    1226 	sub	a, (hl)
      00049D 77                    1227 	ld	(hl), a
      00049E                       1228 00102$:
                                   1229 ;main.c:81: if(hits_paddle(nextballposx, nextballposy, ppl1)) {
      00049E C5                    1230 	push	bc
      00049F F8 04                 1231 	ldhl	sp,	#4
      0004A1 2A                    1232 	ld	a, (hl+)
      0004A2 66                    1233 	ld	h, (hl)
      0004A3 6F                    1234 	ld	l, a
      0004A4 E5                    1235 	push	hl
      0004A5 C5                    1236 	push	bc
      0004A6 CDr83r02              1237 	call	_hits_paddle
      0004A9 E8 04                 1238 	add	sp, #4
      0004AB 7B                    1239 	ld	a, e
      0004AC C1                    1240 	pop	bc
      0004AD B7                    1241 	or	a, a
      0004AE 28 16                 1242 	jr	Z, 00106$
                                   1243 ;main.c:82: ballspeedx *= -1;
      0004B0 AF                    1244 	xor	a, a
      0004B1 21r00r00              1245 	ld	hl, #_ballspeedx
      0004B4 96                    1246 	sub	a, (hl)
      0004B5 77                    1247 	ld	(hl), a
                                   1248 ;main.c:83: ballspeedy = get_bounce_off_dir_y(ppl1);
      0004B6 C1                    1249 	pop	bc
      0004B7 E1                    1250 	pop	hl
      0004B8 E5                    1251 	push	hl
      0004B9 C5                    1252 	push	bc
      0004BA E5                    1253 	push	hl
      0004BB CDr9Ar03              1254 	call	_get_bounce_off_dir_y
      0004BE E8 02                 1255 	add	sp, #2
      0004C0 21r01r00              1256 	ld	hl, #_ballspeedy
      0004C3 73                    1257 	ld	(hl), e
      0004C4 18 25                 1258 	jr	00107$
      0004C6                       1259 00106$:
                                   1260 ;main.c:84: } else if(hits_paddle(nextballposx, nextballposy, pcpu)) {
      0004C6 F8 04                 1261 	ldhl	sp,	#4
      0004C8 2A                    1262 	ld	a, (hl+)
      0004C9 66                    1263 	ld	h, (hl)
      0004CA 6F                    1264 	ld	l, a
      0004CB E5                    1265 	push	hl
      0004CC C5                    1266 	push	bc
      0004CD CDr83r02              1267 	call	_hits_paddle
      0004D0 E8 04                 1268 	add	sp, #4
      0004D2 7B                    1269 	ld	a, e
      0004D3 B7                    1270 	or	a, a
      0004D4 28 15                 1271 	jr	Z, 00107$
                                   1272 ;main.c:85: ballspeedx *= -1;
      0004D6 AF                    1273 	xor	a, a
      0004D7 21r00r00              1274 	ld	hl, #_ballspeedx
      0004DA 96                    1275 	sub	a, (hl)
      0004DB 77                    1276 	ld	(hl), a
                                   1277 ;main.c:86: ballspeedy = get_bounce_off_dir_y(pcpu);
      0004DC F8 04                 1278 	ldhl	sp,	#4
      0004DE 2A                    1279 	ld	a, (hl+)
      0004DF 66                    1280 	ld	h, (hl)
      0004E0 6F                    1281 	ld	l, a
      0004E1 E5                    1282 	push	hl
      0004E2 CDr9Ar03              1283 	call	_get_bounce_off_dir_y
      0004E5 E8 02                 1284 	add	sp, #2
      0004E7 21r01r00              1285 	ld	hl, #_ballspeedy
      0004EA 73                    1286 	ld	(hl), e
      0004EB                       1287 00107$:
                                   1288 ;main.c:88: ballposx += ballspeedx;
      0004EB FAr02r00              1289 	ld	a, (#_ballposx)
      0004EE 21r00r00              1290 	ld	hl, #_ballspeedx
      0004F1 86                    1291 	add	a, (hl)
      0004F2 EAr02r00              1292 	ld	(#_ballposx),a
                                   1293 ;main.c:89: ballposy += ballspeedy;
      0004F5 FAr03r00              1294 	ld	a, (#_ballposy)
      0004F8 21r01r00              1295 	ld	hl, #_ballspeedy
      0004FB 86                    1296 	add	a, (hl)
      0004FC EAr03r00              1297 	ld	(#_ballposy),a
                                   1298 ;main.c:90: scroll_sprite(0, ballspeedx, ballspeedy);
      0004FF 21r01r00              1299 	ld	hl, #_ballspeedy
      000502 56                    1300 	ld	d, (hl)
      000503 21r00r00              1301 	ld	hl, #_ballspeedx
      000506 5E                    1302 	ld	e, (hl)
                                   1303 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      000507 01r00r00              1304 	ld	bc, #_shadow_OAM+0
                                   1305 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      00050A 0A                    1306 	ld	a, (bc)
      00050B 82                    1307 	add	a, d
      00050C 02                    1308 	ld	(bc), a
      00050D 03                    1309 	inc	bc
      00050E 0A                    1310 	ld	a, (bc)
      00050F 83                    1311 	add	a, e
      000510 02                    1312 	ld	(bc), a
                                   1313 ;main.c:90: scroll_sprite(0, ballspeedx, ballspeedy);
                                   1314 ;main.c:91: }
      000511 C9                    1315 	ret
                                   1316 ;main.c:93: void init_paddle(Paddle * pdl, UINT8 firsttilenum,UINT8 posx, UINT8 posy) {
                                   1317 ;	---------------------------------
                                   1318 ; Function init_paddle
                                   1319 ; ---------------------------------
      000512                       1320 _init_paddle::
      000512 E8 FB                 1321 	add	sp, #-5
                                   1322 ;main.c:96: pdl->x = posx;
      000514 F8 07                 1323 	ldhl	sp,#7
      000516 2A                    1324 	ld	a, (hl+)
      000517 5F                    1325 	ld	e, a
      000518 2A                    1326 	ld	a, (hl+)
      000519 57                    1327 	ld	d, a
      00051A 23                    1328 	inc	hl
      00051B 7E                    1329 	ld	a, (hl)
      00051C 12                    1330 	ld	(de), a
                                   1331 ;main.c:97: pdl->y = posy;
      00051D 4B                    1332 	ld	c, e
      00051E 42                    1333 	ld	b, d
      00051F 03                    1334 	inc	bc
      000520 23                    1335 	inc	hl
      000521 7E                    1336 	ld	a, (hl)
      000522 02                    1337 	ld	(bc), a
                                   1338 ;main.c:98: pdl->firsttile = firsttilenum;
      000523 13                    1339 	inc	de
      000524 13                    1340 	inc	de
      000525 2B                    1341 	dec	hl
      000526 2B                    1342 	dec	hl
      000527 7E                    1343 	ld	a, (hl)
      000528 12                    1344 	ld	(de), a
                                   1345 ;main.c:100: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000529 21r06r00              1346 	ld	hl, #_padheight
      00052C 4E                    1347 	ld	c, (hl)
      00052D 06 00                 1348 	ld	b, #0x00
      00052F 0B                    1349 	dec	bc
                                   1350 ;main.c:101: set_sprite_tile(firsttilenum, 1);
      000530 F8 09                 1351 	ldhl	sp,	#9
      000532 5E                    1352 	ld	e, (hl)
                                   1353 ;main.c:100: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000533 78                    1354 	ld	a, b
      000534 B1                    1355 	or	a, c
      000535 20 1C                 1356 	jr	NZ, 00102$
                                   1357 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000537 6B                    1358 	ld	l, e
      000538 26 00                 1359 	ld	h, #0x00
      00053A 29                    1360 	add	hl, hl
      00053B 29                    1361 	add	hl, hl
      00053C 5D                    1362 	ld	e, l
      00053D 54                    1363 	ld	d, h
      00053E 21r02r00              1364 	ld	hl,#_shadow_OAM+1+1
      000541 19                    1365 	add	hl,de
      000542 36 01                 1366 	ld	(hl), #0x01
                                   1367 ;main.c:102: move_sprite(firsttilenum, posx, posy);
      000544 F8 0B                 1368 	ldhl	sp,	#11
      000546 3A                    1369 	ld	a, (hl-)
      000547 47                    1370 	ld	b, a
      000548 4E                    1371 	ld	c, (hl)
                                   1372 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000549 21r00r00              1373 	ld	hl, #_shadow_OAM
      00054C 19                    1374 	add	hl, de
                                   1375 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00054D 78                    1376 	ld	a, b
      00054E 22                    1377 	ld	(hl+), a
      00054F 71                    1378 	ld	(hl), c
                                   1379 ;main.c:103: return;
      000550 C3r22r06              1380 	jp	00115$
      000553                       1381 00102$:
                                   1382 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000553 F8 00                 1383 	ldhl	sp,	#0
      000555 73                    1384 	ld	(hl), e
      000556 AF                    1385 	xor	a, a
      000557 23                    1386 	inc	hl
      000558 77                    1387 	ld	(hl), a
      000559 C1                    1388 	pop	bc
      00055A C5                    1389 	push	bc
      00055B CB 21                 1390 	sla	c
      00055D CB 10                 1391 	rl	b
      00055F CB 21                 1392 	sla	c
      000561 CB 10                 1393 	rl	b
      000563 21r02r00              1394 	ld	hl,#_shadow_OAM+1+1
      000566 09                    1395 	add	hl,bc
      000567 36 02                 1396 	ld	(hl), #0x02
                                   1397 ;main.c:106: move_sprite(firsttilenum, posx, posy);
      000569 F8 0B                 1398 	ldhl	sp,	#11
      00056B 3A                    1399 	ld	a, (hl-)
      00056C 57                    1400 	ld	d, a
      00056D 7E                    1401 	ld	a, (hl)
      00056E F8 02                 1402 	ldhl	sp,	#2
      000570 77                    1403 	ld	(hl), a
                                   1404 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000571 21r00r00              1405 	ld	hl, #_shadow_OAM
      000574 09                    1406 	add	hl, bc
      000575 4D                    1407 	ld	c, l
      000576 44                    1408 	ld	b, h
                                   1409 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000577 7A                    1410 	ld	a, d
      000578 02                    1411 	ld	(bc), a
      000579 03                    1412 	inc	bc
      00057A F8 02                 1413 	ldhl	sp,	#2
      00057C 7E                    1414 	ld	a, (hl)
      00057D 02                    1415 	ld	(bc), a
                                   1416 ;main.c:108: tileind = firsttilenum + 1;
      00057E 7B                    1417 	ld	a, e
      00057F 3C                    1418 	inc	a
      000580 EAr12r00              1419 	ld	(#_tileind),a
                                   1420 ;main.c:109: itr = 1;
      000583 21r13r00              1421 	ld	hl, #_itr
      000586 36 01                 1422 	ld	(hl), #0x01
                                   1423 ;main.c:110: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      000588                       1424 00103$:
      000588 21r06r00              1425 	ld	hl, #_padheight
      00058B 4E                    1426 	ld	c, (hl)
      00058C 06 00                 1427 	ld	b, #0x00
      00058E E1                    1428 	pop	hl
      00058F E5                    1429 	push	hl
      000590 09                    1430 	add	hl, bc
      000591 4D                    1431 	ld	c, l
      000592 44                    1432 	ld	b, h
      000593 0B                    1433 	dec	bc
      000594 FAr12r00              1434 	ld	a, (#_tileind)
      000597 F8 03                 1435 	ldhl	sp,	#3
      000599 77                    1436 	ld	(hl), a
      00059A AF                    1437 	xor	a, a
      00059B 23                    1438 	inc	hl
      00059C 77                    1439 	ld	(hl), a
                                   1440 ;main.c:111: set_sprite_tile(tileind, 3);
      00059D 21r12r00              1441 	ld	hl, #_tileind
      0005A0 5E                    1442 	ld	e, (hl)
                                   1443 ;main.c:110: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      0005A1 F8 03                 1444 	ldhl	sp,	#3
      0005A3 7E                    1445 	ld	a, (hl)
      0005A4 91                    1446 	sub	a, c
      0005A5 20 05                 1447 	jr	NZ, 00133$
      0005A7 23                    1448 	inc	hl
      0005A8 7E                    1449 	ld	a, (hl)
      0005A9 90                    1450 	sub	a, b
      0005AA 28 36                 1451 	jr	Z, 00105$
      0005AC                       1452 00133$:
                                   1453 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0005AC 01r00r00              1454 	ld	bc, #_shadow_OAM+0
      0005AF 26 00                 1455 	ld	h, #0x00
      0005B1 6B                    1456 	ld	l, e
      0005B2 29                    1457 	add	hl, hl
      0005B3 29                    1458 	add	hl, hl
      0005B4 09                    1459 	add	hl, bc
      0005B5 23                    1460 	inc	hl
      0005B6 23                    1461 	inc	hl
      0005B7 36 03                 1462 	ld	(hl), #0x03
                                   1463 ;main.c:112: move_sprite(tileind, posx, posy + itr * 8);
      0005B9 FAr13r00              1464 	ld	a, (#_itr)
      0005BC 87                    1465 	add	a, a
      0005BD 87                    1466 	add	a, a
      0005BE 87                    1467 	add	a, a
      0005BF 4A                    1468 	ld	c, d
      0005C0 81                    1469 	add	a, c
      0005C1 5F                    1470 	ld	e, a
      0005C2 21r12r00              1471 	ld	hl, #_tileind
      0005C5 4E                    1472 	ld	c, (hl)
                                   1473 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0005C6 26 00                 1474 	ld	h, #0x00
      0005C8 69                    1475 	ld	l, c
      0005C9 29                    1476 	add	hl, hl
      0005CA 29                    1477 	add	hl, hl
      0005CB 01r00r00              1478 	ld	bc, #_shadow_OAM
      0005CE 09                    1479 	add	hl, bc
      0005CF 4D                    1480 	ld	c, l
      0005D0 44                    1481 	ld	b, h
                                   1482 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0005D1 7B                    1483 	ld	a, e
      0005D2 02                    1484 	ld	(bc), a
      0005D3 03                    1485 	inc	bc
      0005D4 F8 02                 1486 	ldhl	sp,	#2
      0005D6 7E                    1487 	ld	a, (hl)
      0005D7 02                    1488 	ld	(bc), a
                                   1489 ;main.c:113: tileind++;
      0005D8 21r12r00              1490 	ld	hl, #_tileind
      0005DB 34                    1491 	inc	(hl)
                                   1492 ;main.c:114: itr++;
      0005DC 21r13r00              1493 	ld	hl, #_itr
      0005DF 34                    1494 	inc	(hl)
      0005E0 18 A6                 1495 	jr	00103$
      0005E2                       1496 00105$:
                                   1497 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0005E2 01r00r00              1498 	ld	bc, #_shadow_OAM+0
      0005E5 26 00                 1499 	ld	h, #0x00
      0005E7 6B                    1500 	ld	l, e
      0005E8 29                    1501 	add	hl, hl
      0005E9 29                    1502 	add	hl, hl
      0005EA 09                    1503 	add	hl, bc
      0005EB 23                    1504 	inc	hl
      0005EC 23                    1505 	inc	hl
      0005ED 36 02                 1506 	ld	(hl), #0x02
                                   1507 ;main.c:118: set_sprite_prop(tileind, 0x40); // Flip the last tile vertically
      0005EF 21r12r00              1508 	ld	hl, #_tileind
      0005F2 5E                    1509 	ld	e, (hl)
                                   1510 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1191: shadow_OAM[nb].prop=prop;
      0005F3 01r00r00              1511 	ld	bc, #_shadow_OAM+0
      0005F6 26 00                 1512 	ld	h, #0x00
      0005F8 6B                    1513 	ld	l, e
      0005F9 29                    1514 	add	hl, hl
      0005FA 29                    1515 	add	hl, hl
      0005FB 09                    1516 	add	hl, bc
      0005FC 23                    1517 	inc	hl
      0005FD 23                    1518 	inc	hl
      0005FE 23                    1519 	inc	hl
      0005FF 36 40                 1520 	ld	(hl), #0x40
                                   1521 ;main.c:119: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000601 FAr06r00              1522 	ld	a, (#_padheight)
      000604 3D                    1523 	dec	a
      000605 87                    1524 	add	a, a
      000606 87                    1525 	add	a, a
      000607 87                    1526 	add	a, a
      000608 82                    1527 	add	a, d
      000609 4F                    1528 	ld	c, a
      00060A 21r12r00              1529 	ld	hl, #_tileind
      00060D 46                    1530 	ld	b, (hl)
                                   1531 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00060E 26 00                 1532 	ld	h, #0x00
      000610 68                    1533 	ld	l, b
      000611 29                    1534 	add	hl, hl
      000612 29                    1535 	add	hl, hl
      000613 7D                    1536 	ld	a, l
      000614 C6r00                 1537 	add	a, #<(_shadow_OAM)
      000616 5F                    1538 	ld	e, a
      000617 7C                    1539 	ld	a, h
      000618 CEs00                 1540 	adc	a, #>(_shadow_OAM)
      00061A 57                    1541 	ld	d, a
                                   1542 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00061B 79                    1543 	ld	a, c
      00061C 12                    1544 	ld	(de), a
      00061D 13                    1545 	inc	de
      00061E F8 02                 1546 	ldhl	sp,	#2
      000620 7E                    1547 	ld	a, (hl)
      000621 12                    1548 	ld	(de), a
                                   1549 ;main.c:119: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000622                       1550 00115$:
                                   1551 ;main.c:121: }
      000622 E8 05                 1552 	add	sp, #5
      000624 C9                    1553 	ret
                                   1554 ;main.c:123: void move_paddle(Paddle * pdl, UINT8 pdlsp) {
                                   1555 ;	---------------------------------
                                   1556 ; Function move_paddle
                                   1557 ; ---------------------------------
      000625                       1558 _move_paddle::
      000625 E8 FD                 1559 	add	sp, #-3
                                   1560 ;main.c:124: UINT8 nextpdly = pdl->y + pdlsp;
      000627 F8 05                 1561 	ldhl	sp,#5
      000629 2A                    1562 	ld	a, (hl+)
      00062A 5F                    1563 	ld	e, a
      00062B 56                    1564 	ld	d, (hl)
      00062C 4B                    1565 	ld	c, e
      00062D 42                    1566 	ld	b, d
      00062E 03                    1567 	inc	bc
      00062F 0A                    1568 	ld	a, (bc)
      000630 23                    1569 	inc	hl
      000631 86                    1570 	add	a, (hl)
      000632 F8 02                 1571 	ldhl	sp,	#2
      000634 77                    1572 	ld	(hl), a
                                   1573 ;main.c:125: if(!hits_walls(nextpdly, padheight *8)) {
      000635 FAr06r00              1574 	ld	a, (#_padheight)
      000638 87                    1575 	add	a, a
      000639 87                    1576 	add	a, a
      00063A 87                    1577 	add	a, a
      00063B C5                    1578 	push	bc
      00063C D5                    1579 	push	de
      00063D F5                    1580 	push	af
      00063E 33                    1581 	inc	sp
      00063F F8 07                 1582 	ldhl	sp,	#7
      000641 7E                    1583 	ld	a, (hl)
      000642 F5                    1584 	push	af
      000643 33                    1585 	inc	sp
      000644 CDr4Ar02              1586 	call	_hits_walls
      000647 E8 02                 1587 	add	sp, #2
      000649 7B                    1588 	ld	a, e
      00064A D1                    1589 	pop	de
      00064B C1                    1590 	pop	bc
      00064C B7                    1591 	or	a, a
      00064D 20 43                 1592 	jr	NZ, 00108$
                                   1593 ;main.c:126: for(itr = 0; itr != padheight; itr++) {
      00064F 21r13r00              1594 	ld	hl, #_itr
      000652 36 00                 1595 	ld	(hl), #0x00
      000654 F8 07                 1596 	ldhl	sp,	#7
      000656 7E                    1597 	ld	a, (hl)
      000657 F8 00                 1598 	ldhl	sp,	#0
      000659 77                    1599 	ld	(hl), a
      00065A 13                    1600 	inc	de
      00065B 13                    1601 	inc	de
      00065C 23                    1602 	inc	hl
      00065D 7B                    1603 	ld	a, e
      00065E 22                    1604 	ld	(hl+), a
      00065F 72                    1605 	ld	(hl), d
      000660                       1606 00106$:
      000660 FAr13r00              1607 	ld	a, (#_itr)
      000663 21r06r00              1608 	ld	hl, #_padheight
      000666 96                    1609 	sub	a, (hl)
      000667 28 24                 1610 	jr	Z, 00101$
                                   1611 ;main.c:127: scroll_sprite(pdl->firsttile + itr, 0, pdlsp);
      000669 F8 01                 1612 	ldhl	sp,#1
      00066B 2A                    1613 	ld	a, (hl+)
      00066C 5F                    1614 	ld	e, a
      00066D 56                    1615 	ld	d, (hl)
      00066E 1A                    1616 	ld	a, (de)
      00066F 21r13r00              1617 	ld	hl, #_itr
      000672 86                    1618 	add	a, (hl)
      000673 5F                    1619 	ld	e, a
                                   1620 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      000674 26 00                 1621 	ld	h, #0x00
      000676 6B                    1622 	ld	l, e
      000677 29                    1623 	add	hl, hl
      000678 29                    1624 	add	hl, hl
      000679 11r00r00              1625 	ld	de, #_shadow_OAM
      00067C 19                    1626 	add	hl, de
      00067D 5D                    1627 	ld	e, l
      00067E 54                    1628 	ld	d, h
                                   1629 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      00067F 1A                    1630 	ld	a, (de)
      000680 F8 00                 1631 	ldhl	sp,	#0
      000682 86                    1632 	add	a, (hl)
      000683 12                    1633 	ld	(de), a
      000684 13                    1634 	inc	de
      000685 1A                    1635 	ld	a, (de)
      000686 12                    1636 	ld	(de), a
                                   1637 ;main.c:126: for(itr = 0; itr != padheight; itr++) {
      000687 21r13r00              1638 	ld	hl, #_itr
      00068A 34                    1639 	inc	(hl)
      00068B 18 D3                 1640 	jr	00106$
      00068D                       1641 00101$:
                                   1642 ;main.c:129: pdl->y += pdlsp;
      00068D 0A                    1643 	ld	a, (bc)
      00068E F8 00                 1644 	ldhl	sp,	#0
      000690 86                    1645 	add	a, (hl)
      000691 02                    1646 	ld	(bc), a
      000692                       1647 00108$:
                                   1648 ;main.c:131: }
      000692 E8 03                 1649 	add	sp, #3
      000694 C9                    1650 	ret
                                   1651 ;main.c:133: void init_playfield() {
                                   1652 ;	---------------------------------
                                   1653 ; Function init_playfield
                                   1654 ; ---------------------------------
      000695                       1655 _init_playfield::
                                   1656 ;main.c:134: set_bkg_data(0, 7, pongbkgtiles);
      000695 21r19r00              1657 	ld	hl, #_pongbkgtiles
      000698 E5                    1658 	push	hl
      000699 3E 07                 1659 	ld	a, #0x07
      00069B F5                    1660 	push	af
      00069C 33                    1661 	inc	sp
      00069D AF                    1662 	xor	a, a
      00069E F5                    1663 	push	af
      00069F 33                    1664 	inc	sp
      0006A0 CDr00r00              1665 	call	_set_bkg_data
      0006A3 E8 04                 1666 	add	sp, #4
                                   1667 ;main.c:135: set_bkg_tiles(0, 0, 20, 18, ponggamemap);
      0006A5 21r89r00              1668 	ld	hl, #_ponggamemap
      0006A8 E5                    1669 	push	hl
      0006A9 11 14 12              1670 	ld	de, #0x1214
      0006AC D5                    1671 	push	de
      0006AD AF                    1672 	xor	a, a
      0006AE F5                    1673 	push	af
      0006AF 33                    1674 	inc	sp
      0006B0 AF                    1675 	xor	a, a
      0006B1 F5                    1676 	push	af
      0006B2 33                    1677 	inc	sp
      0006B3 CDr00r00              1678 	call	_set_bkg_tiles
      0006B6 E8 06                 1679 	add	sp, #6
                                   1680 ;main.c:137: set_sprite_data(0, 5, pongspritetiles);
      0006B8 21rF1r01              1681 	ld	hl, #_pongspritetiles
      0006BB E5                    1682 	push	hl
      0006BC 3E 05                 1683 	ld	a, #0x05
      0006BE F5                    1684 	push	af
      0006BF 33                    1685 	inc	sp
      0006C0 AF                    1686 	xor	a, a
      0006C1 F5                    1687 	push	af
      0006C2 33                    1688 	inc	sp
      0006C3 CDr00r00              1689 	call	_set_sprite_data
      0006C6 E8 04                 1690 	add	sp, #4
                                   1691 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0006C8 21r02r00              1692 	ld	hl, #(_shadow_OAM + 0x0002)
      0006CB 36 04                 1693 	ld	(hl), #0x04
                                   1694 ;main.c:139: move_sprite(0, ballposx, ballposy); // Move ball to the middle of the playing field
      0006CD 21r03r00              1695 	ld	hl, #_ballposy
      0006D0 46                    1696 	ld	b, (hl)
      0006D1 21r02r00              1697 	ld	hl, #_ballposx
      0006D4 4E                    1698 	ld	c, (hl)
                                   1699 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0006D5 21r00r00              1700 	ld	hl, #_shadow_OAM
                                   1701 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0006D8 78                    1702 	ld	a, b
      0006D9 22                    1703 	ld	(hl+), a
      0006DA 71                    1704 	ld	(hl), c
                                   1705 ;main.c:143: UINT8 padinity = 16 + (144 - (padheight * 8)) / 2;
      0006DB 21r06r00              1706 	ld	hl, #_padheight
      0006DE 6E                    1707 	ld	l, (hl)
      0006DF 26 00                 1708 	ld	h, #0x00
      0006E1 29                    1709 	add	hl, hl
      0006E2 29                    1710 	add	hl, hl
      0006E3 29                    1711 	add	hl, hl
      0006E4 3E 90                 1712 	ld	a, #0x90
      0006E6 95                    1713 	sub	a, l
      0006E7 6F                    1714 	ld	l, a
      0006E8 3E 00                 1715 	ld	a, #0x00
      0006EA 9C                    1716 	sbc	a, h
      0006EB 67                    1717 	ld	h, a
      0006EC 4D                    1718 	ld	c, l
      0006ED 44                    1719 	ld	b, h
      0006EE CB 7C                 1720 	bit	7, h
      0006F0 28 03                 1721 	jr	Z, 00106$
      0006F2 23                    1722 	inc	hl
      0006F3 4D                    1723 	ld	c, l
      0006F4 44                    1724 	ld	b, h
      0006F5                       1725 00106$:
      0006F5 CB 28                 1726 	sra	b
      0006F7 CB 19                 1727 	rr	c
      0006F9 79                    1728 	ld	a, c
      0006FA C6 10                 1729 	add	a, #0x10
      0006FC 47                    1730 	ld	b, a
                                   1731 ;main.c:144: init_paddle(&pdlpl1, 2, 16, padinity);
      0006FD C5                    1732 	push	bc
      0006FE C5                    1733 	push	bc
      0006FF 33                    1734 	inc	sp
      000700 11 02 10              1735 	ld	de, #0x1002
      000703 D5                    1736 	push	de
      000704 21r0Cr00              1737 	ld	hl, #_pdlpl1
      000707 E5                    1738 	push	hl
      000708 CDr12r05              1739 	call	_init_paddle
      00070B E8 05                 1740 	add	sp, #5
      00070D C1                    1741 	pop	bc
                                   1742 ;main.c:145: init_paddle(&pdlcpu, pdlpl1.firsttile + padheight, 152, padinity);
      00070E FAr0Er00              1743 	ld	a, (#(_pdlpl1 + 0x0002) + 0)
      000711 21r06r00              1744 	ld	hl, #_padheight
      000714 86                    1745 	add	a, (hl)
      000715 57                    1746 	ld	d, a
      000716 0E 98                 1747 	ld	c, #0x98
      000718 C5                    1748 	push	bc
      000719 D5                    1749 	push	de
      00071A 33                    1750 	inc	sp
      00071B 21r0Fr00              1751 	ld	hl, #_pdlcpu
      00071E E5                    1752 	push	hl
      00071F CDr12r05              1753 	call	_init_paddle
      000722 E8 05                 1754 	add	sp, #5
                                   1755 ;main.c:146: set_pad_sectors();
      000724 CDr00r00              1756 	call	_set_pad_sectors
                                   1757 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000727 21r04r00              1758 	ld	hl, #(_shadow_OAM + 0x0004)
                                   1759 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00072A 3E 50                 1760 	ld	a, #0x50
      00072C 22                    1761 	ld	(hl+), a
      00072D 36 18                 1762 	ld	(hl), #0x18
                                   1763 ;main.c:148: move_sprite(1, 24, 80);
                                   1764 ;main.c:149: }
      00072F C9                    1765 	ret
                                   1766 ;main.c:151: void begin_round() {
                                   1767 ;	---------------------------------
                                   1768 ; Function begin_round
                                   1769 ; ---------------------------------
      000730                       1770 _begin_round::
                                   1771 ;main.c:153: while(1) {  // When called regularly, initrand always returns the same values, idk why
      000730                       1772 00104$:
                                   1773 ;main.c:154: initrand(DIV_REG);
      000730 F0r00                 1774 	ldh	a, (_DIV_REG+0)
      000732 4F                    1775 	ld	c, a
      000733 06 00                 1776 	ld	b, #0x00
      000735 C5                    1777 	push	bc
      000736 CDr00r00              1778 	call	_initrand
      000739 E8 02                 1779 	add	sp, #2
                                   1780 ;main.c:155: if(joypad() & J_START) {
      00073B CDr00r00              1781 	call	_joypad
      00073E 7B                    1782 	ld	a, e
      00073F 07                    1783 	rlca
      000740 30 EE                 1784 	jr	NC, 00104$
                                   1785 ;main.c:160: randindx = rand() % 2; // Random number between 0 and 1
      000742 CDr00r00              1786 	call	_rand
      000745 7B                    1787 	ld	a, e
      000746 17                    1788 	rla
      000747 9F                    1789 	sbc	a, a
      000748 57                    1790 	ld	d, a
      000749 21 02 00              1791 	ld	hl, #0x0002
      00074C E5                    1792 	push	hl
      00074D D5                    1793 	push	de
      00074E CDr00r00              1794 	call	__modsint
      000751 E8 04                 1795 	add	sp, #4
      000753 21r14r00              1796 	ld	hl, #_randindx
      000756 73                    1797 	ld	(hl), e
                                   1798 ;main.c:161: initrand(DIV_REG);
      000757 F0r00                 1799 	ldh	a, (_DIV_REG+0)
      000759 4F                    1800 	ld	c, a
      00075A 06 00                 1801 	ld	b, #0x00
      00075C C5                    1802 	push	bc
      00075D CDr00r00              1803 	call	_initrand
      000760 E8 02                 1804 	add	sp, #2
                                   1805 ;main.c:162: randindy = rand() % 5; // Random number between 0 and 4
      000762 CDr00r00              1806 	call	_rand
      000765 7B                    1807 	ld	a, e
      000766 17                    1808 	rla
      000767 9F                    1809 	sbc	a, a
      000768 57                    1810 	ld	d, a
      000769 21 05 00              1811 	ld	hl, #0x0005
      00076C E5                    1812 	push	hl
      00076D D5                    1813 	push	de
      00076E CDr00r00              1814 	call	__modsint
      000771 E8 04                 1815 	add	sp, #4
      000773 21r15r00              1816 	ld	hl, #_randindy
      000776 73                    1817 	ld	(hl), e
                                   1818 ;main.c:163: ballspeedx = stspeedpoolx[randindx];
      000777 01r41r02              1819 	ld	bc, #_stspeedpoolx+0
      00077A 79                    1820 	ld	a, c
      00077B 21r14r00              1821 	ld	hl, #_randindx
      00077E 86                    1822 	add	a, (hl)
      00077F 4F                    1823 	ld	c, a
      000780 30 01                 1824 	jr	NC, 00154$
      000782 04                    1825 	inc	b
      000783                       1826 00154$:
      000783 0A                    1827 	ld	a, (bc)
      000784 EAr00r00              1828 	ld	(#_ballspeedx),a
                                   1829 ;main.c:164: ballspeedy = stspeedpooly[randindy];
      000787 01r43r02              1830 	ld	bc, #_stspeedpooly+0
      00078A 79                    1831 	ld	a, c
      00078B 21r15r00              1832 	ld	hl, #_randindy
      00078E 86                    1833 	add	a, (hl)
      00078F 4F                    1834 	ld	c, a
      000790 30 01                 1835 	jr	NC, 00155$
      000792 04                    1836 	inc	b
      000793                       1837 00155$:
      000793 0A                    1838 	ld	a, (bc)
      000794 EAr01r00              1839 	ld	(#_ballspeedy),a
                                   1840 ;main.c:166: while(1) {
      000797                       1841 00112$:
                                   1842 ;main.c:167: framecnt += framecnt != ballmvframe ? 1 : -ballmvframe + 1; // Resetting the frame counter
      000797 FAr04r00              1843 	ld	a, (#_framecnt)
      00079A 21r05r00              1844 	ld	hl, #_ballmvframe
      00079D 96                    1845 	sub	a, (hl)
      00079E 28 05                 1846 	jr	Z, 00116$
      0007A0 01 01 00              1847 	ld	bc, #0x0001
      0007A3 18 09                 1848 	jr	00117$
      0007A5                       1849 00116$:
      0007A5 AF                    1850 	xor	a, a
      0007A6 21r05r00              1851 	ld	hl, #_ballmvframe
      0007A9 96                    1852 	sub	a, (hl)
      0007AA 4F                    1853 	ld	c, a
      0007AB 0C                    1854 	inc	c
      0007AC 79                    1855 	ld	a, c
      0007AD 17                    1856 	rla
      0007AE                       1857 00117$:
      0007AE 21r04r00              1858 	ld	hl, #_framecnt
      0007B1 7E                    1859 	ld	a, (hl)
      0007B2 81                    1860 	add	a, c
      0007B3 77                    1861 	ld	(hl), a
                                   1862 ;main.c:169: switch(joypad()) {
      0007B4 CDr00r00              1863 	call	_joypad
      0007B7 7B                    1864 	ld	a, e
      0007B8 FE 04                 1865 	cp	a, #0x04
      0007BA 28 06                 1866 	jr	Z, 00106$
      0007BC D6 08                 1867 	sub	a, #0x08
      0007BE 28 15                 1868 	jr	Z, 00107$
      0007C0 18 21                 1869 	jr	00108$
                                   1870 ;main.c:170: case J_UP:
      0007C2                       1871 00106$:
                                   1872 ;main.c:171: move_paddle(&pdlpl1, -padpl1speed);
      0007C2 AF                    1873 	xor	a, a
      0007C3 21r07r00              1874 	ld	hl, #_padpl1speed
      0007C6 96                    1875 	sub	a, (hl)
      0007C7 47                    1876 	ld	b, a
      0007C8 C5                    1877 	push	bc
      0007C9 33                    1878 	inc	sp
      0007CA 21r0Cr00              1879 	ld	hl, #_pdlpl1
      0007CD E5                    1880 	push	hl
      0007CE CDr25r06              1881 	call	_move_paddle
      0007D1 E8 03                 1882 	add	sp, #3
                                   1883 ;main.c:172: break;
      0007D3 18 0E                 1884 	jr	00108$
                                   1885 ;main.c:173: case J_DOWN:
      0007D5                       1886 00107$:
                                   1887 ;main.c:174: move_paddle(&pdlpl1, padpl1speed);
      0007D5 FAr07r00              1888 	ld	a, (#_padpl1speed)
      0007D8 F5                    1889 	push	af
      0007D9 33                    1890 	inc	sp
      0007DA 21r0Cr00              1891 	ld	hl, #_pdlpl1
      0007DD E5                    1892 	push	hl
      0007DE CDr25r06              1893 	call	_move_paddle
      0007E1 E8 03                 1894 	add	sp, #3
                                   1895 ;main.c:176: }
      0007E3                       1896 00108$:
                                   1897 ;main.c:178: if(framecnt == ballmvframe) {
      0007E3 FAr04r00              1898 	ld	a, (#_framecnt)
      0007E6 21r05r00              1899 	ld	hl, #_ballmvframe
      0007E9 96                    1900 	sub	a, (hl)
      0007EA 20 0D                 1901 	jr	NZ, 00110$
                                   1902 ;main.c:179: move_ball(&pdlpl1, &pdlcpu);
      0007EC 21r0Fr00              1903 	ld	hl, #_pdlcpu
      0007EF E5                    1904 	push	hl
      0007F0 21r0Cr00              1905 	ld	hl, #_pdlpl1
      0007F3 E5                    1906 	push	hl
      0007F4 CDr77r04              1907 	call	_move_ball
      0007F7 E8 04                 1908 	add	sp, #4
      0007F9                       1909 00110$:
                                   1910 ;main.c:182: wait_vbl_done();
      0007F9 CDr00r00              1911 	call	_wait_vbl_done
                                   1912 ;main.c:184: }
      0007FC 18 99                 1913 	jr	00112$
                                   1914 ;main.c:186: void auto_speed_adj() {
                                   1915 ;	---------------------------------
                                   1916 ; Function auto_speed_adj
                                   1917 ; ---------------------------------
      0007FE                       1918 _auto_speed_adj::
                                   1919 ;main.c:188: }
      0007FE C9                    1920 	ret
                                   1921 ;main.c:190: void manual_speed_adj() {
                                   1922 ;	---------------------------------
                                   1923 ; Function manual_speed_adj
                                   1924 ; ---------------------------------
      0007FF                       1925 _manual_speed_adj::
                                   1926 ;main.c:192: }
      0007FF C9                    1927 	ret
                                   1928 ;main.c:194: void main() {
                                   1929 ;	---------------------------------
                                   1930 ; Function main
                                   1931 ; ---------------------------------
      000800                       1932 _main::
                                   1933 ;main.c:196: DISPLAY_ON;
      000800 F0r00                 1934 	ldh	a, (_LCDC_REG+0)
      000802 F6 80                 1935 	or	a, #0x80
      000804 E0r00                 1936 	ldh	(_LCDC_REG+0),a
                                   1937 ;main.c:197: SHOW_BKG;
      000806 F0r00                 1938 	ldh	a, (_LCDC_REG+0)
      000808 F6 01                 1939 	or	a, #0x01
      00080A E0r00                 1940 	ldh	(_LCDC_REG+0),a
                                   1941 ;main.c:198: SHOW_SPRITES;
      00080C F0r00                 1942 	ldh	a, (_LCDC_REG+0)
      00080E F6 02                 1943 	or	a, #0x02
      000810 E0r00                 1944 	ldh	(_LCDC_REG+0),a
                                   1945 ;main.c:200: init_playfield();
      000812 CDr95r06              1946 	call	_init_playfield
                                   1947 ;main.c:201: begin_round();
                                   1948 ;main.c:205: }
      000815 C3r30r07              1949 	jp  _begin_round
                                   1950 	.area _CODE
                                   1951 	.area _CABS (ABS)
