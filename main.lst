                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _rand
                                     13 	.globl _initrand
                                     14 	.globl _fill_bkg_rect
                                     15 	.globl _set_sprite_data
                                     16 	.globl _set_win_tiles
                                     17 	.globl _set_bkg_tiles
                                     18 	.globl _set_bkg_data
                                     19 	.globl _wait_vbl_done
                                     20 	.globl _joypad
                                     21 	.globl _numtiles
                                     22 	.globl _rounddispl
                                     23 	.globl _hud
                                     24 	.globl _rounddisploffset
                                     25 	.globl _roundcnt
                                     26 	.globl _roundlimit
                                     27 	.globl _speedind
                                     28 	.globl _paddlehitscnt
                                     29 	.globl _chspeedflgdir
                                     30 	.globl _autospeedflg
                                     31 	.globl _exitgameflg
                                     32 	.globl _cpuscore
                                     33 	.globl _pl1score
                                     34 	.globl _randindy
                                     35 	.globl _randindx
                                     36 	.globl _j
                                     37 	.globl _i
                                     38 	.globl _difficulty
                                     39 	.globl _tileind
                                     40 	.globl _ball
                                     41 	.globl _pdlcpu
                                     42 	.globl _pdlpl1
                                     43 	.globl _padinity
                                     44 	.globl _padsectors
                                     45 	.globl _padspeed
                                     46 	.globl _padheight
                                     47 	.globl _ballmvframe
                                     48 	.globl _framecnt
                                     49 	.globl _presst
                                     50 	.globl _speedchframes
                                     51 	.globl _bkgborderdown
                                     52 	.globl _bkgborderup
                                     53 	.globl _stspeedpooly
                                     54 	.globl _stspeedpoolx
                                     55 	.globl _difficulty_px
                                     56 	.globl _startballposxy
                                     57 	.globl _pongfonttiles
                                     58 	.globl _pongspritetiles
                                     59 	.globl _ponggamemap
                                     60 	.globl _pongbkgtiles
                                     61 	.globl _set_playfield_bkg
                                     62 	.globl _default_settings
                                     63 	.globl _center_ball
                                     64 	.globl _move_ball
                                     65 	.globl _hits_walls
                                     66 	.globl _init_paddle
                                     67 	.globl _set_pad_sectors
                                     68 	.globl _move_paddle
                                     69 	.globl _scroll_paddle_tiles
                                     70 	.globl _hits_paddle
                                     71 	.globl _get_bounce_off_dir_y
                                     72 	.globl _action_cpu
                                     73 	.globl _auto_speed_adj
                                     74 	.globl _upd_number_tiles_arr
                                     75 	.globl _trim_blank_num_tiles
                                     76 	.globl _upd_round_tiles
                                     77 	.globl _upd_score_tiles
                                     78 	.globl _display_round_num
                                     79 	.globl _erase_round_num
                                     80 	.globl _upd_hud
                                     81 	.globl _increment_score
                                     82 	.globl _init_game
                                     83 	.globl _prep_next_round
                                     84 	.globl _is_round_over
                                     85 	.globl _begin_round
                                     86 	.globl _start_game
                                     87 ;--------------------------------------------------------
                                     88 ; special function registers
                                     89 ;--------------------------------------------------------
                                     90 ;--------------------------------------------------------
                                     91 ; ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area _DATA
      000000                         94 _framecnt::
      000000                         95 	.ds 1
      000001                         96 _ballmvframe::
      000001                         97 	.ds 1
      000002                         98 _padheight::
      000002                         99 	.ds 1
      000003                        100 _padspeed::
      000003                        101 	.ds 1
      000004                        102 _padsectors::
      000004                        103 	.ds 3
      000007                        104 _padinity::
      000007                        105 	.ds 1
      000008                        106 _pdlpl1::
      000008                        107 	.ds 3
      00000B                        108 _pdlcpu::
      00000B                        109 	.ds 3
      00000E                        110 _ball::
      00000E                        111 	.ds 4
      000012                        112 _tileind::
      000012                        113 	.ds 1
      000013                        114 _difficulty::
      000013                        115 	.ds 1
      000014                        116 _i::
      000014                        117 	.ds 1
      000015                        118 _j::
      000015                        119 	.ds 1
      000016                        120 _randindx::
      000016                        121 	.ds 1
      000017                        122 _randindy::
      000017                        123 	.ds 1
      000018                        124 _pl1score::
      000018                        125 	.ds 1
      000019                        126 _cpuscore::
      000019                        127 	.ds 1
      00001A                        128 _exitgameflg::
      00001A                        129 	.ds 1
      00001B                        130 _autospeedflg::
      00001B                        131 	.ds 1
      00001C                        132 _chspeedflgdir::
      00001C                        133 	.ds 1
      00001D                        134 _paddlehitscnt::
      00001D                        135 	.ds 1
      00001E                        136 _speedind::
      00001E                        137 	.ds 1
      00001F                        138 _roundlimit::
      00001F                        139 	.ds 1
      000020                        140 _roundcnt::
      000020                        141 	.ds 1
      000021                        142 _rounddisploffset::
      000021                        143 	.ds 1
      000022                        144 _hud::
      000022                        145 	.ds 19
      000035                        146 _rounddispl::
      000035                        147 	.ds 9
      00003E                        148 _numtiles::
      00003E                        149 	.ds 3
                                    150 ;--------------------------------------------------------
                                    151 ; absolute external ram data
                                    152 ;--------------------------------------------------------
                                    153 	.area _DABS (ABS)
                                    154 ;--------------------------------------------------------
                                    155 ; global & static initialisations
                                    156 ;--------------------------------------------------------
                                    157 	.area _HOME
                                    158 	.area _GSINIT
                                    159 	.area _GSFINAL
                                    160 	.area _GSINIT
                                    161 ;main.c:40: unsigned char hud[19] = {0x1C, 0x18, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x28, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x1C, 0x21};
      000000 21r22r00               162 	ld	hl, #_hud
      000003 36 1C                  163 	ld	(hl), #0x1c
      000005 21r23r00               164 	ld	hl, #(_hud + 0x0001)
      000008 36 18                  165 	ld	(hl), #0x18
      00000A 21r24r00               166 	ld	hl, #(_hud + 0x0002)
      00000D 36 04                  167 	ld	(hl), #0x04
      00000F 21r25r00               168 	ld	hl, #(_hud + 0x0003)
      000012 36 00                  169 	ld	(hl), #0x00
      000014 21r26r00               170 	ld	hl, #(_hud + 0x0004)
      000017 36 00                  171 	ld	(hl), #0x00
      000019 21r27r00               172 	ld	hl, #(_hud + 0x0005)
      00001C 36 00                  173 	ld	(hl), #0x00
      00001E 21r28r00               174 	ld	hl, #(_hud + 0x0006)
      000021 36 00                  175 	ld	(hl), #0x00
      000023 21r29r00               176 	ld	hl, #(_hud + 0x0007)
      000026 36 00                  177 	ld	(hl), #0x00
      000028 21r2Ar00               178 	ld	hl, #(_hud + 0x0008)
      00002B 36 03                  179 	ld	(hl), #0x03
      00002D 21r2Br00               180 	ld	hl, #(_hud + 0x0009)
      000030 36 28                  181 	ld	(hl), #0x28
      000032 21r2Cr00               182 	ld	hl, #(_hud + 0x000a)
      000035 36 03                  183 	ld	(hl), #0x03
      000037 21r2Dr00               184 	ld	hl, #(_hud + 0x000b)
      00003A 36 00                  185 	ld	(hl), #0x00
      00003C 21r2Er00               186 	ld	hl, #(_hud + 0x000c)
      00003F 36 00                  187 	ld	(hl), #0x00
      000041 21r2Fr00               188 	ld	hl, #(_hud + 0x000d)
      000044 36 00                  189 	ld	(hl), #0x00
      000046 21r30r00               190 	ld	hl, #(_hud + 0x000e)
      000049 36 00                  191 	ld	(hl), #0x00
      00004B 21r31r00               192 	ld	hl, #(_hud + 0x000f)
      00004E 36 00                  193 	ld	(hl), #0x00
      000050 21r32r00               194 	ld	hl, #(_hud + 0x0010)
      000053 36 0F                  195 	ld	(hl), #0x0f
      000055 21r33r00               196 	ld	hl, #(_hud + 0x0011)
      000058 36 1C                  197 	ld	(hl), #0x1c
      00005A 21r34r00               198 	ld	hl, #(_hud + 0x0012)
      00005D 36 21                  199 	ld	(hl), #0x21
                                    200 ;main.c:41: unsigned char rounddispl[9] = {0x1E, 0x1B, 0x21, 0x1A, 0x10, 0x00, 0x00, 0x00, 0x00};
      00005F 21r35r00               201 	ld	hl, #_rounddispl
      000062 36 1E                  202 	ld	(hl), #0x1e
      000064 21r36r00               203 	ld	hl, #(_rounddispl + 0x0001)
      000067 36 1B                  204 	ld	(hl), #0x1b
      000069 21r37r00               205 	ld	hl, #(_rounddispl + 0x0002)
      00006C 36 21                  206 	ld	(hl), #0x21
      00006E 21r38r00               207 	ld	hl, #(_rounddispl + 0x0003)
      000071 36 1A                  208 	ld	(hl), #0x1a
      000073 21r39r00               209 	ld	hl, #(_rounddispl + 0x0004)
      000076 36 10                  210 	ld	(hl), #0x10
      000078 21r3Ar00               211 	ld	hl, #(_rounddispl + 0x0005)
      00007B 36 00                  212 	ld	(hl), #0x00
      00007D 21r3Br00               213 	ld	hl, #(_rounddispl + 0x0006)
      000080 36 00                  214 	ld	(hl), #0x00
      000082 21r3Cr00               215 	ld	hl, #(_rounddispl + 0x0007)
      000085 36 00                  216 	ld	(hl), #0x00
      000087 21r3Dr00               217 	ld	hl, #(_rounddispl + 0x0008)
      00008A 36 00                  218 	ld	(hl), #0x00
                                    219 ;--------------------------------------------------------
                                    220 ; Home
                                    221 ;--------------------------------------------------------
                                    222 	.area _HOME
                                    223 	.area _HOME
                                    224 ;--------------------------------------------------------
                                    225 ; code
                                    226 ;--------------------------------------------------------
                                    227 	.area _CODE
                                    228 ;main.c:75: void set_playfield_bkg() {
                                    229 ;	---------------------------------
                                    230 ; Function set_playfield_bkg
                                    231 ; ---------------------------------
      000000                        232 _set_playfield_bkg::
                                    233 ;main.c:76: set_bkg_data(0, 41, pongfonttiles);
      000000 21r59r02               234 	ld	hl, #_pongfonttiles
      000003 E5                     235 	push	hl
      000004 3E 29                  236 	ld	a, #0x29
      000006 F5                     237 	push	af
      000007 33                     238 	inc	sp
      000008 AF                     239 	xor	a, a
      000009 F5                     240 	push	af
      00000A 33                     241 	inc	sp
      00000B CDr00r00               242 	call	_set_bkg_data
      00000E E8 04                  243 	add	sp, #4
                                    244 ;main.c:77: set_bkg_data(41, 7, pongbkgtiles);
      000010 21r31r00               245 	ld	hl, #_pongbkgtiles
      000013 E5                     246 	push	hl
      000014 11 29 07               247 	ld	de, #0x0729
      000017 D5                     248 	push	de
      000018 CDr00r00               249 	call	_set_bkg_data
      00001B E8 04                  250 	add	sp, #4
                                    251 ;main.c:78: set_bkg_tiles(0, 0, 20, 18, ponggamemap);
      00001D 21rA1r00               252 	ld	hl, #_ponggamemap
      000020 E5                     253 	push	hl
      000021 11 14 12               254 	ld	de, #0x1214
      000024 D5                     255 	push	de
      000025 AF                     256 	xor	a, a
      000026 F5                     257 	push	af
      000027 33                     258 	inc	sp
      000028 AF                     259 	xor	a, a
      000029 F5                     260 	push	af
      00002A 33                     261 	inc	sp
      00002B CDr00r00               262 	call	_set_bkg_tiles
      00002E E8 06                  263 	add	sp, #6
                                    264 ;main.c:79: }
      000030 C9                     265 	ret
      000031                        266 _pongbkgtiles:
      000031 00                     267 	.db #0x00	; 0
      000032 00                     268 	.db #0x00	; 0
      000033 00                     269 	.db #0x00	; 0
      000034 00                     270 	.db #0x00	; 0
      000035 00                     271 	.db #0x00	; 0
      000036 00                     272 	.db #0x00	; 0
      000037 00                     273 	.db #0x00	; 0
      000038 00                     274 	.db #0x00	; 0
      000039 00                     275 	.db #0x00	; 0
      00003A 00                     276 	.db #0x00	; 0
      00003B 00                     277 	.db #0x00	; 0
      00003C 00                     278 	.db #0x00	; 0
      00003D 00                     279 	.db #0x00	; 0
      00003E 00                     280 	.db #0x00	; 0
      00003F 00                     281 	.db #0x00	; 0
      000040 00                     282 	.db #0x00	; 0
      000041 00                     283 	.db #0x00	; 0
      000042 00                     284 	.db #0x00	; 0
      000043 00                     285 	.db #0x00	; 0
      000044 00                     286 	.db #0x00	; 0
      000045 00                     287 	.db #0x00	; 0
      000046 00                     288 	.db #0x00	; 0
      000047 00                     289 	.db #0x00	; 0
      000048 00                     290 	.db #0x00	; 0
      000049 00                     291 	.db #0x00	; 0
      00004A 00                     292 	.db #0x00	; 0
      00004B FF                     293 	.db #0xff	; 255
      00004C 00                     294 	.db #0x00	; 0
      00004D 00                     295 	.db #0x00	; 0
      00004E FF                     296 	.db #0xff	; 255
      00004F FF                     297 	.db #0xff	; 255
      000050 FF                     298 	.db #0xff	; 255
      000051 FF                     299 	.db #0xff	; 255
      000052 FF                     300 	.db #0xff	; 255
      000053 00                     301 	.db #0x00	; 0
      000054 FF                     302 	.db #0xff	; 255
      000055 FF                     303 	.db #0xff	; 255
      000056 00                     304 	.db #0x00	; 0
      000057 00                     305 	.db #0x00	; 0
      000058 00                     306 	.db #0x00	; 0
      000059 00                     307 	.db #0x00	; 0
      00005A 00                     308 	.db #0x00	; 0
      00005B 00                     309 	.db #0x00	; 0
      00005C 00                     310 	.db #0x00	; 0
      00005D 00                     311 	.db #0x00	; 0
      00005E 00                     312 	.db #0x00	; 0
      00005F 00                     313 	.db #0x00	; 0
      000060 00                     314 	.db #0x00	; 0
      000061 00                     315 	.db #0x00	; 0
      000062 80                     316 	.db #0x80	; 128
      000063 80                     317 	.db #0x80	; 128
      000064 40                     318 	.db #0x40	; 64
      000065 C0                     319 	.db #0xc0	; 192
      000066 20                     320 	.db #0x20	; 32
      000067 E0                     321 	.db #0xe0	; 224
      000068 10                     322 	.db #0x10	; 16
      000069 F0                     323 	.db #0xf0	; 240
      00006A 08                     324 	.db #0x08	; 8
      00006B 78                     325 	.db #0x78	; 120	'x'
      00006C 84                     326 	.db #0x84	; 132
      00006D 3C                     327 	.db #0x3c	; 60
      00006E C2                     328 	.db #0xc2	; 194
      00006F 9E                     329 	.db #0x9e	; 158
      000070 61                     330 	.db #0x61	; 97	'a'
      000071 00                     331 	.db #0x00	; 0
      000072 01                     332 	.db #0x01	; 1
      000073 01                     333 	.db #0x01	; 1
      000074 02                     334 	.db #0x02	; 2
      000075 03                     335 	.db #0x03	; 3
      000076 04                     336 	.db #0x04	; 4
      000077 07                     337 	.db #0x07	; 7
      000078 08                     338 	.db #0x08	; 8
      000079 0F                     339 	.db #0x0f	; 15
      00007A 10                     340 	.db #0x10	; 16
      00007B 1E                     341 	.db #0x1e	; 30
      00007C 21                     342 	.db #0x21	; 33
      00007D 3C                     343 	.db #0x3c	; 60
      00007E 43                     344 	.db #0x43	; 67	'C'
      00007F 79                     345 	.db #0x79	; 121	'y'
      000080 86                     346 	.db #0x86	; 134
      000081 79                     347 	.db #0x79	; 121	'y'
      000082 86                     348 	.db #0x86	; 134
      000083 3C                     349 	.db #0x3c	; 60
      000084 43                     350 	.db #0x43	; 67	'C'
      000085 1E                     351 	.db #0x1e	; 30
      000086 21                     352 	.db #0x21	; 33
      000087 0F                     353 	.db #0x0f	; 15
      000088 10                     354 	.db #0x10	; 16
      000089 07                     355 	.db #0x07	; 7
      00008A 08                     356 	.db #0x08	; 8
      00008B 03                     357 	.db #0x03	; 3
      00008C 04                     358 	.db #0x04	; 4
      00008D 01                     359 	.db #0x01	; 1
      00008E 02                     360 	.db #0x02	; 2
      00008F 00                     361 	.db #0x00	; 0
      000090 01                     362 	.db #0x01	; 1
      000091 9E                     363 	.db #0x9e	; 158
      000092 61                     364 	.db #0x61	; 97	'a'
      000093 3C                     365 	.db #0x3c	; 60
      000094 C2                     366 	.db #0xc2	; 194
      000095 78                     367 	.db #0x78	; 120	'x'
      000096 84                     368 	.db #0x84	; 132
      000097 F0                     369 	.db #0xf0	; 240
      000098 08                     370 	.db #0x08	; 8
      000099 E0                     371 	.db #0xe0	; 224
      00009A 10                     372 	.db #0x10	; 16
      00009B C0                     373 	.db #0xc0	; 192
      00009C 20                     374 	.db #0x20	; 32
      00009D 80                     375 	.db #0x80	; 128
      00009E 40                     376 	.db #0x40	; 64
      00009F 00                     377 	.db #0x00	; 0
      0000A0 80                     378 	.db #0x80	; 128
      0000A1                        379 _ponggamemap:
      0000A1 29                     380 	.db #0x29	; 41
      0000A2 29                     381 	.db #0x29	; 41
      0000A3 29                     382 	.db #0x29	; 41
      0000A4 29                     383 	.db #0x29	; 41
      0000A5 29                     384 	.db #0x29	; 41
      0000A6 29                     385 	.db #0x29	; 41
      0000A7 29                     386 	.db #0x29	; 41
      0000A8 29                     387 	.db #0x29	; 41
      0000A9 29                     388 	.db #0x29	; 41
      0000AA 29                     389 	.db #0x29	; 41
      0000AB 29                     390 	.db #0x29	; 41
      0000AC 29                     391 	.db #0x29	; 41
      0000AD 29                     392 	.db #0x29	; 41
      0000AE 29                     393 	.db #0x29	; 41
      0000AF 29                     394 	.db #0x29	; 41
      0000B0 29                     395 	.db #0x29	; 41
      0000B1 29                     396 	.db #0x29	; 41
      0000B2 29                     397 	.db #0x29	; 41
      0000B3 29                     398 	.db #0x29	; 41
      0000B4 29                     399 	.db #0x29	; 41
      0000B5 2A                     400 	.db #0x2a	; 42
      0000B6 2A                     401 	.db #0x2a	; 42
      0000B7 2A                     402 	.db #0x2a	; 42
      0000B8 2A                     403 	.db #0x2a	; 42
      0000B9 2A                     404 	.db #0x2a	; 42
      0000BA 2A                     405 	.db #0x2a	; 42
      0000BB 2A                     406 	.db #0x2a	; 42
      0000BC 2A                     407 	.db #0x2a	; 42
      0000BD 2A                     408 	.db #0x2a	; 42
      0000BE 2A                     409 	.db #0x2a	; 42
      0000BF 2A                     410 	.db #0x2a	; 42
      0000C0 2A                     411 	.db #0x2a	; 42
      0000C1 2A                     412 	.db #0x2a	; 42
      0000C2 2A                     413 	.db #0x2a	; 42
      0000C3 2A                     414 	.db #0x2a	; 42
      0000C4 2A                     415 	.db #0x2a	; 42
      0000C5 2A                     416 	.db #0x2a	; 42
      0000C6 2A                     417 	.db #0x2a	; 42
      0000C7 2A                     418 	.db #0x2a	; 42
      0000C8 2A                     419 	.db #0x2a	; 42
      0000C9 29                     420 	.db #0x29	; 41
      0000CA 29                     421 	.db #0x29	; 41
      0000CB 29                     422 	.db #0x29	; 41
      0000CC 29                     423 	.db #0x29	; 41
      0000CD 29                     424 	.db #0x29	; 41
      0000CE 29                     425 	.db #0x29	; 41
      0000CF 29                     426 	.db #0x29	; 41
      0000D0 29                     427 	.db #0x29	; 41
      0000D1 29                     428 	.db #0x29	; 41
      0000D2 29                     429 	.db #0x29	; 41
      0000D3 29                     430 	.db #0x29	; 41
      0000D4 29                     431 	.db #0x29	; 41
      0000D5 29                     432 	.db #0x29	; 41
      0000D6 29                     433 	.db #0x29	; 41
      0000D7 29                     434 	.db #0x29	; 41
      0000D8 29                     435 	.db #0x29	; 41
      0000D9 29                     436 	.db #0x29	; 41
      0000DA 29                     437 	.db #0x29	; 41
      0000DB 29                     438 	.db #0x29	; 41
      0000DC 29                     439 	.db #0x29	; 41
      0000DD 29                     440 	.db #0x29	; 41
      0000DE 29                     441 	.db #0x29	; 41
      0000DF 29                     442 	.db #0x29	; 41
      0000E0 29                     443 	.db #0x29	; 41
      0000E1 29                     444 	.db #0x29	; 41
      0000E2 29                     445 	.db #0x29	; 41
      0000E3 29                     446 	.db #0x29	; 41
      0000E4 29                     447 	.db #0x29	; 41
      0000E5 29                     448 	.db #0x29	; 41
      0000E6 29                     449 	.db #0x29	; 41
      0000E7 29                     450 	.db #0x29	; 41
      0000E8 29                     451 	.db #0x29	; 41
      0000E9 29                     452 	.db #0x29	; 41
      0000EA 29                     453 	.db #0x29	; 41
      0000EB 29                     454 	.db #0x29	; 41
      0000EC 29                     455 	.db #0x29	; 41
      0000ED 29                     456 	.db #0x29	; 41
      0000EE 29                     457 	.db #0x29	; 41
      0000EF 29                     458 	.db #0x29	; 41
      0000F0 29                     459 	.db #0x29	; 41
      0000F1 29                     460 	.db #0x29	; 41
      0000F2 29                     461 	.db #0x29	; 41
      0000F3 29                     462 	.db #0x29	; 41
      0000F4 29                     463 	.db #0x29	; 41
      0000F5 29                     464 	.db #0x29	; 41
      0000F6 29                     465 	.db #0x29	; 41
      0000F7 29                     466 	.db #0x29	; 41
      0000F8 29                     467 	.db #0x29	; 41
      0000F9 29                     468 	.db #0x29	; 41
      0000FA 29                     469 	.db #0x29	; 41
      0000FB 29                     470 	.db #0x29	; 41
      0000FC 29                     471 	.db #0x29	; 41
      0000FD 29                     472 	.db #0x29	; 41
      0000FE 29                     473 	.db #0x29	; 41
      0000FF 29                     474 	.db #0x29	; 41
      000100 29                     475 	.db #0x29	; 41
      000101 29                     476 	.db #0x29	; 41
      000102 29                     477 	.db #0x29	; 41
      000103 29                     478 	.db #0x29	; 41
      000104 29                     479 	.db #0x29	; 41
      000105 29                     480 	.db #0x29	; 41
      000106 29                     481 	.db #0x29	; 41
      000107 29                     482 	.db #0x29	; 41
      000108 29                     483 	.db #0x29	; 41
      000109 29                     484 	.db #0x29	; 41
      00010A 29                     485 	.db #0x29	; 41
      00010B 29                     486 	.db #0x29	; 41
      00010C 29                     487 	.db #0x29	; 41
      00010D 29                     488 	.db #0x29	; 41
      00010E 29                     489 	.db #0x29	; 41
      00010F 29                     490 	.db #0x29	; 41
      000110 29                     491 	.db #0x29	; 41
      000111 29                     492 	.db #0x29	; 41
      000112 29                     493 	.db #0x29	; 41
      000113 29                     494 	.db #0x29	; 41
      000114 29                     495 	.db #0x29	; 41
      000115 29                     496 	.db #0x29	; 41
      000116 29                     497 	.db #0x29	; 41
      000117 29                     498 	.db #0x29	; 41
      000118 29                     499 	.db #0x29	; 41
      000119 29                     500 	.db #0x29	; 41
      00011A 29                     501 	.db #0x29	; 41
      00011B 29                     502 	.db #0x29	; 41
      00011C 29                     503 	.db #0x29	; 41
      00011D 29                     504 	.db #0x29	; 41
      00011E 29                     505 	.db #0x29	; 41
      00011F 29                     506 	.db #0x29	; 41
      000120 29                     507 	.db #0x29	; 41
      000121 29                     508 	.db #0x29	; 41
      000122 29                     509 	.db #0x29	; 41
      000123 29                     510 	.db #0x29	; 41
      000124 29                     511 	.db #0x29	; 41
      000125 29                     512 	.db #0x29	; 41
      000126 29                     513 	.db #0x29	; 41
      000127 29                     514 	.db #0x29	; 41
      000128 29                     515 	.db #0x29	; 41
      000129 29                     516 	.db #0x29	; 41
      00012A 29                     517 	.db #0x29	; 41
      00012B 29                     518 	.db #0x29	; 41
      00012C 29                     519 	.db #0x29	; 41
      00012D 29                     520 	.db #0x29	; 41
      00012E 29                     521 	.db #0x29	; 41
      00012F 29                     522 	.db #0x29	; 41
      000130 29                     523 	.db #0x29	; 41
      000131 29                     524 	.db #0x29	; 41
      000132 29                     525 	.db #0x29	; 41
      000133 29                     526 	.db #0x29	; 41
      000134 29                     527 	.db #0x29	; 41
      000135 29                     528 	.db #0x29	; 41
      000136 29                     529 	.db #0x29	; 41
      000137 29                     530 	.db #0x29	; 41
      000138 29                     531 	.db #0x29	; 41
      000139 29                     532 	.db #0x29	; 41
      00013A 29                     533 	.db #0x29	; 41
      00013B 29                     534 	.db #0x29	; 41
      00013C 29                     535 	.db #0x29	; 41
      00013D 29                     536 	.db #0x29	; 41
      00013E 29                     537 	.db #0x29	; 41
      00013F 29                     538 	.db #0x29	; 41
      000140 29                     539 	.db #0x29	; 41
      000141 29                     540 	.db #0x29	; 41
      000142 29                     541 	.db #0x29	; 41
      000143 29                     542 	.db #0x29	; 41
      000144 29                     543 	.db #0x29	; 41
      000145 29                     544 	.db #0x29	; 41
      000146 29                     545 	.db #0x29	; 41
      000147 29                     546 	.db #0x29	; 41
      000148 29                     547 	.db #0x29	; 41
      000149 29                     548 	.db #0x29	; 41
      00014A 2D                     549 	.db #0x2d	; 45
      00014B 2C                     550 	.db #0x2c	; 44
      00014C 29                     551 	.db #0x29	; 41
      00014D 29                     552 	.db #0x29	; 41
      00014E 29                     553 	.db #0x29	; 41
      00014F 29                     554 	.db #0x29	; 41
      000150 29                     555 	.db #0x29	; 41
      000151 29                     556 	.db #0x29	; 41
      000152 29                     557 	.db #0x29	; 41
      000153 29                     558 	.db #0x29	; 41
      000154 29                     559 	.db #0x29	; 41
      000155 29                     560 	.db #0x29	; 41
      000156 29                     561 	.db #0x29	; 41
      000157 29                     562 	.db #0x29	; 41
      000158 29                     563 	.db #0x29	; 41
      000159 29                     564 	.db #0x29	; 41
      00015A 29                     565 	.db #0x29	; 41
      00015B 29                     566 	.db #0x29	; 41
      00015C 29                     567 	.db #0x29	; 41
      00015D 29                     568 	.db #0x29	; 41
      00015E 2E                     569 	.db #0x2e	; 46
      00015F 2F                     570 	.db #0x2f	; 47
      000160 29                     571 	.db #0x29	; 41
      000161 29                     572 	.db #0x29	; 41
      000162 29                     573 	.db #0x29	; 41
      000163 29                     574 	.db #0x29	; 41
      000164 29                     575 	.db #0x29	; 41
      000165 29                     576 	.db #0x29	; 41
      000166 29                     577 	.db #0x29	; 41
      000167 29                     578 	.db #0x29	; 41
      000168 29                     579 	.db #0x29	; 41
      000169 29                     580 	.db #0x29	; 41
      00016A 29                     581 	.db #0x29	; 41
      00016B 29                     582 	.db #0x29	; 41
      00016C 29                     583 	.db #0x29	; 41
      00016D 29                     584 	.db #0x29	; 41
      00016E 29                     585 	.db #0x29	; 41
      00016F 29                     586 	.db #0x29	; 41
      000170 29                     587 	.db #0x29	; 41
      000171 29                     588 	.db #0x29	; 41
      000172 29                     589 	.db #0x29	; 41
      000173 29                     590 	.db #0x29	; 41
      000174 29                     591 	.db #0x29	; 41
      000175 29                     592 	.db #0x29	; 41
      000176 29                     593 	.db #0x29	; 41
      000177 29                     594 	.db #0x29	; 41
      000178 29                     595 	.db #0x29	; 41
      000179 29                     596 	.db #0x29	; 41
      00017A 29                     597 	.db #0x29	; 41
      00017B 29                     598 	.db #0x29	; 41
      00017C 29                     599 	.db #0x29	; 41
      00017D 29                     600 	.db #0x29	; 41
      00017E 29                     601 	.db #0x29	; 41
      00017F 29                     602 	.db #0x29	; 41
      000180 29                     603 	.db #0x29	; 41
      000181 29                     604 	.db #0x29	; 41
      000182 29                     605 	.db #0x29	; 41
      000183 29                     606 	.db #0x29	; 41
      000184 29                     607 	.db #0x29	; 41
      000185 29                     608 	.db #0x29	; 41
      000186 29                     609 	.db #0x29	; 41
      000187 29                     610 	.db #0x29	; 41
      000188 29                     611 	.db #0x29	; 41
      000189 29                     612 	.db #0x29	; 41
      00018A 29                     613 	.db #0x29	; 41
      00018B 29                     614 	.db #0x29	; 41
      00018C 29                     615 	.db #0x29	; 41
      00018D 29                     616 	.db #0x29	; 41
      00018E 29                     617 	.db #0x29	; 41
      00018F 29                     618 	.db #0x29	; 41
      000190 29                     619 	.db #0x29	; 41
      000191 29                     620 	.db #0x29	; 41
      000192 29                     621 	.db #0x29	; 41
      000193 29                     622 	.db #0x29	; 41
      000194 29                     623 	.db #0x29	; 41
      000195 29                     624 	.db #0x29	; 41
      000196 29                     625 	.db #0x29	; 41
      000197 29                     626 	.db #0x29	; 41
      000198 29                     627 	.db #0x29	; 41
      000199 29                     628 	.db #0x29	; 41
      00019A 29                     629 	.db #0x29	; 41
      00019B 29                     630 	.db #0x29	; 41
      00019C 29                     631 	.db #0x29	; 41
      00019D 29                     632 	.db #0x29	; 41
      00019E 29                     633 	.db #0x29	; 41
      00019F 29                     634 	.db #0x29	; 41
      0001A0 29                     635 	.db #0x29	; 41
      0001A1 29                     636 	.db #0x29	; 41
      0001A2 29                     637 	.db #0x29	; 41
      0001A3 29                     638 	.db #0x29	; 41
      0001A4 29                     639 	.db #0x29	; 41
      0001A5 29                     640 	.db #0x29	; 41
      0001A6 29                     641 	.db #0x29	; 41
      0001A7 29                     642 	.db #0x29	; 41
      0001A8 29                     643 	.db #0x29	; 41
      0001A9 29                     644 	.db #0x29	; 41
      0001AA 29                     645 	.db #0x29	; 41
      0001AB 29                     646 	.db #0x29	; 41
      0001AC 29                     647 	.db #0x29	; 41
      0001AD 29                     648 	.db #0x29	; 41
      0001AE 29                     649 	.db #0x29	; 41
      0001AF 29                     650 	.db #0x29	; 41
      0001B0 29                     651 	.db #0x29	; 41
      0001B1 29                     652 	.db #0x29	; 41
      0001B2 29                     653 	.db #0x29	; 41
      0001B3 29                     654 	.db #0x29	; 41
      0001B4 29                     655 	.db #0x29	; 41
      0001B5 29                     656 	.db #0x29	; 41
      0001B6 29                     657 	.db #0x29	; 41
      0001B7 29                     658 	.db #0x29	; 41
      0001B8 29                     659 	.db #0x29	; 41
      0001B9 29                     660 	.db #0x29	; 41
      0001BA 29                     661 	.db #0x29	; 41
      0001BB 29                     662 	.db #0x29	; 41
      0001BC 29                     663 	.db #0x29	; 41
      0001BD 29                     664 	.db #0x29	; 41
      0001BE 29                     665 	.db #0x29	; 41
      0001BF 29                     666 	.db #0x29	; 41
      0001C0 29                     667 	.db #0x29	; 41
      0001C1 29                     668 	.db #0x29	; 41
      0001C2 29                     669 	.db #0x29	; 41
      0001C3 29                     670 	.db #0x29	; 41
      0001C4 29                     671 	.db #0x29	; 41
      0001C5 29                     672 	.db #0x29	; 41
      0001C6 29                     673 	.db #0x29	; 41
      0001C7 29                     674 	.db #0x29	; 41
      0001C8 29                     675 	.db #0x29	; 41
      0001C9 29                     676 	.db #0x29	; 41
      0001CA 29                     677 	.db #0x29	; 41
      0001CB 29                     678 	.db #0x29	; 41
      0001CC 29                     679 	.db #0x29	; 41
      0001CD 29                     680 	.db #0x29	; 41
      0001CE 29                     681 	.db #0x29	; 41
      0001CF 29                     682 	.db #0x29	; 41
      0001D0 29                     683 	.db #0x29	; 41
      0001D1 29                     684 	.db #0x29	; 41
      0001D2 29                     685 	.db #0x29	; 41
      0001D3 29                     686 	.db #0x29	; 41
      0001D4 29                     687 	.db #0x29	; 41
      0001D5 29                     688 	.db #0x29	; 41
      0001D6 29                     689 	.db #0x29	; 41
      0001D7 29                     690 	.db #0x29	; 41
      0001D8 29                     691 	.db #0x29	; 41
      0001D9 29                     692 	.db #0x29	; 41
      0001DA 29                     693 	.db #0x29	; 41
      0001DB 29                     694 	.db #0x29	; 41
      0001DC 29                     695 	.db #0x29	; 41
      0001DD 29                     696 	.db #0x29	; 41
      0001DE 29                     697 	.db #0x29	; 41
      0001DF 29                     698 	.db #0x29	; 41
      0001E0 29                     699 	.db #0x29	; 41
      0001E1 2B                     700 	.db #0x2b	; 43
      0001E2 2B                     701 	.db #0x2b	; 43
      0001E3 2B                     702 	.db #0x2b	; 43
      0001E4 2B                     703 	.db #0x2b	; 43
      0001E5 2B                     704 	.db #0x2b	; 43
      0001E6 2B                     705 	.db #0x2b	; 43
      0001E7 2B                     706 	.db #0x2b	; 43
      0001E8 2B                     707 	.db #0x2b	; 43
      0001E9 2B                     708 	.db #0x2b	; 43
      0001EA 2B                     709 	.db #0x2b	; 43
      0001EB 2B                     710 	.db #0x2b	; 43
      0001EC 2B                     711 	.db #0x2b	; 43
      0001ED 2B                     712 	.db #0x2b	; 43
      0001EE 2B                     713 	.db #0x2b	; 43
      0001EF 2B                     714 	.db #0x2b	; 43
      0001F0 2B                     715 	.db #0x2b	; 43
      0001F1 2B                     716 	.db #0x2b	; 43
      0001F2 2B                     717 	.db #0x2b	; 43
      0001F3 2B                     718 	.db #0x2b	; 43
      0001F4 2B                     719 	.db #0x2b	; 43
      0001F5 29                     720 	.db #0x29	; 41
      0001F6 29                     721 	.db #0x29	; 41
      0001F7 29                     722 	.db #0x29	; 41
      0001F8 29                     723 	.db #0x29	; 41
      0001F9 29                     724 	.db #0x29	; 41
      0001FA 29                     725 	.db #0x29	; 41
      0001FB 29                     726 	.db #0x29	; 41
      0001FC 29                     727 	.db #0x29	; 41
      0001FD 29                     728 	.db #0x29	; 41
      0001FE 29                     729 	.db #0x29	; 41
      0001FF 29                     730 	.db #0x29	; 41
      000200 29                     731 	.db #0x29	; 41
      000201 29                     732 	.db #0x29	; 41
      000202 29                     733 	.db #0x29	; 41
      000203 29                     734 	.db #0x29	; 41
      000204 29                     735 	.db #0x29	; 41
      000205 29                     736 	.db #0x29	; 41
      000206 29                     737 	.db #0x29	; 41
      000207 29                     738 	.db #0x29	; 41
      000208 29                     739 	.db #0x29	; 41
      000209                        740 _pongspritetiles:
      000209 00                     741 	.db #0x00	; 0
      00020A 00                     742 	.db #0x00	; 0
      00020B 00                     743 	.db #0x00	; 0
      00020C 00                     744 	.db #0x00	; 0
      00020D 00                     745 	.db #0x00	; 0
      00020E 00                     746 	.db #0x00	; 0
      00020F 00                     747 	.db #0x00	; 0
      000210 00                     748 	.db #0x00	; 0
      000211 00                     749 	.db #0x00	; 0
      000212 00                     750 	.db #0x00	; 0
      000213 00                     751 	.db #0x00	; 0
      000214 00                     752 	.db #0x00	; 0
      000215 00                     753 	.db #0x00	; 0
      000216 00                     754 	.db #0x00	; 0
      000217 00                     755 	.db #0x00	; 0
      000218 00                     756 	.db #0x00	; 0
      000219 FF                     757 	.db #0xff	; 255
      00021A FF                     758 	.db #0xff	; 255
      00021B FF                     759 	.db #0xff	; 255
      00021C 81                     760 	.db #0x81	; 129
      00021D C3                     761 	.db #0xc3	; 195
      00021E 81                     762 	.db #0x81	; 129
      00021F C3                     763 	.db #0xc3	; 195
      000220 99                     764 	.db #0x99	; 153
      000221 C3                     765 	.db #0xc3	; 195
      000222 99                     766 	.db #0x99	; 153
      000223 C3                     767 	.db #0xc3	; 195
      000224 81                     768 	.db #0x81	; 129
      000225 FF                     769 	.db #0xff	; 255
      000226 81                     770 	.db #0x81	; 129
      000227 FF                     771 	.db #0xff	; 255
      000228 FF                     772 	.db #0xff	; 255
      000229 FF                     773 	.db #0xff	; 255
      00022A FF                     774 	.db #0xff	; 255
      00022B FF                     775 	.db #0xff	; 255
      00022C 81                     776 	.db #0x81	; 129
      00022D C3                     777 	.db #0xc3	; 195
      00022E 81                     778 	.db #0x81	; 129
      00022F C3                     779 	.db #0xc3	; 195
      000230 99                     780 	.db #0x99	; 153
      000231 C3                     781 	.db #0xc3	; 195
      000232 99                     782 	.db #0x99	; 153
      000233 C3                     783 	.db #0xc3	; 195
      000234 99                     784 	.db #0x99	; 153
      000235 C3                     785 	.db #0xc3	; 195
      000236 99                     786 	.db #0x99	; 153
      000237 C3                     787 	.db #0xc3	; 195
      000238 99                     788 	.db #0x99	; 153
      000239 C3                     789 	.db #0xc3	; 195
      00023A 99                     790 	.db #0x99	; 153
      00023B C3                     791 	.db #0xc3	; 195
      00023C 99                     792 	.db #0x99	; 153
      00023D C3                     793 	.db #0xc3	; 195
      00023E 99                     794 	.db #0x99	; 153
      00023F C3                     795 	.db #0xc3	; 195
      000240 99                     796 	.db #0x99	; 153
      000241 C3                     797 	.db #0xc3	; 195
      000242 99                     798 	.db #0x99	; 153
      000243 C3                     799 	.db #0xc3	; 195
      000244 99                     800 	.db #0x99	; 153
      000245 C3                     801 	.db #0xc3	; 195
      000246 99                     802 	.db #0x99	; 153
      000247 C3                     803 	.db #0xc3	; 195
      000248 99                     804 	.db #0x99	; 153
      000249 18                     805 	.db #0x18	; 24
      00024A 18                     806 	.db #0x18	; 24
      00024B 7E                     807 	.db #0x7e	; 126
      00024C 66                     808 	.db #0x66	; 102	'f'
      00024D 7E                     809 	.db #0x7e	; 126
      00024E 42                     810 	.db #0x42	; 66	'B'
      00024F E7                     811 	.db #0xe7	; 231
      000250 99                     812 	.db #0x99	; 153
      000251 E7                     813 	.db #0xe7	; 231
      000252 99                     814 	.db #0x99	; 153
      000253 7E                     815 	.db #0x7e	; 126
      000254 42                     816 	.db #0x42	; 66	'B'
      000255 7E                     817 	.db #0x7e	; 126
      000256 66                     818 	.db #0x66	; 102	'f'
      000257 18                     819 	.db #0x18	; 24
      000258 18                     820 	.db #0x18	; 24
      000259                        821 _pongfonttiles:
      000259 00                     822 	.db #0x00	; 0
      00025A 00                     823 	.db #0x00	; 0
      00025B 00                     824 	.db #0x00	; 0
      00025C 00                     825 	.db #0x00	; 0
      00025D 00                     826 	.db #0x00	; 0
      00025E 00                     827 	.db #0x00	; 0
      00025F 00                     828 	.db #0x00	; 0
      000260 00                     829 	.db #0x00	; 0
      000261 00                     830 	.db #0x00	; 0
      000262 00                     831 	.db #0x00	; 0
      000263 00                     832 	.db #0x00	; 0
      000264 00                     833 	.db #0x00	; 0
      000265 00                     834 	.db #0x00	; 0
      000266 00                     835 	.db #0x00	; 0
      000267 00                     836 	.db #0x00	; 0
      000268 00                     837 	.db #0x00	; 0
      000269 00                     838 	.db #0x00	; 0
      00026A 00                     839 	.db #0x00	; 0
      00026B 00                     840 	.db #0x00	; 0
      00026C 00                     841 	.db #0x00	; 0
      00026D 00                     842 	.db #0x00	; 0
      00026E 00                     843 	.db #0x00	; 0
      00026F 00                     844 	.db #0x00	; 0
      000270 00                     845 	.db #0x00	; 0
      000271 00                     846 	.db #0x00	; 0
      000272 00                     847 	.db #0x00	; 0
      000273 00                     848 	.db #0x00	; 0
      000274 00                     849 	.db #0x00	; 0
      000275 7C                     850 	.db #0x7c	; 124
      000276 7C                     851 	.db #0x7c	; 124
      000277 00                     852 	.db #0x00	; 0
      000278 00                     853 	.db #0x00	; 0
      000279 7C                     854 	.db #0x7c	; 124
      00027A 7C                     855 	.db #0x7c	; 124
      00027B 7C                     856 	.db #0x7c	; 124
      00027C 7C                     857 	.db #0x7c	; 124
      00027D 7C                     858 	.db #0x7c	; 124
      00027E 7C                     859 	.db #0x7c	; 124
      00027F 7C                     860 	.db #0x7c	; 124
      000280 7C                     861 	.db #0x7c	; 124
      000281 7C                     862 	.db #0x7c	; 124
      000282 7C                     863 	.db #0x7c	; 124
      000283 7C                     864 	.db #0x7c	; 124
      000284 7C                     865 	.db #0x7c	; 124
      000285 7C                     866 	.db #0x7c	; 124
      000286 7C                     867 	.db #0x7c	; 124
      000287 00                     868 	.db #0x00	; 0
      000288 00                     869 	.db #0x00	; 0
      000289 7C                     870 	.db #0x7c	; 124
      00028A 7C                     871 	.db #0x7c	; 124
      00028B 44                     872 	.db #0x44	; 68	'D'
      00028C 44                     873 	.db #0x44	; 68	'D'
      00028D 4C                     874 	.db #0x4c	; 76	'L'
      00028E 4C                     875 	.db #0x4c	; 76	'L'
      00028F 54                     876 	.db #0x54	; 84	'T'
      000290 54                     877 	.db #0x54	; 84	'T'
      000291 64                     878 	.db #0x64	; 100	'd'
      000292 64                     879 	.db #0x64	; 100	'd'
      000293 44                     880 	.db #0x44	; 68	'D'
      000294 44                     881 	.db #0x44	; 68	'D'
      000295 7C                     882 	.db #0x7c	; 124
      000296 7C                     883 	.db #0x7c	; 124
      000297 00                     884 	.db #0x00	; 0
      000298 00                     885 	.db #0x00	; 0
      000299 04                     886 	.db #0x04	; 4
      00029A 04                     887 	.db #0x04	; 4
      00029B 04                     888 	.db #0x04	; 4
      00029C 04                     889 	.db #0x04	; 4
      00029D 04                     890 	.db #0x04	; 4
      00029E 04                     891 	.db #0x04	; 4
      00029F 04                     892 	.db #0x04	; 4
      0002A0 04                     893 	.db #0x04	; 4
      0002A1 04                     894 	.db #0x04	; 4
      0002A2 04                     895 	.db #0x04	; 4
      0002A3 04                     896 	.db #0x04	; 4
      0002A4 04                     897 	.db #0x04	; 4
      0002A5 04                     898 	.db #0x04	; 4
      0002A6 04                     899 	.db #0x04	; 4
      0002A7 00                     900 	.db #0x00	; 0
      0002A8 00                     901 	.db #0x00	; 0
      0002A9 7C                     902 	.db #0x7c	; 124
      0002AA 7C                     903 	.db #0x7c	; 124
      0002AB 04                     904 	.db #0x04	; 4
      0002AC 04                     905 	.db #0x04	; 4
      0002AD 04                     906 	.db #0x04	; 4
      0002AE 04                     907 	.db #0x04	; 4
      0002AF 7C                     908 	.db #0x7c	; 124
      0002B0 7C                     909 	.db #0x7c	; 124
      0002B1 40                     910 	.db #0x40	; 64
      0002B2 40                     911 	.db #0x40	; 64
      0002B3 40                     912 	.db #0x40	; 64
      0002B4 40                     913 	.db #0x40	; 64
      0002B5 7C                     914 	.db #0x7c	; 124
      0002B6 7C                     915 	.db #0x7c	; 124
      0002B7 00                     916 	.db #0x00	; 0
      0002B8 00                     917 	.db #0x00	; 0
      0002B9 7C                     918 	.db #0x7c	; 124
      0002BA 7C                     919 	.db #0x7c	; 124
      0002BB 04                     920 	.db #0x04	; 4
      0002BC 04                     921 	.db #0x04	; 4
      0002BD 04                     922 	.db #0x04	; 4
      0002BE 04                     923 	.db #0x04	; 4
      0002BF 7C                     924 	.db #0x7c	; 124
      0002C0 7C                     925 	.db #0x7c	; 124
      0002C1 04                     926 	.db #0x04	; 4
      0002C2 04                     927 	.db #0x04	; 4
      0002C3 04                     928 	.db #0x04	; 4
      0002C4 04                     929 	.db #0x04	; 4
      0002C5 7C                     930 	.db #0x7c	; 124
      0002C6 7C                     931 	.db #0x7c	; 124
      0002C7 00                     932 	.db #0x00	; 0
      0002C8 00                     933 	.db #0x00	; 0
      0002C9 44                     934 	.db #0x44	; 68	'D'
      0002CA 44                     935 	.db #0x44	; 68	'D'
      0002CB 44                     936 	.db #0x44	; 68	'D'
      0002CC 44                     937 	.db #0x44	; 68	'D'
      0002CD 44                     938 	.db #0x44	; 68	'D'
      0002CE 44                     939 	.db #0x44	; 68	'D'
      0002CF 7C                     940 	.db #0x7c	; 124
      0002D0 7C                     941 	.db #0x7c	; 124
      0002D1 04                     942 	.db #0x04	; 4
      0002D2 04                     943 	.db #0x04	; 4
      0002D3 04                     944 	.db #0x04	; 4
      0002D4 04                     945 	.db #0x04	; 4
      0002D5 04                     946 	.db #0x04	; 4
      0002D6 04                     947 	.db #0x04	; 4
      0002D7 00                     948 	.db #0x00	; 0
      0002D8 00                     949 	.db #0x00	; 0
      0002D9 7C                     950 	.db #0x7c	; 124
      0002DA 7C                     951 	.db #0x7c	; 124
      0002DB 40                     952 	.db #0x40	; 64
      0002DC 40                     953 	.db #0x40	; 64
      0002DD 40                     954 	.db #0x40	; 64
      0002DE 40                     955 	.db #0x40	; 64
      0002DF 7C                     956 	.db #0x7c	; 124
      0002E0 7C                     957 	.db #0x7c	; 124
      0002E1 04                     958 	.db #0x04	; 4
      0002E2 04                     959 	.db #0x04	; 4
      0002E3 04                     960 	.db #0x04	; 4
      0002E4 04                     961 	.db #0x04	; 4
      0002E5 7C                     962 	.db #0x7c	; 124
      0002E6 7C                     963 	.db #0x7c	; 124
      0002E7 00                     964 	.db #0x00	; 0
      0002E8 00                     965 	.db #0x00	; 0
      0002E9 7C                     966 	.db #0x7c	; 124
      0002EA 7C                     967 	.db #0x7c	; 124
      0002EB 40                     968 	.db #0x40	; 64
      0002EC 40                     969 	.db #0x40	; 64
      0002ED 40                     970 	.db #0x40	; 64
      0002EE 40                     971 	.db #0x40	; 64
      0002EF 7C                     972 	.db #0x7c	; 124
      0002F0 7C                     973 	.db #0x7c	; 124
      0002F1 44                     974 	.db #0x44	; 68	'D'
      0002F2 44                     975 	.db #0x44	; 68	'D'
      0002F3 44                     976 	.db #0x44	; 68	'D'
      0002F4 44                     977 	.db #0x44	; 68	'D'
      0002F5 7C                     978 	.db #0x7c	; 124
      0002F6 7C                     979 	.db #0x7c	; 124
      0002F7 00                     980 	.db #0x00	; 0
      0002F8 00                     981 	.db #0x00	; 0
      0002F9 7C                     982 	.db #0x7c	; 124
      0002FA 7C                     983 	.db #0x7c	; 124
      0002FB 44                     984 	.db #0x44	; 68	'D'
      0002FC 44                     985 	.db #0x44	; 68	'D'
      0002FD 04                     986 	.db #0x04	; 4
      0002FE 04                     987 	.db #0x04	; 4
      0002FF 04                     988 	.db #0x04	; 4
      000300 04                     989 	.db #0x04	; 4
      000301 04                     990 	.db #0x04	; 4
      000302 04                     991 	.db #0x04	; 4
      000303 04                     992 	.db #0x04	; 4
      000304 04                     993 	.db #0x04	; 4
      000305 04                     994 	.db #0x04	; 4
      000306 04                     995 	.db #0x04	; 4
      000307 00                     996 	.db #0x00	; 0
      000308 00                     997 	.db #0x00	; 0
      000309 7C                     998 	.db #0x7c	; 124
      00030A 7C                     999 	.db #0x7c	; 124
      00030B 44                    1000 	.db #0x44	; 68	'D'
      00030C 44                    1001 	.db #0x44	; 68	'D'
      00030D 44                    1002 	.db #0x44	; 68	'D'
      00030E 44                    1003 	.db #0x44	; 68	'D'
      00030F 7C                    1004 	.db #0x7c	; 124
      000310 7C                    1005 	.db #0x7c	; 124
      000311 44                    1006 	.db #0x44	; 68	'D'
      000312 44                    1007 	.db #0x44	; 68	'D'
      000313 44                    1008 	.db #0x44	; 68	'D'
      000314 44                    1009 	.db #0x44	; 68	'D'
      000315 7C                    1010 	.db #0x7c	; 124
      000316 7C                    1011 	.db #0x7c	; 124
      000317 00                    1012 	.db #0x00	; 0
      000318 00                    1013 	.db #0x00	; 0
      000319 7C                    1014 	.db #0x7c	; 124
      00031A 7C                    1015 	.db #0x7c	; 124
      00031B 44                    1016 	.db #0x44	; 68	'D'
      00031C 44                    1017 	.db #0x44	; 68	'D'
      00031D 44                    1018 	.db #0x44	; 68	'D'
      00031E 44                    1019 	.db #0x44	; 68	'D'
      00031F 7C                    1020 	.db #0x7c	; 124
      000320 7C                    1021 	.db #0x7c	; 124
      000321 04                    1022 	.db #0x04	; 4
      000322 04                    1023 	.db #0x04	; 4
      000323 04                    1024 	.db #0x04	; 4
      000324 04                    1025 	.db #0x04	; 4
      000325 7C                    1026 	.db #0x7c	; 124
      000326 7C                    1027 	.db #0x7c	; 124
      000327 00                    1028 	.db #0x00	; 0
      000328 00                    1029 	.db #0x00	; 0
      000329 38                    1030 	.db #0x38	; 56	'8'
      00032A 38                    1031 	.db #0x38	; 56	'8'
      00032B 44                    1032 	.db #0x44	; 68	'D'
      00032C 44                    1033 	.db #0x44	; 68	'D'
      00032D 44                    1034 	.db #0x44	; 68	'D'
      00032E 44                    1035 	.db #0x44	; 68	'D'
      00032F 7C                    1036 	.db #0x7c	; 124
      000330 7C                    1037 	.db #0x7c	; 124
      000331 44                    1038 	.db #0x44	; 68	'D'
      000332 44                    1039 	.db #0x44	; 68	'D'
      000333 44                    1040 	.db #0x44	; 68	'D'
      000334 44                    1041 	.db #0x44	; 68	'D'
      000335 44                    1042 	.db #0x44	; 68	'D'
      000336 44                    1043 	.db #0x44	; 68	'D'
      000337 00                    1044 	.db #0x00	; 0
      000338 00                    1045 	.db #0x00	; 0
      000339 78                    1046 	.db #0x78	; 120	'x'
      00033A 78                    1047 	.db #0x78	; 120	'x'
      00033B 24                    1048 	.db #0x24	; 36
      00033C 24                    1049 	.db #0x24	; 36
      00033D 24                    1050 	.db #0x24	; 36
      00033E 24                    1051 	.db #0x24	; 36
      00033F 3C                    1052 	.db #0x3c	; 60
      000340 3C                    1053 	.db #0x3c	; 60
      000341 24                    1054 	.db #0x24	; 36
      000342 24                    1055 	.db #0x24	; 36
      000343 24                    1056 	.db #0x24	; 36
      000344 24                    1057 	.db #0x24	; 36
      000345 78                    1058 	.db #0x78	; 120	'x'
      000346 78                    1059 	.db #0x78	; 120	'x'
      000347 00                    1060 	.db #0x00	; 0
      000348 00                    1061 	.db #0x00	; 0
      000349 3C                    1062 	.db #0x3c	; 60
      00034A 3C                    1063 	.db #0x3c	; 60
      00034B 40                    1064 	.db #0x40	; 64
      00034C 40                    1065 	.db #0x40	; 64
      00034D 40                    1066 	.db #0x40	; 64
      00034E 40                    1067 	.db #0x40	; 64
      00034F 40                    1068 	.db #0x40	; 64
      000350 40                    1069 	.db #0x40	; 64
      000351 40                    1070 	.db #0x40	; 64
      000352 40                    1071 	.db #0x40	; 64
      000353 40                    1072 	.db #0x40	; 64
      000354 40                    1073 	.db #0x40	; 64
      000355 3C                    1074 	.db #0x3c	; 60
      000356 3C                    1075 	.db #0x3c	; 60
      000357 00                    1076 	.db #0x00	; 0
      000358 00                    1077 	.db #0x00	; 0
      000359 78                    1078 	.db #0x78	; 120	'x'
      00035A 78                    1079 	.db #0x78	; 120	'x'
      00035B 24                    1080 	.db #0x24	; 36
      00035C 24                    1081 	.db #0x24	; 36
      00035D 24                    1082 	.db #0x24	; 36
      00035E 24                    1083 	.db #0x24	; 36
      00035F 24                    1084 	.db #0x24	; 36
      000360 24                    1085 	.db #0x24	; 36
      000361 24                    1086 	.db #0x24	; 36
      000362 24                    1087 	.db #0x24	; 36
      000363 24                    1088 	.db #0x24	; 36
      000364 24                    1089 	.db #0x24	; 36
      000365 78                    1090 	.db #0x78	; 120	'x'
      000366 78                    1091 	.db #0x78	; 120	'x'
      000367 00                    1092 	.db #0x00	; 0
      000368 00                    1093 	.db #0x00	; 0
      000369 3C                    1094 	.db #0x3c	; 60
      00036A 3C                    1095 	.db #0x3c	; 60
      00036B 40                    1096 	.db #0x40	; 64
      00036C 40                    1097 	.db #0x40	; 64
      00036D 40                    1098 	.db #0x40	; 64
      00036E 40                    1099 	.db #0x40	; 64
      00036F 3C                    1100 	.db #0x3c	; 60
      000370 3C                    1101 	.db #0x3c	; 60
      000371 40                    1102 	.db #0x40	; 64
      000372 40                    1103 	.db #0x40	; 64
      000373 40                    1104 	.db #0x40	; 64
      000374 40                    1105 	.db #0x40	; 64
      000375 3C                    1106 	.db #0x3c	; 60
      000376 3C                    1107 	.db #0x3c	; 60
      000377 00                    1108 	.db #0x00	; 0
      000378 00                    1109 	.db #0x00	; 0
      000379 7C                    1110 	.db #0x7c	; 124
      00037A 7C                    1111 	.db #0x7c	; 124
      00037B 40                    1112 	.db #0x40	; 64
      00037C 40                    1113 	.db #0x40	; 64
      00037D 40                    1114 	.db #0x40	; 64
      00037E 40                    1115 	.db #0x40	; 64
      00037F 7C                    1116 	.db #0x7c	; 124
      000380 7C                    1117 	.db #0x7c	; 124
      000381 40                    1118 	.db #0x40	; 64
      000382 40                    1119 	.db #0x40	; 64
      000383 40                    1120 	.db #0x40	; 64
      000384 40                    1121 	.db #0x40	; 64
      000385 40                    1122 	.db #0x40	; 64
      000386 40                    1123 	.db #0x40	; 64
      000387 00                    1124 	.db #0x00	; 0
      000388 00                    1125 	.db #0x00	; 0
      000389 3C                    1126 	.db #0x3c	; 60
      00038A 3C                    1127 	.db #0x3c	; 60
      00038B 40                    1128 	.db #0x40	; 64
      00038C 40                    1129 	.db #0x40	; 64
      00038D 40                    1130 	.db #0x40	; 64
      00038E 40                    1131 	.db #0x40	; 64
      00038F 5C                    1132 	.db #0x5c	; 92
      000390 5C                    1133 	.db #0x5c	; 92
      000391 44                    1134 	.db #0x44	; 68	'D'
      000392 44                    1135 	.db #0x44	; 68	'D'
      000393 44                    1136 	.db #0x44	; 68	'D'
      000394 44                    1137 	.db #0x44	; 68	'D'
      000395 3C                    1138 	.db #0x3c	; 60
      000396 3C                    1139 	.db #0x3c	; 60
      000397 00                    1140 	.db #0x00	; 0
      000398 00                    1141 	.db #0x00	; 0
      000399 44                    1142 	.db #0x44	; 68	'D'
      00039A 44                    1143 	.db #0x44	; 68	'D'
      00039B 44                    1144 	.db #0x44	; 68	'D'
      00039C 44                    1145 	.db #0x44	; 68	'D'
      00039D 44                    1146 	.db #0x44	; 68	'D'
      00039E 44                    1147 	.db #0x44	; 68	'D'
      00039F 7C                    1148 	.db #0x7c	; 124
      0003A0 7C                    1149 	.db #0x7c	; 124
      0003A1 44                    1150 	.db #0x44	; 68	'D'
      0003A2 44                    1151 	.db #0x44	; 68	'D'
      0003A3 44                    1152 	.db #0x44	; 68	'D'
      0003A4 44                    1153 	.db #0x44	; 68	'D'
      0003A5 44                    1154 	.db #0x44	; 68	'D'
      0003A6 44                    1155 	.db #0x44	; 68	'D'
      0003A7 00                    1156 	.db #0x00	; 0
      0003A8 00                    1157 	.db #0x00	; 0
      0003A9 1C                    1158 	.db #0x1c	; 28
      0003AA 1C                    1159 	.db #0x1c	; 28
      0003AB 08                    1160 	.db #0x08	; 8
      0003AC 08                    1161 	.db #0x08	; 8
      0003AD 08                    1162 	.db #0x08	; 8
      0003AE 08                    1163 	.db #0x08	; 8
      0003AF 08                    1164 	.db #0x08	; 8
      0003B0 08                    1165 	.db #0x08	; 8
      0003B1 08                    1166 	.db #0x08	; 8
      0003B2 08                    1167 	.db #0x08	; 8
      0003B3 08                    1168 	.db #0x08	; 8
      0003B4 08                    1169 	.db #0x08	; 8
      0003B5 1C                    1170 	.db #0x1c	; 28
      0003B6 1C                    1171 	.db #0x1c	; 28
      0003B7 00                    1172 	.db #0x00	; 0
      0003B8 00                    1173 	.db #0x00	; 0
      0003B9 04                    1174 	.db #0x04	; 4
      0003BA 04                    1175 	.db #0x04	; 4
      0003BB 04                    1176 	.db #0x04	; 4
      0003BC 04                    1177 	.db #0x04	; 4
      0003BD 04                    1178 	.db #0x04	; 4
      0003BE 04                    1179 	.db #0x04	; 4
      0003BF 04                    1180 	.db #0x04	; 4
      0003C0 04                    1181 	.db #0x04	; 4
      0003C1 04                    1182 	.db #0x04	; 4
      0003C2 04                    1183 	.db #0x04	; 4
      0003C3 44                    1184 	.db #0x44	; 68	'D'
      0003C4 44                    1185 	.db #0x44	; 68	'D'
      0003C5 38                    1186 	.db #0x38	; 56	'8'
      0003C6 38                    1187 	.db #0x38	; 56	'8'
      0003C7 00                    1188 	.db #0x00	; 0
      0003C8 00                    1189 	.db #0x00	; 0
      0003C9 44                    1190 	.db #0x44	; 68	'D'
      0003CA 44                    1191 	.db #0x44	; 68	'D'
      0003CB 48                    1192 	.db #0x48	; 72	'H'
      0003CC 48                    1193 	.db #0x48	; 72	'H'
      0003CD 50                    1194 	.db #0x50	; 80	'P'
      0003CE 50                    1195 	.db #0x50	; 80	'P'
      0003CF 60                    1196 	.db #0x60	; 96
      0003D0 60                    1197 	.db #0x60	; 96
      0003D1 50                    1198 	.db #0x50	; 80	'P'
      0003D2 50                    1199 	.db #0x50	; 80	'P'
      0003D3 48                    1200 	.db #0x48	; 72	'H'
      0003D4 48                    1201 	.db #0x48	; 72	'H'
      0003D5 44                    1202 	.db #0x44	; 68	'D'
      0003D6 44                    1203 	.db #0x44	; 68	'D'
      0003D7 00                    1204 	.db #0x00	; 0
      0003D8 00                    1205 	.db #0x00	; 0
      0003D9 40                    1206 	.db #0x40	; 64
      0003DA 40                    1207 	.db #0x40	; 64
      0003DB 40                    1208 	.db #0x40	; 64
      0003DC 40                    1209 	.db #0x40	; 64
      0003DD 40                    1210 	.db #0x40	; 64
      0003DE 40                    1211 	.db #0x40	; 64
      0003DF 40                    1212 	.db #0x40	; 64
      0003E0 40                    1213 	.db #0x40	; 64
      0003E1 40                    1214 	.db #0x40	; 64
      0003E2 40                    1215 	.db #0x40	; 64
      0003E3 40                    1216 	.db #0x40	; 64
      0003E4 40                    1217 	.db #0x40	; 64
      0003E5 7C                    1218 	.db #0x7c	; 124
      0003E6 7C                    1219 	.db #0x7c	; 124
      0003E7 00                    1220 	.db #0x00	; 0
      0003E8 00                    1221 	.db #0x00	; 0
      0003E9 44                    1222 	.db #0x44	; 68	'D'
      0003EA 44                    1223 	.db #0x44	; 68	'D'
      0003EB 6C                    1224 	.db #0x6c	; 108	'l'
      0003EC 6C                    1225 	.db #0x6c	; 108	'l'
      0003ED 7C                    1226 	.db #0x7c	; 124
      0003EE 7C                    1227 	.db #0x7c	; 124
      0003EF 54                    1228 	.db #0x54	; 84	'T'
      0003F0 54                    1229 	.db #0x54	; 84	'T'
      0003F1 44                    1230 	.db #0x44	; 68	'D'
      0003F2 44                    1231 	.db #0x44	; 68	'D'
      0003F3 44                    1232 	.db #0x44	; 68	'D'
      0003F4 44                    1233 	.db #0x44	; 68	'D'
      0003F5 44                    1234 	.db #0x44	; 68	'D'
      0003F6 44                    1235 	.db #0x44	; 68	'D'
      0003F7 00                    1236 	.db #0x00	; 0
      0003F8 00                    1237 	.db #0x00	; 0
      0003F9 44                    1238 	.db #0x44	; 68	'D'
      0003FA 44                    1239 	.db #0x44	; 68	'D'
      0003FB 64                    1240 	.db #0x64	; 100	'd'
      0003FC 64                    1241 	.db #0x64	; 100	'd'
      0003FD 64                    1242 	.db #0x64	; 100	'd'
      0003FE 64                    1243 	.db #0x64	; 100	'd'
      0003FF 54                    1244 	.db #0x54	; 84	'T'
      000400 54                    1245 	.db #0x54	; 84	'T'
      000401 5C                    1246 	.db #0x5c	; 92
      000402 5C                    1247 	.db #0x5c	; 92
      000403 4C                    1248 	.db #0x4c	; 76	'L'
      000404 4C                    1249 	.db #0x4c	; 76	'L'
      000405 44                    1250 	.db #0x44	; 68	'D'
      000406 44                    1251 	.db #0x44	; 68	'D'
      000407 00                    1252 	.db #0x00	; 0
      000408 00                    1253 	.db #0x00	; 0
      000409 38                    1254 	.db #0x38	; 56	'8'
      00040A 38                    1255 	.db #0x38	; 56	'8'
      00040B 44                    1256 	.db #0x44	; 68	'D'
      00040C 44                    1257 	.db #0x44	; 68	'D'
      00040D 44                    1258 	.db #0x44	; 68	'D'
      00040E 44                    1259 	.db #0x44	; 68	'D'
      00040F 44                    1260 	.db #0x44	; 68	'D'
      000410 44                    1261 	.db #0x44	; 68	'D'
      000411 44                    1262 	.db #0x44	; 68	'D'
      000412 44                    1263 	.db #0x44	; 68	'D'
      000413 44                    1264 	.db #0x44	; 68	'D'
      000414 44                    1265 	.db #0x44	; 68	'D'
      000415 38                    1266 	.db #0x38	; 56	'8'
      000416 38                    1267 	.db #0x38	; 56	'8'
      000417 00                    1268 	.db #0x00	; 0
      000418 00                    1269 	.db #0x00	; 0
      000419 78                    1270 	.db #0x78	; 120	'x'
      00041A 78                    1271 	.db #0x78	; 120	'x'
      00041B 44                    1272 	.db #0x44	; 68	'D'
      00041C 44                    1273 	.db #0x44	; 68	'D'
      00041D 44                    1274 	.db #0x44	; 68	'D'
      00041E 44                    1275 	.db #0x44	; 68	'D'
      00041F 78                    1276 	.db #0x78	; 120	'x'
      000420 78                    1277 	.db #0x78	; 120	'x'
      000421 40                    1278 	.db #0x40	; 64
      000422 40                    1279 	.db #0x40	; 64
      000423 40                    1280 	.db #0x40	; 64
      000424 40                    1281 	.db #0x40	; 64
      000425 40                    1282 	.db #0x40	; 64
      000426 40                    1283 	.db #0x40	; 64
      000427 00                    1284 	.db #0x00	; 0
      000428 00                    1285 	.db #0x00	; 0
      000429 38                    1286 	.db #0x38	; 56	'8'
      00042A 38                    1287 	.db #0x38	; 56	'8'
      00042B 44                    1288 	.db #0x44	; 68	'D'
      00042C 44                    1289 	.db #0x44	; 68	'D'
      00042D 44                    1290 	.db #0x44	; 68	'D'
      00042E 44                    1291 	.db #0x44	; 68	'D'
      00042F 44                    1292 	.db #0x44	; 68	'D'
      000430 44                    1293 	.db #0x44	; 68	'D'
      000431 54                    1294 	.db #0x54	; 84	'T'
      000432 54                    1295 	.db #0x54	; 84	'T'
      000433 58                    1296 	.db #0x58	; 88	'X'
      000434 58                    1297 	.db #0x58	; 88	'X'
      000435 34                    1298 	.db #0x34	; 52	'4'
      000436 34                    1299 	.db #0x34	; 52	'4'
      000437 00                    1300 	.db #0x00	; 0
      000438 00                    1301 	.db #0x00	; 0
      000439 78                    1302 	.db #0x78	; 120	'x'
      00043A 78                    1303 	.db #0x78	; 120	'x'
      00043B 44                    1304 	.db #0x44	; 68	'D'
      00043C 44                    1305 	.db #0x44	; 68	'D'
      00043D 44                    1306 	.db #0x44	; 68	'D'
      00043E 44                    1307 	.db #0x44	; 68	'D'
      00043F 78                    1308 	.db #0x78	; 120	'x'
      000440 78                    1309 	.db #0x78	; 120	'x'
      000441 50                    1310 	.db #0x50	; 80	'P'
      000442 50                    1311 	.db #0x50	; 80	'P'
      000443 48                    1312 	.db #0x48	; 72	'H'
      000444 48                    1313 	.db #0x48	; 72	'H'
      000445 44                    1314 	.db #0x44	; 68	'D'
      000446 44                    1315 	.db #0x44	; 68	'D'
      000447 00                    1316 	.db #0x00	; 0
      000448 00                    1317 	.db #0x00	; 0
      000449 3C                    1318 	.db #0x3c	; 60
      00044A 3C                    1319 	.db #0x3c	; 60
      00044B 40                    1320 	.db #0x40	; 64
      00044C 40                    1321 	.db #0x40	; 64
      00044D 40                    1322 	.db #0x40	; 64
      00044E 40                    1323 	.db #0x40	; 64
      00044F 38                    1324 	.db #0x38	; 56	'8'
      000450 38                    1325 	.db #0x38	; 56	'8'
      000451 04                    1326 	.db #0x04	; 4
      000452 04                    1327 	.db #0x04	; 4
      000453 04                    1328 	.db #0x04	; 4
      000454 04                    1329 	.db #0x04	; 4
      000455 78                    1330 	.db #0x78	; 120	'x'
      000456 78                    1331 	.db #0x78	; 120	'x'
      000457 00                    1332 	.db #0x00	; 0
      000458 00                    1333 	.db #0x00	; 0
      000459 7C                    1334 	.db #0x7c	; 124
      00045A 7C                    1335 	.db #0x7c	; 124
      00045B 10                    1336 	.db #0x10	; 16
      00045C 10                    1337 	.db #0x10	; 16
      00045D 10                    1338 	.db #0x10	; 16
      00045E 10                    1339 	.db #0x10	; 16
      00045F 10                    1340 	.db #0x10	; 16
      000460 10                    1341 	.db #0x10	; 16
      000461 10                    1342 	.db #0x10	; 16
      000462 10                    1343 	.db #0x10	; 16
      000463 10                    1344 	.db #0x10	; 16
      000464 10                    1345 	.db #0x10	; 16
      000465 10                    1346 	.db #0x10	; 16
      000466 10                    1347 	.db #0x10	; 16
      000467 00                    1348 	.db #0x00	; 0
      000468 00                    1349 	.db #0x00	; 0
      000469 44                    1350 	.db #0x44	; 68	'D'
      00046A 44                    1351 	.db #0x44	; 68	'D'
      00046B 44                    1352 	.db #0x44	; 68	'D'
      00046C 44                    1353 	.db #0x44	; 68	'D'
      00046D 44                    1354 	.db #0x44	; 68	'D'
      00046E 44                    1355 	.db #0x44	; 68	'D'
      00046F 44                    1356 	.db #0x44	; 68	'D'
      000470 44                    1357 	.db #0x44	; 68	'D'
      000471 44                    1358 	.db #0x44	; 68	'D'
      000472 44                    1359 	.db #0x44	; 68	'D'
      000473 44                    1360 	.db #0x44	; 68	'D'
      000474 44                    1361 	.db #0x44	; 68	'D'
      000475 38                    1362 	.db #0x38	; 56	'8'
      000476 38                    1363 	.db #0x38	; 56	'8'
      000477 00                    1364 	.db #0x00	; 0
      000478 00                    1365 	.db #0x00	; 0
      000479 44                    1366 	.db #0x44	; 68	'D'
      00047A 44                    1367 	.db #0x44	; 68	'D'
      00047B 44                    1368 	.db #0x44	; 68	'D'
      00047C 44                    1369 	.db #0x44	; 68	'D'
      00047D 44                    1370 	.db #0x44	; 68	'D'
      00047E 44                    1371 	.db #0x44	; 68	'D'
      00047F 28                    1372 	.db #0x28	; 40
      000480 28                    1373 	.db #0x28	; 40
      000481 28                    1374 	.db #0x28	; 40
      000482 28                    1375 	.db #0x28	; 40
      000483 10                    1376 	.db #0x10	; 16
      000484 10                    1377 	.db #0x10	; 16
      000485 10                    1378 	.db #0x10	; 16
      000486 10                    1379 	.db #0x10	; 16
      000487 00                    1380 	.db #0x00	; 0
      000488 00                    1381 	.db #0x00	; 0
      000489 54                    1382 	.db #0x54	; 84	'T'
      00048A 54                    1383 	.db #0x54	; 84	'T'
      00048B 54                    1384 	.db #0x54	; 84	'T'
      00048C 54                    1385 	.db #0x54	; 84	'T'
      00048D 54                    1386 	.db #0x54	; 84	'T'
      00048E 54                    1387 	.db #0x54	; 84	'T'
      00048F 54                    1388 	.db #0x54	; 84	'T'
      000490 54                    1389 	.db #0x54	; 84	'T'
      000491 54                    1390 	.db #0x54	; 84	'T'
      000492 54                    1391 	.db #0x54	; 84	'T'
      000493 54                    1392 	.db #0x54	; 84	'T'
      000494 54                    1393 	.db #0x54	; 84	'T'
      000495 38                    1394 	.db #0x38	; 56	'8'
      000496 38                    1395 	.db #0x38	; 56	'8'
      000497 00                    1396 	.db #0x00	; 0
      000498 00                    1397 	.db #0x00	; 0
      000499 44                    1398 	.db #0x44	; 68	'D'
      00049A 44                    1399 	.db #0x44	; 68	'D'
      00049B 28                    1400 	.db #0x28	; 40
      00049C 28                    1401 	.db #0x28	; 40
      00049D 38                    1402 	.db #0x38	; 56	'8'
      00049E 38                    1403 	.db #0x38	; 56	'8'
      00049F 10                    1404 	.db #0x10	; 16
      0004A0 10                    1405 	.db #0x10	; 16
      0004A1 38                    1406 	.db #0x38	; 56	'8'
      0004A2 38                    1407 	.db #0x38	; 56	'8'
      0004A3 28                    1408 	.db #0x28	; 40
      0004A4 28                    1409 	.db #0x28	; 40
      0004A5 44                    1410 	.db #0x44	; 68	'D'
      0004A6 44                    1411 	.db #0x44	; 68	'D'
      0004A7 00                    1412 	.db #0x00	; 0
      0004A8 00                    1413 	.db #0x00	; 0
      0004A9 44                    1414 	.db #0x44	; 68	'D'
      0004AA 44                    1415 	.db #0x44	; 68	'D'
      0004AB 28                    1416 	.db #0x28	; 40
      0004AC 28                    1417 	.db #0x28	; 40
      0004AD 28                    1418 	.db #0x28	; 40
      0004AE 28                    1419 	.db #0x28	; 40
      0004AF 10                    1420 	.db #0x10	; 16
      0004B0 10                    1421 	.db #0x10	; 16
      0004B1 20                    1422 	.db #0x20	; 32
      0004B2 20                    1423 	.db #0x20	; 32
      0004B3 20                    1424 	.db #0x20	; 32
      0004B4 20                    1425 	.db #0x20	; 32
      0004B5 40                    1426 	.db #0x40	; 64
      0004B6 40                    1427 	.db #0x40	; 64
      0004B7 00                    1428 	.db #0x00	; 0
      0004B8 00                    1429 	.db #0x00	; 0
      0004B9 7C                    1430 	.db #0x7c	; 124
      0004BA 7C                    1431 	.db #0x7c	; 124
      0004BB 04                    1432 	.db #0x04	; 4
      0004BC 04                    1433 	.db #0x04	; 4
      0004BD 08                    1434 	.db #0x08	; 8
      0004BE 08                    1435 	.db #0x08	; 8
      0004BF 10                    1436 	.db #0x10	; 16
      0004C0 10                    1437 	.db #0x10	; 16
      0004C1 20                    1438 	.db #0x20	; 32
      0004C2 20                    1439 	.db #0x20	; 32
      0004C3 40                    1440 	.db #0x40	; 64
      0004C4 40                    1441 	.db #0x40	; 64
      0004C5 7C                    1442 	.db #0x7c	; 124
      0004C6 7C                    1443 	.db #0x7c	; 124
      0004C7 00                    1444 	.db #0x00	; 0
      0004C8 00                    1445 	.db #0x00	; 0
      0004C9 00                    1446 	.db #0x00	; 0
      0004CA 00                    1447 	.db #0x00	; 0
      0004CB 00                    1448 	.db #0x00	; 0
      0004CC 00                    1449 	.db #0x00	; 0
      0004CD 00                    1450 	.db #0x00	; 0
      0004CE 00                    1451 	.db #0x00	; 0
      0004CF 40                    1452 	.db #0x40	; 64
      0004D0 40                    1453 	.db #0x40	; 64
      0004D1 00                    1454 	.db #0x00	; 0
      0004D2 00                    1455 	.db #0x00	; 0
      0004D3 00                    1456 	.db #0x00	; 0
      0004D4 00                    1457 	.db #0x00	; 0
      0004D5 40                    1458 	.db #0x40	; 64
      0004D6 40                    1459 	.db #0x40	; 64
      0004D7 00                    1460 	.db #0x00	; 0
      0004D8 00                    1461 	.db #0x00	; 0
      0004D9 00                    1462 	.db #0x00	; 0
      0004DA 00                    1463 	.db #0x00	; 0
      0004DB 00                    1464 	.db #0x00	; 0
      0004DC 00                    1465 	.db #0x00	; 0
      0004DD 00                    1466 	.db #0x00	; 0
      0004DE 00                    1467 	.db #0x00	; 0
      0004DF 00                    1468 	.db #0x00	; 0
      0004E0 00                    1469 	.db #0x00	; 0
      0004E1 7C                    1470 	.db #0x7c	; 124
      0004E2 7C                    1471 	.db #0x7c	; 124
      0004E3 00                    1472 	.db #0x00	; 0
      0004E4 00                    1473 	.db #0x00	; 0
      0004E5 00                    1474 	.db #0x00	; 0
      0004E6 00                    1475 	.db #0x00	; 0
      0004E7 00                    1476 	.db #0x00	; 0
      0004E8 00                    1477 	.db #0x00	; 0
      0004E9                       1478 _startballposxy:
      0004E9 54                    1479 	.db #0x54	; 84	'T'
      0004EA                       1480 _difficulty_px:
      0004EA 82                    1481 	.db #0x82	; 130
      0004EB 6E                    1482 	.db #0x6e	; 110	'n'
      0004EC 54                    1483 	.db #0x54	; 84	'T'
      0004ED                       1484 _stspeedpoolx:
      0004ED FC                    1485 	.db #0xfc	; -4
      0004EE 04                    1486 	.db #0x04	;  4
      0004EF                       1487 _stspeedpooly:
      0004EF FC                    1488 	.db #0xfc	; -4
      0004F0 FE                    1489 	.db #0xfe	; -2
      0004F1 00                    1490 	.db #0x00	;  0
      0004F2 02                    1491 	.db #0x02	;  2
      0004F3 04                    1492 	.db #0x04	;  4
      0004F4                       1493 _bkgborderup:
      0004F4 20                    1494 	.db #0x20	; 32
      0004F5                       1495 _bkgborderdown:
      0004F5 90                    1496 	.db #0x90	; 144
      0004F6                       1497 _speedchframes:
      0004F6 06                    1498 	.db #0x06	; 6
      0004F7 0C                    1499 	.db #0x0c	; 12
      0004F8 2A                    1500 	.db #0x2a	; 42
      0004F9                       1501 _presst:
      0004F9 1C                    1502 	.db #0x1c	; 28
      0004FA 1E                    1503 	.db #0x1e	; 30
      0004FB 11                    1504 	.db #0x11	; 17
      0004FC 1F                    1505 	.db #0x1f	; 31
      0004FD 1F                    1506 	.db #0x1f	; 31
      0004FE 00                    1507 	.db #0x00	; 0
      0004FF 1F                    1508 	.db #0x1f	; 31
      000500 20                    1509 	.db #0x20	; 32
      000501 0D                    1510 	.db #0x0d	; 13
      000502 1E                    1511 	.db #0x1e	; 30
      000503 20                    1512 	.db #0x20	; 32
                                   1513 ;main.c:82: void default_settings() {
                                   1514 ;	---------------------------------
                                   1515 ; Function default_settings
                                   1516 ; ---------------------------------
      000504                       1517 _default_settings::
                                   1518 ;main.c:84: autospeedflg = 1;
      000504 21r1Br00              1519 	ld	hl, #_autospeedflg
      000507 36 01                 1520 	ld	(hl), #0x01
                                   1521 ;main.c:85: roundlimit = 10;
      000509 21r1Fr00              1522 	ld	hl, #_roundlimit
      00050C 36 0A                 1523 	ld	(hl), #0x0a
                                   1524 ;main.c:86: difficulty = 1;
      00050E 21r13r00              1525 	ld	hl, #_difficulty
      000511 36 01                 1526 	ld	(hl), #0x01
                                   1527 ;main.c:87: padheight = 3;
      000513 21r02r00              1528 	ld	hl, #_padheight
      000516 36 03                 1529 	ld	(hl), #0x03
                                   1530 ;main.c:88: padspeed = 3;
      000518 21r03r00              1531 	ld	hl, #_padspeed
      00051B 36 03                 1532 	ld	(hl), #0x03
                                   1533 ;main.c:89: }
      00051D C9                    1534 	ret
                                   1535 ;main.c:92: void center_ball() {
                                   1536 ;	---------------------------------
                                   1537 ; Function center_ball
                                   1538 ; ---------------------------------
      00051E                       1539 _center_ball::
                                   1540 ;main.c:93: ball.x = ball.y = startballposxy;
      00051E 21rE9r04              1541 	ld	hl, #_startballposxy
      000521 46                    1542 	ld	b, (hl)
      000522 21r0Fr00              1543 	ld	hl, #(_ball + 0x0001)
      000525 70                    1544 	ld	(hl), b
      000526 21r0Er00              1545 	ld	hl, #_ball
      000529 70                    1546 	ld	(hl), b
                                   1547 ;main.c:94: move_sprite(0, ball.x, ball.y);
      00052A 21r0Er00              1548 	ld	hl, #_ball
      00052D 4E                    1549 	ld	c, (hl)
                                   1550 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00052E 21r00r00              1551 	ld	hl, #_shadow_OAM
                                   1552 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000531 78                    1553 	ld	a, b
      000532 22                    1554 	ld	(hl+), a
      000533 71                    1555 	ld	(hl), c
                                   1556 ;main.c:94: move_sprite(0, ball.x, ball.y);
                                   1557 ;main.c:95: }
      000534 C9                    1558 	ret
                                   1559 ;main.c:98: void move_ball(Paddle * ppl1, Paddle * pcpu) {
                                   1560 ;	---------------------------------
                                   1561 ; Function move_ball
                                   1562 ; ---------------------------------
      000535                       1563 _move_ball::
      000535 3B                    1564 	dec	sp
                                   1565 ;main.c:99: UINT8 nextballposx = ball.x + ball.speedx;
      000536 21r0Er00              1566 	ld	hl, #_ball
      000539 4E                    1567 	ld	c, (hl)
      00053A FAr10r00              1568 	ld	a, (#(_ball + 0x0002) + 0)
      00053D 81                    1569 	add	a, c
      00053E 4F                    1570 	ld	c, a
                                   1571 ;main.c:100: UINT8 nextballposy = ball.y + ball.speedy;
      00053F 21r0Fr00              1572 	ld	hl, #(_ball + 0x0001)
      000542 46                    1573 	ld	b, (hl)
      000543 FAr11r00              1574 	ld	a, (#(_ball + 0x0003) + 0)
      000546 80                    1575 	add	a, b
      000547 47                    1576 	ld	b, a
                                   1577 ;main.c:101: if(hits_walls(nextballposy, 8)) {
      000548 C5                    1578 	push	bc
      000549 3E 08                 1579 	ld	a, #0x08
      00054B F5                    1580 	push	af
      00054C 33                    1581 	inc	sp
      00054D C5                    1582 	push	bc
      00054E 33                    1583 	inc	sp
      00054F CDrE9r05              1584 	call	_hits_walls
      000552 E8 02                 1585 	add	sp, #2
      000554 7B                    1586 	ld	a, e
      000555 C1                    1587 	pop	bc
      000556 B7                    1588 	or	a, a
      000557 28 0E                 1589 	jr	Z, 00102$
                                   1590 ;main.c:102: ball.speedy *= -1;
      000559 21r11r00              1591 	ld	hl, #(_ball + 0x0003)
      00055C 6E                    1592 	ld	l, (hl)
      00055D AF                    1593 	xor	a, a
      00055E 95                    1594 	sub	a, l
      00055F F8 00                 1595 	ldhl	sp,	#0
      000561 77                    1596 	ld	(hl), a
      000562 11r11r00              1597 	ld	de, #(_ball + 0x0003)
      000565 7E                    1598 	ld	a, (hl)
      000566 12                    1599 	ld	(de), a
      000567                       1600 00102$:
                                   1601 ;main.c:104: if(hits_paddle(nextballposx, nextballposy, ppl1)) {
      000567 C5                    1602 	push	bc
      000568 F8 05                 1603 	ldhl	sp,	#5
      00056A 2A                    1604 	ld	a, (hl+)
      00056B 66                    1605 	ld	h, (hl)
      00056C 6F                    1606 	ld	l, a
      00056D E5                    1607 	push	hl
      00056E C5                    1608 	push	bc
      00056F CDr64r08              1609 	call	_hits_paddle
      000572 E8 04                 1610 	add	sp, #4
      000574 7B                    1611 	ld	a, e
      000575 C1                    1612 	pop	bc
      000576 B7                    1613 	or	a, a
      000577 28 1C                 1614 	jr	Z, 00106$
                                   1615 ;main.c:105: ball.speedx *= -1;
      000579 21r10r00              1616 	ld	hl, #(_ball + 0x0002)
      00057C 4E                    1617 	ld	c, (hl)
      00057D AF                    1618 	xor	a, a
      00057E 91                    1619 	sub	a, c
      00057F 4F                    1620 	ld	c, a
      000580 21r10r00              1621 	ld	hl, #(_ball + 0x0002)
      000583 71                    1622 	ld	(hl), c
                                   1623 ;main.c:106: ball.speedy = get_bounce_off_dir_y(ppl1);
      000584 F8 03                 1624 	ldhl	sp,	#3
      000586 2A                    1625 	ld	a, (hl+)
      000587 66                    1626 	ld	h, (hl)
      000588 6F                    1627 	ld	l, a
      000589 E5                    1628 	push	hl
      00058A CDr7Br09              1629 	call	_get_bounce_off_dir_y
      00058D E8 02                 1630 	add	sp, #2
      00058F 7B                    1631 	ld	a, e
      000590 EAr11r00              1632 	ld	(#(_ball + 0x0003)),a
      000593 18 2A                 1633 	jr	00107$
      000595                       1634 00106$:
                                   1635 ;main.c:107: } else if(hits_paddle(nextballposx, nextballposy, pcpu)) {
      000595 F8 05                 1636 	ldhl	sp,	#5
      000597 2A                    1637 	ld	a, (hl+)
      000598 66                    1638 	ld	h, (hl)
      000599 6F                    1639 	ld	l, a
      00059A E5                    1640 	push	hl
      00059B C5                    1641 	push	bc
      00059C CDr64r08              1642 	call	_hits_paddle
      00059F E8 04                 1643 	add	sp, #4
      0005A1 7B                    1644 	ld	a, e
      0005A2 B7                    1645 	or	a, a
      0005A3 28 1A                 1646 	jr	Z, 00107$
                                   1647 ;main.c:108: ball.speedx *= -1;
      0005A5 21r10r00              1648 	ld	hl, #(_ball + 0x0002)
      0005A8 4E                    1649 	ld	c, (hl)
      0005A9 AF                    1650 	xor	a, a
      0005AA 91                    1651 	sub	a, c
      0005AB 4F                    1652 	ld	c, a
      0005AC 21r10r00              1653 	ld	hl, #(_ball + 0x0002)
      0005AF 71                    1654 	ld	(hl), c
                                   1655 ;main.c:109: ball.speedy = get_bounce_off_dir_y(pcpu);
      0005B0 F8 05                 1656 	ldhl	sp,	#5
      0005B2 2A                    1657 	ld	a, (hl+)
      0005B3 66                    1658 	ld	h, (hl)
      0005B4 6F                    1659 	ld	l, a
      0005B5 E5                    1660 	push	hl
      0005B6 CDr7Br09              1661 	call	_get_bounce_off_dir_y
      0005B9 E8 02                 1662 	add	sp, #2
      0005BB 7B                    1663 	ld	a, e
      0005BC EAr11r00              1664 	ld	(#(_ball + 0x0003)),a
      0005BF                       1665 00107$:
                                   1666 ;main.c:111: ball.x += ball.speedx;
      0005BF FAr0Er00              1667 	ld	a, (#_ball + 0)
      0005C2 21r10r00              1668 	ld	hl, #(_ball + 0x0002)
      0005C5 4E                    1669 	ld	c, (hl)
      0005C6 81                    1670 	add	a, c
      0005C7 EAr0Er00              1671 	ld	(#_ball),a
                                   1672 ;main.c:112: ball.y += ball.speedy;
      0005CA FAr0Fr00              1673 	ld	a, (#(_ball + 0x0001) + 0)
      0005CD 21r11r00              1674 	ld	hl, #(_ball + 0x0003)
      0005D0 4E                    1675 	ld	c, (hl)
      0005D1 81                    1676 	add	a, c
      0005D2 EAr0Fr00              1677 	ld	(#(_ball + 0x0001)),a
                                   1678 ;main.c:113: scroll_sprite(0, ball.speedx, ball.speedy);
      0005D5 21r11r00              1679 	ld	hl, #(_ball + 0x0003)
      0005D8 4E                    1680 	ld	c, (hl)
      0005D9 21r10r00              1681 	ld	hl, #(_ball + 0x0002)
      0005DC 46                    1682 	ld	b, (hl)
                                   1683 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      0005DD 11r00r00              1684 	ld	de, #_shadow_OAM
                                   1685 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      0005E0 1A                    1686 	ld	a, (de)
      0005E1 81                    1687 	add	a, c
      0005E2 12                    1688 	ld	(de), a
      0005E3 13                    1689 	inc	de
      0005E4 1A                    1690 	ld	a, (de)
      0005E5 80                    1691 	add	a, b
      0005E6 12                    1692 	ld	(de), a
                                   1693 ;main.c:113: scroll_sprite(0, ball.speedx, ball.speedy);
                                   1694 ;main.c:114: }
      0005E7 33                    1695 	inc	sp
      0005E8 C9                    1696 	ret
                                   1697 ;main.c:117: UBYTE hits_walls(UINT8 nexty, UINT8 objheight) {
                                   1698 ;	---------------------------------
                                   1699 ; Function hits_walls
                                   1700 ; ---------------------------------
      0005E9                       1701 _hits_walls::
                                   1702 ;main.c:118: return nexty < bkgborderup || nexty + objheight > bkgborderdown;
      0005E9 21rF4r04              1703 	ld	hl, #_bkgborderup
      0005EC 4E                    1704 	ld	c, (hl)
      0005ED F8 02                 1705 	ldhl	sp,	#2
      0005EF 7E                    1706 	ld	a,(hl)
      0005F0 B9                    1707 	cp	a,c
      0005F1 38 2C                 1708 	jr	C, 00104$
      0005F3 06 00                 1709 	ld	b, #0x00
      0005F5 23                    1710 	inc	hl
      0005F6 5E                    1711 	ld	e, (hl)
      0005F7 16 00                 1712 	ld	d, #0x00
      0005F9 83                    1713 	add	a, e
      0005FA 4F                    1714 	ld	c, a
      0005FB 78                    1715 	ld	a, b
      0005FC 8A                    1716 	adc	a, d
      0005FD 47                    1717 	ld	b, a
      0005FE 21rF5r04              1718 	ld	hl, #_bkgborderdown
      000601 6E                    1719 	ld	l, (hl)
      000602 26 00                 1720 	ld	h, #0x00
      000604 58                    1721 	ld	e, b
      000605 54                    1722 	ld	d, h
      000606 7D                    1723 	ld	a, l
      000607 91                    1724 	sub	a, c
      000608 7C                    1725 	ld	a, h
      000609 98                    1726 	sbc	a, b
      00060A CB 7B                 1727 	bit	7, e
      00060C 28 07                 1728 	jr	Z, 00116$
      00060E CB 7A                 1729 	bit	7, d
      000610 20 08                 1730 	jr	NZ, 00117$
      000612 BF                    1731 	cp	a, a
      000613 18 05                 1732 	jr	00117$
      000615                       1733 00116$:
      000615 CB 7A                 1734 	bit	7, d
      000617 28 01                 1735 	jr	Z, 00117$
      000619 37                    1736 	scf
      00061A                       1737 00117$:
      00061A 38 03                 1738 	jr	C, 00104$
      00061C 1E 00                 1739 	ld	e, #0x00
      00061E C9                    1740 	ret
      00061F                       1741 00104$:
      00061F 1E 01                 1742 	ld	e, #0x01
                                   1743 ;main.c:119: }
      000621 C9                    1744 	ret
                                   1745 ;main.c:122: void init_paddle(Paddle * pdl, UINT8 firsttilenum,UINT8 posx, UINT8 posy) {
                                   1746 ;	---------------------------------
                                   1747 ; Function init_paddle
                                   1748 ; ---------------------------------
      000622                       1749 _init_paddle::
      000622 E8 FB                 1750 	add	sp, #-5
                                   1751 ;main.c:125: pdl->x = posx;
      000624 F8 07                 1752 	ldhl	sp,#7
      000626 2A                    1753 	ld	a, (hl+)
      000627 5F                    1754 	ld	e, a
      000628 2A                    1755 	ld	a, (hl+)
      000629 57                    1756 	ld	d, a
      00062A 23                    1757 	inc	hl
      00062B 7E                    1758 	ld	a, (hl)
      00062C 12                    1759 	ld	(de), a
                                   1760 ;main.c:126: pdl->y = posy;
      00062D 4B                    1761 	ld	c, e
      00062E 42                    1762 	ld	b, d
      00062F 03                    1763 	inc	bc
      000630 23                    1764 	inc	hl
      000631 7E                    1765 	ld	a, (hl)
      000632 02                    1766 	ld	(bc), a
                                   1767 ;main.c:127: pdl->firsttile = firsttilenum;
      000633 13                    1768 	inc	de
      000634 13                    1769 	inc	de
      000635 2B                    1770 	dec	hl
      000636 2B                    1771 	dec	hl
      000637 7E                    1772 	ld	a, (hl)
      000638 12                    1773 	ld	(de), a
                                   1774 ;main.c:129: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000639 21r02r00              1775 	ld	hl, #_padheight
      00063C 4E                    1776 	ld	c, (hl)
      00063D 06 00                 1777 	ld	b, #0x00
      00063F 0B                    1778 	dec	bc
                                   1779 ;main.c:130: set_sprite_tile(firsttilenum, 1);
      000640 F8 09                 1780 	ldhl	sp,	#9
      000642 5E                    1781 	ld	e, (hl)
                                   1782 ;main.c:129: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000643 78                    1783 	ld	a, b
      000644 B1                    1784 	or	a, c
      000645 20 1C                 1785 	jr	NZ, 00102$
                                   1786 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000647 6B                    1787 	ld	l, e
      000648 26 00                 1788 	ld	h, #0x00
      00064A 29                    1789 	add	hl, hl
      00064B 29                    1790 	add	hl, hl
      00064C 5D                    1791 	ld	e, l
      00064D 54                    1792 	ld	d, h
      00064E 21r02r00              1793 	ld	hl,#_shadow_OAM+1+1
      000651 19                    1794 	add	hl,de
      000652 36 01                 1795 	ld	(hl), #0x01
                                   1796 ;main.c:131: move_sprite(firsttilenum, posx, posy);
      000654 F8 0B                 1797 	ldhl	sp,	#11
      000656 3A                    1798 	ld	a, (hl-)
      000657 47                    1799 	ld	b, a
      000658 4E                    1800 	ld	c, (hl)
                                   1801 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000659 21r00r00              1802 	ld	hl, #_shadow_OAM
      00065C 19                    1803 	add	hl, de
                                   1804 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00065D 78                    1805 	ld	a, b
      00065E 22                    1806 	ld	(hl+), a
      00065F 71                    1807 	ld	(hl), c
                                   1808 ;main.c:132: return;
      000660 C3r32r07              1809 	jp	00115$
      000663                       1810 00102$:
                                   1811 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000663 F8 00                 1812 	ldhl	sp,	#0
      000665 73                    1813 	ld	(hl), e
      000666 AF                    1814 	xor	a, a
      000667 23                    1815 	inc	hl
      000668 77                    1816 	ld	(hl), a
      000669 C1                    1817 	pop	bc
      00066A C5                    1818 	push	bc
      00066B CB 21                 1819 	sla	c
      00066D CB 10                 1820 	rl	b
      00066F CB 21                 1821 	sla	c
      000671 CB 10                 1822 	rl	b
      000673 21r02r00              1823 	ld	hl,#_shadow_OAM+1+1
      000676 09                    1824 	add	hl,bc
      000677 36 02                 1825 	ld	(hl), #0x02
                                   1826 ;main.c:135: move_sprite(firsttilenum, posx, posy);
      000679 F8 0B                 1827 	ldhl	sp,	#11
      00067B 3A                    1828 	ld	a, (hl-)
      00067C 57                    1829 	ld	d, a
      00067D 7E                    1830 	ld	a, (hl)
      00067E F8 02                 1831 	ldhl	sp,	#2
      000680 77                    1832 	ld	(hl), a
                                   1833 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000681 21r00r00              1834 	ld	hl, #_shadow_OAM
      000684 09                    1835 	add	hl, bc
      000685 4D                    1836 	ld	c, l
      000686 44                    1837 	ld	b, h
                                   1838 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000687 7A                    1839 	ld	a, d
      000688 02                    1840 	ld	(bc), a
      000689 03                    1841 	inc	bc
      00068A F8 02                 1842 	ldhl	sp,	#2
      00068C 7E                    1843 	ld	a, (hl)
      00068D 02                    1844 	ld	(bc), a
                                   1845 ;main.c:137: tileind = firsttilenum + 1;
      00068E 7B                    1846 	ld	a, e
      00068F 3C                    1847 	inc	a
      000690 EAr12r00              1848 	ld	(#_tileind),a
                                   1849 ;main.c:138: i = 1;
      000693 21r14r00              1850 	ld	hl, #_i
      000696 36 01                 1851 	ld	(hl), #0x01
                                   1852 ;main.c:139: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      000698                       1853 00103$:
      000698 21r02r00              1854 	ld	hl, #_padheight
      00069B 4E                    1855 	ld	c, (hl)
      00069C 06 00                 1856 	ld	b, #0x00
      00069E E1                    1857 	pop	hl
      00069F E5                    1858 	push	hl
      0006A0 09                    1859 	add	hl, bc
      0006A1 4D                    1860 	ld	c, l
      0006A2 44                    1861 	ld	b, h
      0006A3 0B                    1862 	dec	bc
      0006A4 FAr12r00              1863 	ld	a, (#_tileind)
      0006A7 F8 03                 1864 	ldhl	sp,	#3
      0006A9 77                    1865 	ld	(hl), a
      0006AA AF                    1866 	xor	a, a
      0006AB 23                    1867 	inc	hl
      0006AC 77                    1868 	ld	(hl), a
                                   1869 ;main.c:140: set_sprite_tile(tileind, 3);
      0006AD 21r12r00              1870 	ld	hl, #_tileind
      0006B0 5E                    1871 	ld	e, (hl)
                                   1872 ;main.c:139: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      0006B1 F8 03                 1873 	ldhl	sp,	#3
      0006B3 7E                    1874 	ld	a, (hl)
      0006B4 91                    1875 	sub	a, c
      0006B5 20 05                 1876 	jr	NZ, 00133$
      0006B7 23                    1877 	inc	hl
      0006B8 7E                    1878 	ld	a, (hl)
      0006B9 90                    1879 	sub	a, b
      0006BA 28 36                 1880 	jr	Z, 00105$
      0006BC                       1881 00133$:
                                   1882 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0006BC 01r00r00              1883 	ld	bc, #_shadow_OAM+0
      0006BF 26 00                 1884 	ld	h, #0x00
      0006C1 6B                    1885 	ld	l, e
      0006C2 29                    1886 	add	hl, hl
      0006C3 29                    1887 	add	hl, hl
      0006C4 09                    1888 	add	hl, bc
      0006C5 23                    1889 	inc	hl
      0006C6 23                    1890 	inc	hl
      0006C7 36 03                 1891 	ld	(hl), #0x03
                                   1892 ;main.c:141: move_sprite(tileind, posx, posy + i * 8);
      0006C9 FAr14r00              1893 	ld	a, (#_i)
      0006CC 87                    1894 	add	a, a
      0006CD 87                    1895 	add	a, a
      0006CE 87                    1896 	add	a, a
      0006CF 4A                    1897 	ld	c, d
      0006D0 81                    1898 	add	a, c
      0006D1 5F                    1899 	ld	e, a
      0006D2 21r12r00              1900 	ld	hl, #_tileind
      0006D5 4E                    1901 	ld	c, (hl)
                                   1902 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0006D6 26 00                 1903 	ld	h, #0x00
      0006D8 69                    1904 	ld	l, c
      0006D9 29                    1905 	add	hl, hl
      0006DA 29                    1906 	add	hl, hl
      0006DB 01r00r00              1907 	ld	bc, #_shadow_OAM
      0006DE 09                    1908 	add	hl, bc
      0006DF 4D                    1909 	ld	c, l
      0006E0 44                    1910 	ld	b, h
                                   1911 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0006E1 7B                    1912 	ld	a, e
      0006E2 02                    1913 	ld	(bc), a
      0006E3 03                    1914 	inc	bc
      0006E4 F8 02                 1915 	ldhl	sp,	#2
      0006E6 7E                    1916 	ld	a, (hl)
      0006E7 02                    1917 	ld	(bc), a
                                   1918 ;main.c:142: tileind++;
      0006E8 21r12r00              1919 	ld	hl, #_tileind
      0006EB 34                    1920 	inc	(hl)
                                   1921 ;main.c:143: i++;
      0006EC 21r14r00              1922 	ld	hl, #_i
      0006EF 34                    1923 	inc	(hl)
      0006F0 18 A6                 1924 	jr	00103$
      0006F2                       1925 00105$:
                                   1926 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0006F2 01r00r00              1927 	ld	bc, #_shadow_OAM+0
      0006F5 26 00                 1928 	ld	h, #0x00
      0006F7 6B                    1929 	ld	l, e
      0006F8 29                    1930 	add	hl, hl
      0006F9 29                    1931 	add	hl, hl
      0006FA 09                    1932 	add	hl, bc
      0006FB 23                    1933 	inc	hl
      0006FC 23                    1934 	inc	hl
      0006FD 36 02                 1935 	ld	(hl), #0x02
                                   1936 ;main.c:147: set_sprite_prop(tileind, 0x40); // Flip the last tile vertically
      0006FF 21r12r00              1937 	ld	hl, #_tileind
      000702 5E                    1938 	ld	e, (hl)
                                   1939 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1191: shadow_OAM[nb].prop=prop;
      000703 01r00r00              1940 	ld	bc, #_shadow_OAM+0
      000706 26 00                 1941 	ld	h, #0x00
      000708 6B                    1942 	ld	l, e
      000709 29                    1943 	add	hl, hl
      00070A 29                    1944 	add	hl, hl
      00070B 09                    1945 	add	hl, bc
      00070C 23                    1946 	inc	hl
      00070D 23                    1947 	inc	hl
      00070E 23                    1948 	inc	hl
      00070F 36 40                 1949 	ld	(hl), #0x40
                                   1950 ;main.c:148: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000711 FAr02r00              1951 	ld	a, (#_padheight)
      000714 3D                    1952 	dec	a
      000715 87                    1953 	add	a, a
      000716 87                    1954 	add	a, a
      000717 87                    1955 	add	a, a
      000718 82                    1956 	add	a, d
      000719 4F                    1957 	ld	c, a
      00071A 21r12r00              1958 	ld	hl, #_tileind
      00071D 46                    1959 	ld	b, (hl)
                                   1960 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00071E 26 00                 1961 	ld	h, #0x00
      000720 68                    1962 	ld	l, b
      000721 29                    1963 	add	hl, hl
      000722 29                    1964 	add	hl, hl
      000723 7D                    1965 	ld	a, l
      000724 C6r00                 1966 	add	a, #<(_shadow_OAM)
      000726 5F                    1967 	ld	e, a
      000727 7C                    1968 	ld	a, h
      000728 CEs00                 1969 	adc	a, #>(_shadow_OAM)
      00072A 57                    1970 	ld	d, a
                                   1971 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00072B 79                    1972 	ld	a, c
      00072C 12                    1973 	ld	(de), a
      00072D 13                    1974 	inc	de
      00072E F8 02                 1975 	ldhl	sp,	#2
      000730 7E                    1976 	ld	a, (hl)
      000731 12                    1977 	ld	(de), a
                                   1978 ;main.c:148: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000732                       1979 00115$:
                                   1980 ;main.c:150: }
      000732 E8 05                 1981 	add	sp, #5
      000734 C9                    1982 	ret
                                   1983 ;main.c:153: void set_pad_sectors() {
                                   1984 ;	---------------------------------
                                   1985 ; Function set_pad_sectors
                                   1986 ; ---------------------------------
      000735                       1987 _set_pad_sectors::
                                   1988 ;main.c:156: padsectors[0] = padheight * 2; // 25%
      000735 01r04r00              1989 	ld	bc, #_padsectors+0
      000738 21r02r00              1990 	ld	hl, #_padheight
      00073B 7E                    1991 	ld	a, (hl)
      00073C 87                    1992 	add	a, a
      00073D 02                    1993 	ld	(bc), a
                                   1994 ;main.c:157: padsectors[1] = padheight * 4; // 50%
      00073E 59                    1995 	ld	e, c
      00073F 50                    1996 	ld	d, b
      000740 13                    1997 	inc	de
      000741 7E                    1998 	ld	a, (hl)
      000742 87                    1999 	add	a, a
      000743 87                    2000 	add	a, a
      000744 12                    2001 	ld	(de), a
                                   2002 ;main.c:158: padsectors[2] = padheight * 6; // 75%
      000745 03                    2003 	inc	bc
      000746 03                    2004 	inc	bc
      000747 7E                    2005 	ld	a, (hl)
      000748 5F                    2006 	ld	e, a
      000749 87                    2007 	add	a, a
      00074A 83                    2008 	add	a, e
      00074B 87                    2009 	add	a, a
      00074C 02                    2010 	ld	(bc), a
                                   2011 ;main.c:159: }
      00074D C9                    2012 	ret
                                   2013 ;main.c:162: void move_paddle(Paddle * pdl, INT8 pdlspd) {
                                   2014 ;	---------------------------------
                                   2015 ; Function move_paddle
                                   2016 ; ---------------------------------
      00074E                       2017 _move_paddle::
      00074E E8 F7                 2018 	add	sp, #-9
                                   2019 ;main.c:163: UINT8 nextpdly = pdl->y + pdlspd;
      000750 F8 0B                 2020 	ldhl	sp,	#11
      000752 2A                    2021 	ld	a, (hl+)
      000753 5E                    2022 	ld	e, (hl)
      000754 F8 00                 2023 	ldhl	sp,	#0
      000756 22                    2024 	ld	(hl+), a
      000757 73                    2025 	ld	(hl), e
      000758 C1                    2026 	pop	bc
      000759 C5                    2027 	push	bc
      00075A 03                    2028 	inc	bc
      00075B 0A                    2029 	ld	a, (bc)
      00075C F8 0D                 2030 	ldhl	sp,	#13
      00075E 86                    2031 	add	a, (hl)
      00075F 57                    2032 	ld	d, a
                                   2033 ;main.c:164: if(!hits_walls(nextpdly, padheight * 8)) {
      000760 FAr02r00              2034 	ld	a, (#_padheight)
      000763 87                    2035 	add	a, a
      000764 87                    2036 	add	a, a
      000765 87                    2037 	add	a, a
      000766 C5                    2038 	push	bc
      000767 F5                    2039 	push	af
      000768 33                    2040 	inc	sp
      000769 D5                    2041 	push	de
      00076A 33                    2042 	inc	sp
      00076B CDrE9r05              2043 	call	_hits_walls
      00076E E8 02                 2044 	add	sp, #2
      000770 7B                    2045 	ld	a, e
      000771 C1                    2046 	pop	bc
      000772 B7                    2047 	or	a, a
      000773 20 1A                 2048 	jr	NZ, 00105$
                                   2049 ;main.c:165: scroll_paddle_tiles(pdl, pdlspd);
      000775 C5                    2050 	push	bc
      000776 F8 0F                 2051 	ldhl	sp,	#15
      000778 7E                    2052 	ld	a, (hl)
      000779 F5                    2053 	push	af
      00077A 33                    2054 	inc	sp
      00077B F8 03                 2055 	ldhl	sp,	#3
      00077D 2A                    2056 	ld	a, (hl+)
      00077E 66                    2057 	ld	h, (hl)
      00077F 6F                    2058 	ld	l, a
      000780 E5                    2059 	push	hl
      000781 CDr27r08              2060 	call	_scroll_paddle_tiles
      000784 E8 03                 2061 	add	sp, #3
      000786 C1                    2062 	pop	bc
                                   2063 ;main.c:166: pdl->y += pdlspd;
      000787 0A                    2064 	ld	a, (bc)
      000788 F8 0D                 2065 	ldhl	sp,	#13
      00078A 86                    2066 	add	a, (hl)
      00078B 02                    2067 	ld	(bc), a
      00078C C3r24r08              2068 	jp	00107$
      00078F                       2069 00105$:
                                   2070 ;main.c:167: } else if(pdl->y > bkgborderup || pdl->y + padheight * 8 < bkgborderdown) {
      00078F 0A                    2071 	ld	a, (bc)
      000790 F8 02                 2072 	ldhl	sp,	#2
      000792 77                    2073 	ld	(hl), a
      000793 FArF4r04              2074 	ld	a, (#_bkgborderup)
      000796 F8 03                 2075 	ldhl	sp,	#3
      000798 77                    2076 	ld	(hl), a
      000799 FArF5r04              2077 	ld	a, (#_bkgborderdown)
      00079C F8 04                 2078 	ldhl	sp,	#4
      00079E 32                    2079 	ld	(hl-), a
      00079F 3A                    2080 	ld	a, (hl-)
      0007A0 96                    2081 	sub	a, (hl)
      0007A1 38 51                 2082 	jr	C, 00101$
      0007A3 7E                    2083 	ld	a, (hl)
      0007A4 F8 07                 2084 	ldhl	sp,	#7
      0007A6 77                    2085 	ld	(hl), a
      0007A7 AF                    2086 	xor	a, a
      0007A8 23                    2087 	inc	hl
      0007A9 77                    2088 	ld	(hl), a
      0007AA 21r02r00              2089 	ld	hl, #_padheight
      0007AD 5E                    2090 	ld	e, (hl)
      0007AE 16 00                 2091 	ld	d, #0x00
      0007B0 7B                    2092 	ld	a, e
      0007B1 87                    2093 	add	a, a
      0007B2 CB 12                 2094 	rl	d
      0007B4 87                    2095 	add	a, a
      0007B5 CB 12                 2096 	rl	d
      0007B7 87                    2097 	add	a, a
      0007B8 CB 12                 2098 	rl	d
                                   2099 ;c
      0007BA 5F                    2100 	ld	e, a
      0007BB F8 07                 2101 	ldhl	sp,	#7
      0007BD 2A                    2102 	ld	a, (hl+)
      0007BE 66                    2103 	ld	h, (hl)
      0007BF 6F                    2104 	ld	l, a
      0007C0 19                    2105 	add	hl, de
      0007C1 E5                    2106 	push	hl
      0007C2 7D                    2107 	ld	a, l
      0007C3 F8 07                 2108 	ldhl	sp,	#7
      0007C5 77                    2109 	ld	(hl), a
      0007C6 E1                    2110 	pop	hl
      0007C7 7C                    2111 	ld	a, h
      0007C8 F8 06                 2112 	ldhl	sp,	#6
      0007CA 32                    2113 	ld	(hl-), a
      0007CB 2B                    2114 	dec	hl
      0007CC 7E                    2115 	ld	a, (hl)
      0007CD F8 07                 2116 	ldhl	sp,	#7
      0007CF 77                    2117 	ld	(hl), a
      0007D0 AF                    2118 	xor	a, a
      0007D1 23                    2119 	inc	hl
      0007D2 77                    2120 	ld	(hl), a
      0007D3 F8 05                 2121 	ldhl	sp,	#5
      0007D5 5D                    2122 	ld	e, l
      0007D6 54                    2123 	ld	d, h
      0007D7 F8 07                 2124 	ldhl	sp,	#7
      0007D9 1A                    2125 	ld	a, (de)
      0007DA 96                    2126 	sub	a, (hl)
      0007DB 23                    2127 	inc	hl
      0007DC 13                    2128 	inc	de
      0007DD 1A                    2129 	ld	a, (de)
      0007DE 9E                    2130 	sbc	a, (hl)
      0007DF 1A                    2131 	ld	a, (de)
      0007E0 57                    2132 	ld	d, a
      0007E1 5E                    2133 	ld	e, (hl)
      0007E2 CB 7B                 2134 	bit	7, e
      0007E4 28 07                 2135 	jr	Z, 00127$
      0007E6 CB 7A                 2136 	bit	7, d
      0007E8 20 08                 2137 	jr	NZ, 00128$
      0007EA BF                    2138 	cp	a, a
      0007EB 18 05                 2139 	jr	00128$
      0007ED                       2140 00127$:
      0007ED CB 7A                 2141 	bit	7, d
      0007EF 28 01                 2142 	jr	Z, 00128$
      0007F1 37                    2143 	scf
      0007F2                       2144 00128$:
      0007F2 30 30                 2145 	jr	NC, 00107$
      0007F4                       2146 00101$:
                                   2147 ;main.c:169: INT8 adjspd = pdlspd < 0 ? bkgborderup - pdl->y : bkgborderdown - (pdl->y + padheight * 8);
      0007F4 F8 0D                 2148 	ldhl	sp,	#13
      0007F6 CB 7E                 2149 	bit	7, (hl)
      0007F8 28 06                 2150 	jr	Z, 00109$
      0007FA F8 03                 2151 	ldhl	sp,	#3
      0007FC 3A                    2152 	ld	a, (hl-)
      0007FD 96                    2153 	sub	a, (hl)
      0007FE 18 0F                 2154 	jr	00110$
      000800                       2155 00109$:
      000800 FAr02r00              2156 	ld	a, (#_padheight)
      000803 87                    2157 	add	a, a
      000804 87                    2158 	add	a, a
      000805 87                    2159 	add	a, a
      000806 F8 02                 2160 	ldhl	sp,	#2
      000808 5E                    2161 	ld	e, (hl)
      000809 83                    2162 	add	a, e
      00080A 5F                    2163 	ld	e, a
      00080B 23                    2164 	inc	hl
      00080C 23                    2165 	inc	hl
      00080D 7E                    2166 	ld	a, (hl)
      00080E 93                    2167 	sub	a, e
      00080F                       2168 00110$:
      00080F 57                    2169 	ld	d, a
                                   2170 ;main.c:170: scroll_paddle_tiles(pdl, adjspd);
      000810 C5                    2171 	push	bc
      000811 D5                    2172 	push	de
      000812 D5                    2173 	push	de
      000813 33                    2174 	inc	sp
      000814 F8 05                 2175 	ldhl	sp,	#5
      000816 2A                    2176 	ld	a, (hl+)
      000817 66                    2177 	ld	h, (hl)
      000818 6F                    2178 	ld	l, a
      000819 E5                    2179 	push	hl
      00081A CDr27r08              2180 	call	_scroll_paddle_tiles
      00081D E8 03                 2181 	add	sp, #3
      00081F D1                    2182 	pop	de
      000820 C1                    2183 	pop	bc
                                   2184 ;main.c:171: pdl->y += adjspd;
      000821 0A                    2185 	ld	a, (bc)
      000822 82                    2186 	add	a, d
      000823 02                    2187 	ld	(bc), a
      000824                       2188 00107$:
                                   2189 ;main.c:173: }
      000824 E8 09                 2190 	add	sp, #9
      000826 C9                    2191 	ret
                                   2192 ;main.c:176: void scroll_paddle_tiles(Paddle * pdl, INT8 pdlsp) {
                                   2193 ;	---------------------------------
                                   2194 ; Function scroll_paddle_tiles
                                   2195 ; ---------------------------------
      000827                       2196 _scroll_paddle_tiles::
      000827 3B                    2197 	dec	sp
                                   2198 ;main.c:177: for(i = 0; i != padheight; i++) {
      000828 21r14r00              2199 	ld	hl, #_i
      00082B 36 00                 2200 	ld	(hl), #0x00
      00082D F8 05                 2201 	ldhl	sp,	#5
      00082F 7E                    2202 	ld	a, (hl)
      000830 F8 00                 2203 	ldhl	sp,	#0
      000832 77                    2204 	ld	(hl), a
      000833 F8 03                 2205 	ldhl	sp,#3
      000835 2A                    2206 	ld	a, (hl+)
      000836 5F                    2207 	ld	e, a
      000837 56                    2208 	ld	d, (hl)
      000838 13                    2209 	inc	de
      000839 13                    2210 	inc	de
      00083A                       2211 00104$:
      00083A FAr14r00              2212 	ld	a, (#_i)
      00083D 21r02r00              2213 	ld	hl, #_padheight
      000840 96                    2214 	sub	a, (hl)
      000841 28 1F                 2215 	jr	Z, 00106$
                                   2216 ;main.c:178: scroll_sprite(pdl->firsttile + i, 0, pdlsp);
      000843 1A                    2217 	ld	a, (de)
      000844 21r14r00              2218 	ld	hl, #_i
      000847 86                    2219 	add	a, (hl)
      000848 4F                    2220 	ld	c, a
                                   2221 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      000849 26 00                 2222 	ld	h, #0x00
      00084B 69                    2223 	ld	l, c
      00084C 29                    2224 	add	hl, hl
      00084D 29                    2225 	add	hl, hl
      00084E 01r00r00              2226 	ld	bc, #_shadow_OAM
      000851 09                    2227 	add	hl, bc
      000852 4D                    2228 	ld	c, l
      000853 44                    2229 	ld	b, h
                                   2230 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      000854 0A                    2231 	ld	a, (bc)
      000855 F8 00                 2232 	ldhl	sp,	#0
      000857 86                    2233 	add	a, (hl)
      000858 02                    2234 	ld	(bc), a
      000859 03                    2235 	inc	bc
      00085A 0A                    2236 	ld	a, (bc)
      00085B 02                    2237 	ld	(bc), a
                                   2238 ;main.c:177: for(i = 0; i != padheight; i++) {
      00085C 21r14r00              2239 	ld	hl, #_i
      00085F 34                    2240 	inc	(hl)
      000860 18 D8                 2241 	jr	00104$
      000862                       2242 00106$:
                                   2243 ;main.c:180: }
      000862 33                    2244 	inc	sp
      000863 C9                    2245 	ret
                                   2246 ;main.c:183: UBYTE hits_paddle(UINT8 nextx, UINT8 nexty, Paddle * pdl) {
                                   2247 ;	---------------------------------
                                   2248 ; Function hits_paddle
                                   2249 ; ---------------------------------
      000864                       2250 _hits_paddle::
      000864 E8 FA                 2251 	add	sp, #-6
                                   2252 ;main.c:184: return (nextx < pdl->x + 8 && pdl->x < nextx + 8) &&
      000866 F8 0A                 2253 	ldhl	sp,	#10
      000868 2A                    2254 	ld	a, (hl+)
      000869 5E                    2255 	ld	e, (hl)
      00086A F8 02                 2256 	ldhl	sp,	#2
      00086C 22                    2257 	ld	(hl+), a
      00086D 7B                    2258 	ld	a, e
      00086E 32                    2259 	ld	(hl-), a
      00086F 2A                    2260 	ld	a, (hl+)
      000870 5F                    2261 	ld	e, a
      000871 56                    2262 	ld	d, (hl)
      000872 1A                    2263 	ld	a, (de)
      000873 F8 00                 2264 	ldhl	sp,	#0
      000875 77                    2265 	ld	(hl), a
      000876 AF                    2266 	xor	a, a
      000877 23                    2267 	inc	hl
      000878 77                    2268 	ld	(hl), a
                                   2269 ;c
      000879 D1                    2270 	pop	de
      00087A D5                    2271 	push	de
      00087B 21 08 00              2272 	ld	hl, #0x0008
      00087E 19                    2273 	add	hl, de
      00087F 4D                    2274 	ld	c, l
      000880 44                    2275 	ld	b, h
      000881 F8 08                 2276 	ldhl	sp,	#8
      000883 7E                    2277 	ld	a, (hl)
      000884 F8 04                 2278 	ldhl	sp,	#4
      000886 77                    2279 	ld	(hl), a
      000887 AF                    2280 	xor	a, a
      000888 23                    2281 	inc	hl
      000889 32                    2282 	ld	(hl-), a
      00088A 7E                    2283 	ld	a, (hl)
      00088B 91                    2284 	sub	a, c
      00088C 23                    2285 	inc	hl
      00088D 7E                    2286 	ld	a, (hl)
      00088E 98                    2287 	sbc	a, b
      00088F 56                    2288 	ld	d, (hl)
      000890 78                    2289 	ld	a, b
      000891 CB 7F                 2290 	bit	7,a
      000893 28 07                 2291 	jr	Z, 00126$
      000895 CB 7A                 2292 	bit	7, d
      000897 20 08                 2293 	jr	NZ, 00127$
      000899 BF                    2294 	cp	a, a
      00089A 18 05                 2295 	jr	00127$
      00089C                       2296 00126$:
      00089C CB 7A                 2297 	bit	7, d
      00089E 28 01                 2298 	jr	Z, 00127$
      0008A0 37                    2299 	scf
      0008A1                       2300 00127$:
      0008A1 D2r72r09              2301 	jp	NC, 00103$
                                   2302 ;c
      0008A4 F8 04                 2303 	ldhl	sp,#4
      0008A6 2A                    2304 	ld	a, (hl+)
      0008A7 5F                    2305 	ld	e, a
      0008A8 56                    2306 	ld	d, (hl)
      0008A9 21 08 00              2307 	ld	hl, #0x0008
      0008AC 19                    2308 	add	hl, de
      0008AD 4D                    2309 	ld	c, l
      0008AE 44                    2310 	ld	b, h
      0008AF F8 00                 2311 	ldhl	sp,	#0
      0008B1 7E                    2312 	ld	a, (hl)
      0008B2 91                    2313 	sub	a, c
      0008B3 23                    2314 	inc	hl
      0008B4 7E                    2315 	ld	a, (hl)
      0008B5 98                    2316 	sbc	a, b
      0008B6 56                    2317 	ld	d, (hl)
      0008B7 78                    2318 	ld	a, b
      0008B8 CB 7F                 2319 	bit	7,a
      0008BA 28 07                 2320 	jr	Z, 00128$
      0008BC CB 7A                 2321 	bit	7, d
      0008BE 20 08                 2322 	jr	NZ, 00129$
      0008C0 BF                    2323 	cp	a, a
      0008C1 18 05                 2324 	jr	00129$
      0008C3                       2325 00128$:
      0008C3 CB 7A                 2326 	bit	7, d
      0008C5 28 01                 2327 	jr	Z, 00129$
      0008C7 37                    2328 	scf
      0008C8                       2329 00129$:
      0008C8 D2r72r09              2330 	jp	NC, 00103$
                                   2331 ;main.c:185: (nexty < pdl->y + (padheight * 8) && pdl->y < nexty + 8);
                                   2332 ;c
      0008CB F8 02                 2333 	ldhl	sp,#2
      0008CD 2A                    2334 	ld	a, (hl+)
      0008CE 5F                    2335 	ld	e, a
      0008CF 56                    2336 	ld	d, (hl)
      0008D0 6B                    2337 	ld	l, e
      0008D1 62                    2338 	ld	h, d
      0008D2 23                    2339 	inc	hl
      0008D3 E5                    2340 	push	hl
      0008D4 7D                    2341 	ld	a, l
      0008D5 F8 06                 2342 	ldhl	sp,	#6
      0008D7 77                    2343 	ld	(hl), a
      0008D8 E1                    2344 	pop	hl
      0008D9 7C                    2345 	ld	a, h
      0008DA F8 05                 2346 	ldhl	sp,	#5
      0008DC 32                    2347 	ld	(hl-), a
      0008DD 2A                    2348 	ld	a, (hl+)
      0008DE 5F                    2349 	ld	e, a
      0008DF 56                    2350 	ld	d, (hl)
      0008E0 1A                    2351 	ld	a, (de)
      0008E1 77                    2352 	ld	(hl), a
      0008E2 F8 00                 2353 	ldhl	sp,	#0
      0008E4 77                    2354 	ld	(hl), a
      0008E5 AF                    2355 	xor	a, a
      0008E6 23                    2356 	inc	hl
      0008E7 77                    2357 	ld	(hl), a
      0008E8 FAr02r00              2358 	ld	a, (#_padheight)
      0008EB F8 04                 2359 	ldhl	sp,	#4
      0008ED 77                    2360 	ld	(hl), a
      0008EE AF                    2361 	xor	a, a
      0008EF 23                    2362 	inc	hl
      0008F0 32                    2363 	ld	(hl-), a
      0008F1 3A                    2364 	ld	a, (hl-)
      0008F2 2B                    2365 	dec	hl
      0008F3 77                    2366 	ld	(hl), a
      0008F4 F8 05                 2367 	ldhl	sp,	#5
      0008F6 3A                    2368 	ld	a, (hl-)
      0008F7 2B                    2369 	dec	hl
      0008F8 77                    2370 	ld	(hl), a
      0008F9 3E 03                 2371 	ld	a, #0x03
      0008FB                       2372 00130$:
      0008FB F8 02                 2373 	ldhl	sp,	#2
      0008FD CB 26                 2374 	sla	(hl)
      0008FF 23                    2375 	inc	hl
      000900 CB 16                 2376 	rl	(hl)
      000902 3D                    2377 	dec	a
      000903 20 F6                 2378 	jr	NZ, 00130$
                                   2379 ;c
      000905 2B                    2380 	dec	hl
      000906 2A                    2381 	ld	a, (hl+)
      000907 5F                    2382 	ld	e, a
      000908 56                    2383 	ld	d, (hl)
      000909 E1                    2384 	pop	hl
      00090A E5                    2385 	push	hl
      00090B 19                    2386 	add	hl, de
      00090C E5                    2387 	push	hl
      00090D 7D                    2388 	ld	a, l
      00090E F8 06                 2389 	ldhl	sp,	#6
      000910 77                    2390 	ld	(hl), a
      000911 E1                    2391 	pop	hl
      000912 7C                    2392 	ld	a, h
      000913 F8 05                 2393 	ldhl	sp,	#5
      000915 77                    2394 	ld	(hl), a
      000916 F8 09                 2395 	ldhl	sp,	#9
      000918 7E                    2396 	ld	a, (hl)
      000919 F8 02                 2397 	ldhl	sp,	#2
      00091B 77                    2398 	ld	(hl), a
      00091C AF                    2399 	xor	a, a
      00091D 23                    2400 	inc	hl
      00091E 77                    2401 	ld	(hl), a
      00091F F8 02                 2402 	ldhl	sp,	#2
      000921 5D                    2403 	ld	e, l
      000922 54                    2404 	ld	d, h
      000923 F8 04                 2405 	ldhl	sp,	#4
      000925 1A                    2406 	ld	a, (de)
      000926 96                    2407 	sub	a, (hl)
      000927 23                    2408 	inc	hl
      000928 13                    2409 	inc	de
      000929 1A                    2410 	ld	a, (de)
      00092A 9E                    2411 	sbc	a, (hl)
      00092B 1A                    2412 	ld	a, (de)
      00092C 57                    2413 	ld	d, a
      00092D CB 7E                 2414 	bit	7, (hl)
      00092F 28 07                 2415 	jr	Z, 00131$
      000931 CB 7A                 2416 	bit	7, d
      000933 20 08                 2417 	jr	NZ, 00132$
      000935 BF                    2418 	cp	a, a
      000936 18 05                 2419 	jr	00132$
      000938                       2420 00131$:
      000938 CB 7A                 2421 	bit	7, d
      00093A 28 01                 2422 	jr	Z, 00132$
      00093C 37                    2423 	scf
      00093D                       2424 00132$:
      00093D 30 33                 2425 	jr	NC, 00103$
                                   2426 ;c
      00093F F8 02                 2427 	ldhl	sp,#2
      000941 2A                    2428 	ld	a, (hl+)
      000942 5F                    2429 	ld	e, a
      000943 56                    2430 	ld	d, (hl)
      000944 21 08 00              2431 	ld	hl, #0x0008
      000947 19                    2432 	add	hl, de
      000948 E5                    2433 	push	hl
      000949 7D                    2434 	ld	a, l
      00094A F8 06                 2435 	ldhl	sp,	#6
      00094C 77                    2436 	ld	(hl), a
      00094D E1                    2437 	pop	hl
      00094E 7C                    2438 	ld	a, h
      00094F F8 05                 2439 	ldhl	sp,	#5
      000951 77                    2440 	ld	(hl), a
      000952 F8 00                 2441 	ldhl	sp,	#0
      000954 5D                    2442 	ld	e, l
      000955 54                    2443 	ld	d, h
      000956 F8 04                 2444 	ldhl	sp,	#4
      000958 1A                    2445 	ld	a, (de)
      000959 96                    2446 	sub	a, (hl)
      00095A 23                    2447 	inc	hl
      00095B 13                    2448 	inc	de
      00095C 1A                    2449 	ld	a, (de)
      00095D 9E                    2450 	sbc	a, (hl)
      00095E 1A                    2451 	ld	a, (de)
      00095F 57                    2452 	ld	d, a
      000960 CB 7E                 2453 	bit	7, (hl)
      000962 28 07                 2454 	jr	Z, 00133$
      000964 CB 7A                 2455 	bit	7, d
      000966 20 08                 2456 	jr	NZ, 00134$
      000968 BF                    2457 	cp	a, a
      000969 18 05                 2458 	jr	00134$
      00096B                       2459 00133$:
      00096B CB 7A                 2460 	bit	7, d
      00096D 28 01                 2461 	jr	Z, 00134$
      00096F 37                    2462 	scf
      000970                       2463 00134$:
      000970 38 04                 2464 	jr	C, 00104$
      000972                       2465 00103$:
      000972 1E 00                 2466 	ld	e, #0x00
      000974 18 02                 2467 	jr	00105$
      000976                       2468 00104$:
      000976 1E 01                 2469 	ld	e, #0x01
      000978                       2470 00105$:
                                   2471 ;main.c:186: }
      000978 E8 06                 2472 	add	sp, #6
      00097A C9                    2473 	ret
                                   2474 ;main.c:189: INT8 get_bounce_off_dir_y(Paddle * pad) {
                                   2475 ;	---------------------------------
                                   2476 ; Function get_bounce_off_dir_y
                                   2477 ; ---------------------------------
      00097B                       2478 _get_bounce_off_dir_y::
      00097B E8 FA                 2479 	add	sp, #-6
                                   2480 ;main.c:191: UINT8 ballcentery = ball.y + 4;
      00097D FAr0Fr00              2481 	ld	a, (#(_ball + 0x0001) + 0)
      000980 C6 04                 2482 	add	a, #0x04
      000982 4F                    2483 	ld	c, a
                                   2484 ;main.c:192: if(ballcentery < pad->y + padsectors[0]) { // < 25%
      000983 F8 08                 2485 	ldhl	sp,#8
      000985 2A                    2486 	ld	a, (hl+)
      000986 5F                    2487 	ld	e, a
      000987 56                    2488 	ld	d, (hl)
      000988 13                    2489 	inc	de
      000989 1A                    2490 	ld	a, (de)
      00098A F8 00                 2491 	ldhl	sp,	#0
      00098C 77                    2492 	ld	(hl), a
      00098D AF                    2493 	xor	a, a
      00098E 23                    2494 	inc	hl
      00098F 77                    2495 	ld	(hl), a
      000990 FAr04r00              2496 	ld	a, (#_padsectors + 0)
      000993 5F                    2497 	ld	e, a
      000994 16 00                 2498 	ld	d, #0x00
                                   2499 ;c
      000996 E1                    2500 	pop	hl
      000997 E5                    2501 	push	hl
      000998 19                    2502 	add	hl, de
      000999 E5                    2503 	push	hl
      00099A 7D                    2504 	ld	a, l
      00099B F8 06                 2505 	ldhl	sp,	#6
      00099D 77                    2506 	ld	(hl), a
      00099E E1                    2507 	pop	hl
      00099F 7C                    2508 	ld	a, h
      0009A0 F8 05                 2509 	ldhl	sp,	#5
      0009A2 77                    2510 	ld	(hl), a
      0009A3 06 00                 2511 	ld	b, #0x00
      0009A5 2B                    2512 	dec	hl
      0009A6 79                    2513 	ld	a, c
      0009A7 96                    2514 	sub	a, (hl)
      0009A8 23                    2515 	inc	hl
      0009A9 78                    2516 	ld	a, b
      0009AA 9E                    2517 	sbc	a, (hl)
      0009AB 78                    2518 	ld	a, b
      0009AC 57                    2519 	ld	d, a
      0009AD CB 7E                 2520 	bit	7, (hl)
      0009AF 28 07                 2521 	jr	Z, 00142$
      0009B1 CB 7A                 2522 	bit	7, d
      0009B3 20 08                 2523 	jr	NZ, 00143$
      0009B5 BF                    2524 	cp	a, a
      0009B6 18 05                 2525 	jr	00143$
      0009B8                       2526 00142$:
      0009B8 CB 7A                 2527 	bit	7, d
      0009BA 28 01                 2528 	jr	Z, 00143$
      0009BC 37                    2529 	scf
      0009BD                       2530 00143$:
      0009BD 30 05                 2531 	jr	NC, 00113$
                                   2532 ;main.c:193: return -4;
      0009BF 1E FC                 2533 	ld	e, #0xfc
      0009C1 C3r55r0A              2534 	jp	00115$
      0009C4                       2535 00113$:
                                   2536 ;main.c:194: } else if(ballcentery < pad->y + padsectors[1]) { // < 50%
      0009C4 FAr05r00              2537 	ld	a, (#(_padsectors + 0x0001) + 0)
      0009C7 16 00                 2538 	ld	d, #0x00
                                   2539 ;c
      0009C9 5F                    2540 	ld	e, a
      0009CA E1                    2541 	pop	hl
      0009CB E5                    2542 	push	hl
      0009CC 19                    2543 	add	hl, de
      0009CD E5                    2544 	push	hl
      0009CE 7D                    2545 	ld	a, l
      0009CF F8 04                 2546 	ldhl	sp,	#4
      0009D1 77                    2547 	ld	(hl), a
      0009D2 E1                    2548 	pop	hl
      0009D3 7C                    2549 	ld	a, h
      0009D4 F8 03                 2550 	ldhl	sp,	#3
      0009D6 32                    2551 	ld	(hl-), a
      0009D7 79                    2552 	ld	a, c
      0009D8 96                    2553 	sub	a, (hl)
      0009D9 23                    2554 	inc	hl
      0009DA 78                    2555 	ld	a, b
      0009DB 9E                    2556 	sbc	a, (hl)
      0009DC 78                    2557 	ld	a, b
      0009DD 57                    2558 	ld	d, a
      0009DE CB 7E                 2559 	bit	7, (hl)
      0009E0 28 07                 2560 	jr	Z, 00144$
      0009E2 CB 7A                 2561 	bit	7, d
      0009E4 20 08                 2562 	jr	NZ, 00145$
      0009E6 BF                    2563 	cp	a, a
      0009E7 18 05                 2564 	jr	00145$
      0009E9                       2565 00144$:
      0009E9 CB 7A                 2566 	bit	7, d
      0009EB 28 01                 2567 	jr	Z, 00145$
      0009ED 37                    2568 	scf
      0009EE                       2569 00145$:
      0009EE 30 04                 2570 	jr	NC, 00110$
                                   2571 ;main.c:195: return -2;
      0009F0 1E FE                 2572 	ld	e, #0xfe
      0009F2 18 61                 2573 	jr	00115$
      0009F4                       2574 00110$:
                                   2575 ;main.c:196: } else if(ballcentery == pad->y + padsectors[1]) { // == 50%
      0009F4 F8 02                 2576 	ldhl	sp,	#2
      0009F6 7E                    2577 	ld	a, (hl)
      0009F7 91                    2578 	sub	a, c
      0009F8 20 08                 2579 	jr	NZ, 00107$
      0009FA 23                    2580 	inc	hl
      0009FB 7E                    2581 	ld	a, (hl)
                                   2582 ;main.c:197: return 0;
      0009FC 90                    2583 	sub	a,b
      0009FD 20 03                 2584 	jr	NZ, 00107$
      0009FF 5F                    2585 	ld	e,a
      000A00 18 53                 2586 	jr	00115$
      000A02                       2587 00107$:
                                   2588 ;main.c:198: } else if(ballcentery > pad->y + padsectors[2]) { // > 75%
      000A02 FAr06r00              2589 	ld	a, (#(_padsectors + 0x0002) + 0)
      000A05 16 00                 2590 	ld	d, #0x00
                                   2591 ;c
      000A07 5F                    2592 	ld	e, a
      000A08 E1                    2593 	pop	hl
      000A09 E5                    2594 	push	hl
      000A0A 19                    2595 	add	hl, de
      000A0B E5                    2596 	push	hl
      000A0C 7D                    2597 	ld	a, l
      000A0D F8 06                 2598 	ldhl	sp,	#6
      000A0F 77                    2599 	ld	(hl), a
      000A10 E1                    2600 	pop	hl
      000A11 7C                    2601 	ld	a, h
      000A12 F8 05                 2602 	ldhl	sp,	#5
      000A14 32                    2603 	ld	(hl-), a
      000A15 7E                    2604 	ld	a, (hl)
      000A16 91                    2605 	sub	a, c
      000A17 23                    2606 	inc	hl
      000A18 7E                    2607 	ld	a, (hl)
      000A19 98                    2608 	sbc	a, b
      000A1A 56                    2609 	ld	d, (hl)
      000A1B 78                    2610 	ld	a, b
      000A1C CB 7F                 2611 	bit	7,a
      000A1E 28 07                 2612 	jr	Z, 00148$
      000A20 CB 7A                 2613 	bit	7, d
      000A22 20 08                 2614 	jr	NZ, 00149$
      000A24 BF                    2615 	cp	a, a
      000A25 18 05                 2616 	jr	00149$
      000A27                       2617 00148$:
      000A27 CB 7A                 2618 	bit	7, d
      000A29 28 01                 2619 	jr	Z, 00149$
      000A2B 37                    2620 	scf
      000A2C                       2621 00149$:
      000A2C 30 04                 2622 	jr	NC, 00104$
                                   2623 ;main.c:199: return 4;
      000A2E 1E 04                 2624 	ld	e, #0x04
      000A30 18 23                 2625 	jr	00115$
      000A32                       2626 00104$:
                                   2627 ;main.c:200: } else if(ballcentery > pad->y + padsectors[1]) { // > 50%
      000A32 F8 02                 2628 	ldhl	sp,	#2
      000A34 7E                    2629 	ld	a, (hl)
      000A35 91                    2630 	sub	a, c
      000A36 23                    2631 	inc	hl
      000A37 7E                    2632 	ld	a, (hl)
      000A38 98                    2633 	sbc	a, b
      000A39 56                    2634 	ld	d, (hl)
      000A3A 78                    2635 	ld	a, b
      000A3B CB 7F                 2636 	bit	7,a
      000A3D 28 07                 2637 	jr	Z, 00150$
      000A3F CB 7A                 2638 	bit	7, d
      000A41 20 08                 2639 	jr	NZ, 00151$
      000A43 BF                    2640 	cp	a, a
      000A44 18 05                 2641 	jr	00151$
      000A46                       2642 00150$:
      000A46 CB 7A                 2643 	bit	7, d
      000A48 28 01                 2644 	jr	Z, 00151$
      000A4A 37                    2645 	scf
      000A4B                       2646 00151$:
      000A4B 30 04                 2647 	jr	NC, 00108$
                                   2648 ;main.c:201: return 2;
      000A4D 1E 02                 2649 	ld	e, #0x02
      000A4F 18 04                 2650 	jr	00115$
      000A51                       2651 00108$:
                                   2652 ;main.c:203: return ball.speedy; // Just getting rid of a compiler warning
      000A51 FAr11r00              2653 	ld	a, (#(_ball + 0x0003) + 0)
      000A54 5F                    2654 	ld	e, a
      000A55                       2655 00115$:
                                   2656 ;main.c:204: }
      000A55 E8 06                 2657 	add	sp, #6
      000A57 C9                    2658 	ret
                                   2659 ;main.c:207: void action_cpu() {
                                   2660 ;	---------------------------------
                                   2661 ; Function action_cpu
                                   2662 ; ---------------------------------
      000A58                       2663 _action_cpu::
      000A58 3B                    2664 	dec	sp
                                   2665 ;main.c:208: if(ball.x > difficulty_px[difficulty]) { // Determine when the cpu will react to the ball's position
      000A59 21r0Er00              2666 	ld	hl, #_ball
      000A5C 4E                    2667 	ld	c, (hl)
      000A5D 11rEAr04              2668 	ld	de, #_difficulty_px+0
      000A60 7B                    2669 	ld	a, e
      000A61 21r13r00              2670 	ld	hl, #_difficulty
      000A64 86                    2671 	add	a, (hl)
      000A65 5F                    2672 	ld	e, a
      000A66 30 01                 2673 	jr	NC, 00117$
      000A68 14                    2674 	inc	d
      000A69                       2675 00117$:
      000A69 1A                    2676 	ld	a, (de)
      000A6A 91                    2677 	sub	a, c
      000A6B 30 2A                 2678 	jr	NC, 00103$
                                   2679 ;main.c:209: move_paddle(&pdlcpu, pdlcpu.y < ball.y ? padspeed : -padspeed);
      000A6D 21r0Cr00              2680 	ld	hl, #_pdlcpu + 1
      000A70 4E                    2681 	ld	c, (hl)
      000A71 21r0Fr00              2682 	ld	hl, #(_ball + 0x0001)
      000A74 46                    2683 	ld	b, (hl)
      000A75 79                    2684 	ld	a, c
      000A76 90                    2685 	sub	a, b
      000A77 30 08                 2686 	jr	NC, 00105$
      000A79 FAr03r00              2687 	ld	a, (#_padspeed)
      000A7C F8 00                 2688 	ldhl	sp,	#0
      000A7E 77                    2689 	ld	(hl), a
      000A7F 18 08                 2690 	jr	00106$
      000A81                       2691 00105$:
      000A81 AF                    2692 	xor	a, a
      000A82 21r03r00              2693 	ld	hl, #_padspeed
      000A85 96                    2694 	sub	a, (hl)
      000A86 F8 00                 2695 	ldhl	sp,	#0
      000A88 77                    2696 	ld	(hl), a
      000A89                       2697 00106$:
      000A89 F8 00                 2698 	ldhl	sp,	#0
      000A8B 7E                    2699 	ld	a, (hl)
      000A8C F5                    2700 	push	af
      000A8D 33                    2701 	inc	sp
      000A8E 21r0Br00              2702 	ld	hl, #_pdlcpu
      000A91 E5                    2703 	push	hl
      000A92 CDr4Er07              2704 	call	_move_paddle
      000A95 E8 03                 2705 	add	sp, #3
      000A97                       2706 00103$:
                                   2707 ;main.c:211: }
      000A97 33                    2708 	inc	sp
      000A98 C9                    2709 	ret
                                   2710 ;main.c:214: void auto_speed_adj() {
                                   2711 ;	---------------------------------
                                   2712 ; Function auto_speed_adj
                                   2713 ; ---------------------------------
      000A99                       2714 _auto_speed_adj::
                                   2715 ;main.c:215: if(chspeedflgdir == -ball.speedx) {
      000A99 FAr10r00              2716 	ld	a, (#(_ball + 0x0002) + 0)
      000A9C 4F                    2717 	ld	c, a
      000A9D 17                    2718 	rla
      000A9E 9F                    2719 	sbc	a, a
      000A9F 47                    2720 	ld	b, a
      000AA0 AF                    2721 	xor	a, a
      000AA1 91                    2722 	sub	a, c
      000AA2 4F                    2723 	ld	c, a
      000AA3 3E 00                 2724 	ld	a, #0x00
      000AA5 98                    2725 	sbc	a, b
      000AA6 47                    2726 	ld	b, a
      000AA7 FAr1Cr00              2727 	ld	a, (#_chspeedflgdir)
      000AAA 5F                    2728 	ld	e, a
      000AAB 17                    2729 	rla
      000AAC 9F                    2730 	sbc	a, a
      000AAD 57                    2731 	ld	d, a
      000AAE 7B                    2732 	ld	a, e
      000AAF 91                    2733 	sub	a, c
      000AB0 C0                    2734 	ret	NZ
      000AB1 7A                    2735 	ld	a, d
      000AB2 90                    2736 	sub	a, b
      000AB3 C0                    2737 	ret	NZ
                                   2738 ;main.c:217: paddlehitscnt++;
      000AB4 21r1Dr00              2739 	ld	hl, #_paddlehitscnt
      000AB7 34                    2740 	inc	(hl)
                                   2741 ;main.c:218: chspeedflgdir = ball.speedx; // New ball horizontal direction
      000AB8 FAr10r00              2742 	ld	a, (#(_ball + 0x0002) + 0)
      000ABB EAr1Cr00              2743 	ld	(#_chspeedflgdir),a
                                   2744 ;main.c:219: if(speedind != 3 && paddlehitscnt == speedchframes[speedind]) {
      000ABE FAr1Er00              2745 	ld	a, (#_speedind)
      000AC1 D6 03                 2746 	sub	a, #0x03
      000AC3 C8                    2747 	ret	Z
      000AC4 01rF6r04              2748 	ld	bc, #_speedchframes+0
      000AC7 79                    2749 	ld	a, c
      000AC8 21r1Er00              2750 	ld	hl, #_speedind
      000ACB 86                    2751 	add	a, (hl)
      000ACC 4F                    2752 	ld	c, a
      000ACD 30 01                 2753 	jr	NC, 00126$
      000ACF 04                    2754 	inc	b
      000AD0                       2755 00126$:
      000AD0 0A                    2756 	ld	a, (bc)
      000AD1 4F                    2757 	ld	c, a
      000AD2 FAr1Dr00              2758 	ld	a, (#_paddlehitscnt)
      000AD5 91                    2759 	sub	a, c
      000AD6 C0                    2760 	ret	NZ
                                   2761 ;main.c:220: speedind++; // Checking for next speed threshold
      000AD7 21r1Er00              2762 	ld	hl, #_speedind
      000ADA 34                    2763 	inc	(hl)
                                   2764 ;main.c:221: ballmvframe--; // Speed up
      000ADB 21r01r00              2765 	ld	hl, #_ballmvframe
      000ADE 35                    2766 	dec	(hl)
                                   2767 ;main.c:222: framecnt--; // Preventing overflow when calculating next framecnt
      000ADF 21r00r00              2768 	ld	hl, #_framecnt
      000AE2 35                    2769 	dec	(hl)
                                   2770 ;main.c:225: }
      000AE3 C9                    2771 	ret
                                   2772 ;main.c:228: void upd_number_tiles_arr(UINT8 num) { // Updates numtiles array for displaying purposes
                                   2773 ;	---------------------------------
                                   2774 ; Function upd_number_tiles_arr
                                   2775 ; ---------------------------------
      000AE4                       2776 _upd_number_tiles_arr::
      000AE4 3B                    2777 	dec	sp
                                   2778 ;main.c:229: numtiles[0] = num / 100 == 0 ? 0 : (num / 100) + 3; // blank if num < 100
      000AE5 F8 03                 2779 	ldhl	sp,	#3
      000AE7 4E                    2780 	ld	c, (hl)
      000AE8 06 00                 2781 	ld	b, #0x00
      000AEA C5                    2782 	push	bc
      000AEB 21 64 00              2783 	ld	hl, #0x0064
      000AEE E5                    2784 	push	hl
      000AEF C5                    2785 	push	bc
      000AF0 CDr00r00              2786 	call	__divsint
      000AF3 E8 04                 2787 	add	sp, #4
      000AF5 C1                    2788 	pop	bc
      000AF6 7A                    2789 	ld	a, d
      000AF7 B3                    2790 	or	a, e
      000AF8 20 05                 2791 	jr	NZ, 00103$
      000AFA 11 00 00              2792 	ld	de, #0x0000
      000AFD 18 05                 2793 	jr	00104$
      000AFF                       2794 00103$:
      000AFF 7B                    2795 	ld	a, e
      000B00 C6 03                 2796 	add	a, #0x03
      000B02 5F                    2797 	ld	e, a
      000B03 17                    2798 	rla
      000B04                       2799 00104$:
      000B04 F8 00                 2800 	ldhl	sp,	#0
      000B06 73                    2801 	ld	(hl), e
      000B07 11r3Er00              2802 	ld	de, #_numtiles
      000B0A 7E                    2803 	ld	a, (hl)
      000B0B 12                    2804 	ld	(de), a
                                   2805 ;main.c:230: numtiles[1] = numtiles[0] == 0 && num / 10 % 10 == 0 ? 0 : (num / 10 % 10) + 3; // blank if num < 10
      000B0C C5                    2806 	push	bc
      000B0D 21 0A 00              2807 	ld	hl, #0x000a
      000B10 E5                    2808 	push	hl
      000B11 C5                    2809 	push	bc
      000B12 CDr00r00              2810 	call	__divsint
      000B15 E8 04                 2811 	add	sp, #4
      000B17 21 0A 00              2812 	ld	hl, #0x000a
      000B1A E5                    2813 	push	hl
      000B1B D5                    2814 	push	de
      000B1C CDr00r00              2815 	call	__modsint
      000B1F E8 04                 2816 	add	sp, #4
      000B21 C1                    2817 	pop	bc
      000B22 F8 00                 2818 	ldhl	sp,	#0
      000B24 7E                    2819 	ld	a, (hl)
      000B25 B7                    2820 	or	a, a
      000B26 20 09                 2821 	jr	NZ, 00105$
      000B28 7A                    2822 	ld	a, d
      000B29 B3                    2823 	or	a, e
      000B2A 20 05                 2824 	jr	NZ, 00105$
      000B2C 11 00 00              2825 	ld	de, #0x0000
      000B2F 18 05                 2826 	jr	00106$
      000B31                       2827 00105$:
      000B31 7B                    2828 	ld	a, e
      000B32 C6 03                 2829 	add	a, #0x03
      000B34 5F                    2830 	ld	e, a
      000B35 17                    2831 	rla
      000B36                       2832 00106$:
      000B36 7B                    2833 	ld	a, e
      000B37 EAr3Fr00              2834 	ld	(#(_numtiles + 0x0001)),a
                                   2835 ;main.c:231: numtiles[2] = num % 10 + 3;
      000B3A 21 0A 00              2836 	ld	hl, #0x000a
      000B3D E5                    2837 	push	hl
      000B3E C5                    2838 	push	bc
      000B3F CDr00r00              2839 	call	__modsint
      000B42 E8 04                 2840 	add	sp, #4
      000B44 7B                    2841 	ld	a, e
      000B45 C6 03                 2842 	add	a, #0x03
      000B47 EAr40r00              2843 	ld	(#(_numtiles + 0x0002)),a
                                   2844 ;main.c:232: }
      000B4A 33                    2845 	inc	sp
      000B4B C9                    2846 	ret
                                   2847 ;main.c:235: void trim_blank_num_tiles() { // Shifts values so that the blanks go to the back of the array
                                   2848 ;	---------------------------------
                                   2849 ; Function trim_blank_num_tiles
                                   2850 ; ---------------------------------
      000B4C                       2851 _trim_blank_num_tiles::
                                   2852 ;main.c:236: if(numtiles[0] == 0) {
      000B4C FAr3Er00              2853 	ld	a, (#_numtiles + 0)
      000B4F B7                    2854 	or	a, a
      000B50 C0                    2855 	ret	NZ
                                   2856 ;main.c:237: i = 1;
      000B51 21r14r00              2857 	ld	hl, #_i
      000B54 36 01                 2858 	ld	(hl), #0x01
                                   2859 ;main.c:238: while(numtiles[i] == 0) {
      000B56                       2860 00101$:
      000B56 3Er3E                 2861 	ld	a, #<(_numtiles)
      000B58 21r14r00              2862 	ld	hl, #_i
      000B5B 86                    2863 	add	a, (hl)
      000B5C 4F                    2864 	ld	c, a
      000B5D 3Es00                 2865 	ld	a, #>(_numtiles)
      000B5F CE 00                 2866 	adc	a, #0x00
      000B61 47                    2867 	ld	b, a
      000B62 0A                    2868 	ld	a, (bc)
      000B63 B7                    2869 	or	a, a
      000B64 20 03                 2870 	jr	NZ, 00103$
                                   2871 ;main.c:239: i++;
      000B66 34                    2872 	inc	(hl)
      000B67 18 ED                 2873 	jr	00101$
      000B69                       2874 00103$:
                                   2875 ;main.c:241: for(j = 0; i < 3; i++, j++) {
      000B69 21r15r00              2876 	ld	hl, #_j
      000B6C 36 00                 2877 	ld	(hl), #0x00
      000B6E                       2878 00108$:
      000B6E FAr14r00              2879 	ld	a, (#_i)
      000B71 D6 03                 2880 	sub	a, #0x03
      000B73 D0                    2881 	ret	NC
                                   2882 ;main.c:242: numtiles[j] = numtiles[i];
      000B74 3Er3E                 2883 	ld	a, #<(_numtiles)
      000B76 21r15r00              2884 	ld	hl, #_j
      000B79 86                    2885 	add	a, (hl)
      000B7A 4F                    2886 	ld	c, a
      000B7B 3Es00                 2887 	ld	a, #>(_numtiles)
      000B7D CE 00                 2888 	adc	a, #0x00
      000B7F 47                    2889 	ld	b, a
      000B80 3Er3E                 2890 	ld	a, #<(_numtiles)
      000B82 21r14r00              2891 	ld	hl, #_i
      000B85 86                    2892 	add	a, (hl)
      000B86 5F                    2893 	ld	e, a
      000B87 3Es00                 2894 	ld	a, #>(_numtiles)
      000B89 CE 00                 2895 	adc	a, #0x00
      000B8B 57                    2896 	ld	d, a
      000B8C 1A                    2897 	ld	a, (de)
      000B8D 02                    2898 	ld	(bc), a
                                   2899 ;main.c:243: numtiles[i] = 0;
      000B8E 3Er3E                 2900 	ld	a, #<(_numtiles)
      000B90 86                    2901 	add	a, (hl)
      000B91 4F                    2902 	ld	c, a
      000B92 3Es00                 2903 	ld	a, #>(_numtiles)
      000B94 CE 00                 2904 	adc	a, #0x00
      000B96 47                    2905 	ld	b, a
      000B97 AF                    2906 	xor	a, a
      000B98 02                    2907 	ld	(bc), a
                                   2908 ;main.c:241: for(j = 0; i < 3; i++, j++) {
      000B99 34                    2909 	inc	(hl)
      000B9A 21r15r00              2910 	ld	hl, #_j
      000B9D 34                    2911 	inc	(hl)
                                   2912 ;main.c:246: }
      000B9E 18 CE                 2913 	jr	00108$
                                   2914 ;main.c:249: void upd_round_tiles() {
                                   2915 ;	---------------------------------
                                   2916 ; Function upd_round_tiles
                                   2917 ; ---------------------------------
      000BA0                       2918 _upd_round_tiles::
                                   2919 ;main.c:250: upd_number_tiles_arr(roundcnt);
      000BA0 FAr20r00              2920 	ld	a, (#_roundcnt)
      000BA3 F5                    2921 	push	af
      000BA4 33                    2922 	inc	sp
      000BA5 CDrE4r0A              2923 	call	_upd_number_tiles_arr
      000BA8 33                    2924 	inc	sp
                                   2925 ;main.c:251: trim_blank_num_tiles();
      000BA9 CDr4Cr0B              2926 	call	_trim_blank_num_tiles
                                   2927 ;main.c:252: rounddispl[6] = numtiles[0];
      000BAC 01r3Br00              2928 	ld	bc, #_rounddispl + 6
      000BAF FAr3Er00              2929 	ld	a, (#_numtiles + 0)
      000BB2 02                    2930 	ld	(bc), a
                                   2931 ;main.c:253: rounddispl[7] = numtiles[1];
      000BB3 01r3Cr00              2932 	ld	bc, #_rounddispl + 7
      000BB6 FAr3Fr00              2933 	ld	a, (#(_numtiles + 0x0001) + 0)
      000BB9 02                    2934 	ld	(bc), a
                                   2935 ;main.c:254: rounddispl[8] = numtiles[2];
      000BBA 01r3Dr00              2936 	ld	bc, #_rounddispl + 8
      000BBD FAr40r00              2937 	ld	a, (#(_numtiles + 0x0002) + 0)
      000BC0 02                    2938 	ld	(bc), a
                                   2939 ;main.c:255: }
      000BC1 C9                    2940 	ret
                                   2941 ;main.c:258: void upd_score_tiles() {
                                   2942 ;	---------------------------------
                                   2943 ; Function upd_score_tiles
                                   2944 ; ---------------------------------
      000BC2                       2945 _upd_score_tiles::
                                   2946 ;main.c:259: upd_number_tiles_arr(pl1score);
      000BC2 FAr18r00              2947 	ld	a, (#_pl1score)
      000BC5 F5                    2948 	push	af
      000BC6 33                    2949 	inc	sp
      000BC7 CDrE4r0A              2950 	call	_upd_number_tiles_arr
      000BCA 33                    2951 	inc	sp
                                   2952 ;main.c:260: hud[6] = numtiles[0];
      000BCB 01r28r00              2953 	ld	bc, #_hud + 6
      000BCE FAr3Er00              2954 	ld	a, (#_numtiles + 0)
      000BD1 02                    2955 	ld	(bc), a
                                   2956 ;main.c:261: hud[7] = numtiles[1];
      000BD2 01r29r00              2957 	ld	bc, #_hud + 7
      000BD5 FAr3Fr00              2958 	ld	a, (#(_numtiles + 0x0001) + 0)
      000BD8 02                    2959 	ld	(bc), a
                                   2960 ;main.c:262: hud[8] = numtiles[2];
      000BD9 01r2Ar00              2961 	ld	bc, #_hud + 8
      000BDC FAr40r00              2962 	ld	a, (#(_numtiles + 0x0002) + 0)
      000BDF 02                    2963 	ld	(bc), a
                                   2964 ;main.c:264: upd_number_tiles_arr(cpuscore);
      000BE0 FAr19r00              2965 	ld	a, (#_cpuscore)
      000BE3 F5                    2966 	push	af
      000BE4 33                    2967 	inc	sp
      000BE5 CDrE4r0A              2968 	call	_upd_number_tiles_arr
      000BE8 33                    2969 	inc	sp
                                   2970 ;main.c:265: trim_blank_num_tiles();
      000BE9 CDr4Cr0B              2971 	call	_trim_blank_num_tiles
                                   2972 ;main.c:266: hud[10] = numtiles[0];
      000BEC 01r2Cr00              2973 	ld	bc, #_hud + 10
      000BEF FAr3Er00              2974 	ld	a, (#_numtiles + 0)
      000BF2 02                    2975 	ld	(bc), a
                                   2976 ;main.c:267: hud[11] = numtiles[1];
      000BF3 01r2Dr00              2977 	ld	bc, #_hud + 11
      000BF6 FAr3Fr00              2978 	ld	a, (#(_numtiles + 0x0001) + 0)
      000BF9 02                    2979 	ld	(bc), a
                                   2980 ;main.c:268: hud[12] = numtiles[2];
      000BFA 01r2Er00              2981 	ld	bc, #_hud + 12
      000BFD FAr40r00              2982 	ld	a, (#(_numtiles + 0x0002) + 0)
      000C00 02                    2983 	ld	(bc), a
                                   2984 ;main.c:269: }
      000C01 C9                    2985 	ret
                                   2986 ;main.c:272: void display_round_num() {
                                   2987 ;	---------------------------------
                                   2988 ; Function display_round_num
                                   2989 ; ---------------------------------
      000C02                       2990 _display_round_num::
                                   2991 ;main.c:273: rounddisploffset = roundcnt < 10 ? 0 : 1;
      000C02 FAr20r00              2992 	ld	a, (#_roundcnt)
      000C05 D6 0A                 2993 	sub	a, #0x0a
      000C07 30 05                 2994 	jr	NC, 00103$
      000C09 01 00 00              2995 	ld	bc, #0x0000
      000C0C 18 03                 2996 	jr	00104$
      000C0E                       2997 00103$:
      000C0E 01 01 00              2998 	ld	bc, #0x0001
      000C11                       2999 00104$:
      000C11 21r21r00              3000 	ld	hl, #_rounddisploffset
      000C14 71                    3001 	ld	(hl), c
                                   3002 ;main.c:274: set_bkg_tiles(7 - rounddisploffset, 5, 9, 1, rounddispl);
      000C15 01r35r00              3003 	ld	bc, #_rounddispl+0
      000C18 5E                    3004 	ld	e, (hl)
      000C19 3E 07                 3005 	ld	a, #0x07
      000C1B 93                    3006 	sub	a, e
      000C1C C5                    3007 	push	bc
      000C1D 26 01                 3008 	ld	h, #0x01
      000C1F E5                    3009 	push	hl
      000C20 33                    3010 	inc	sp
      000C21 26 09                 3011 	ld	h, #0x09
      000C23 E5                    3012 	push	hl
      000C24 33                    3013 	inc	sp
      000C25 26 05                 3014 	ld	h, #0x05
      000C27 E5                    3015 	push	hl
      000C28 33                    3016 	inc	sp
      000C29 F5                    3017 	push	af
      000C2A 33                    3018 	inc	sp
      000C2B CDr00r00              3019 	call	_set_bkg_tiles
      000C2E E8 06                 3020 	add	sp, #6
                                   3021 ;main.c:275: set_bkg_tiles(5, 12, 11, 1, presst);
      000C30 21rF9r04              3022 	ld	hl, #_presst
      000C33 E5                    3023 	push	hl
      000C34 11 0B 01              3024 	ld	de, #0x010b
      000C37 D5                    3025 	push	de
      000C38 11 05 0C              3026 	ld	de, #0x0c05
      000C3B D5                    3027 	push	de
      000C3C CDr00r00              3028 	call	_set_bkg_tiles
      000C3F E8 06                 3029 	add	sp, #6
                                   3030 ;main.c:276: }
      000C41 C9                    3031 	ret
                                   3032 ;main.c:279: void erase_round_num() {
                                   3033 ;	---------------------------------
                                   3034 ; Function erase_round_num
                                   3035 ; ---------------------------------
      000C42                       3036 _erase_round_num::
                                   3037 ;main.c:280: fill_bkg_rect(7 - rounddisploffset, 5, 9, 1, 0x00);
      000C42 21r21r00              3038 	ld	hl, #_rounddisploffset
      000C45 4E                    3039 	ld	c, (hl)
      000C46 3E 07                 3040 	ld	a, #0x07
      000C48 91                    3041 	sub	a, c
      000C49 26 00                 3042 	ld	h, #0x00
      000C4B E5                    3043 	push	hl
      000C4C 33                    3044 	inc	sp
      000C4D 26 01                 3045 	ld	h, #0x01
      000C4F E5                    3046 	push	hl
      000C50 33                    3047 	inc	sp
      000C51 26 09                 3048 	ld	h, #0x09
      000C53 E5                    3049 	push	hl
      000C54 33                    3050 	inc	sp
      000C55 26 05                 3051 	ld	h, #0x05
      000C57 E5                    3052 	push	hl
      000C58 33                    3053 	inc	sp
      000C59 F5                    3054 	push	af
      000C5A 33                    3055 	inc	sp
      000C5B CDr00r00              3056 	call	_fill_bkg_rect
      000C5E E8 05                 3057 	add	sp, #5
                                   3058 ;main.c:281: fill_bkg_rect(5, 12, 11, 1, 0x00);
      000C60 AF                    3059 	xor	a, a
      000C61 57                    3060 	ld	d,a
      000C62 1E 01                 3061 	ld	e,#0x01
      000C64 D5                    3062 	push	de
      000C65 11 0C 0B              3063 	ld	de, #0x0b0c
      000C68 D5                    3064 	push	de
      000C69 3E 05                 3065 	ld	a, #0x05
      000C6B F5                    3066 	push	af
      000C6C 33                    3067 	inc	sp
      000C6D CDr00r00              3068 	call	_fill_bkg_rect
      000C70 E8 05                 3069 	add	sp, #5
                                   3070 ;main.c:282: }
      000C72 C9                    3071 	ret
                                   3072 ;main.c:285: void upd_hud() {
                                   3073 ;	---------------------------------
                                   3074 ; Function upd_hud
                                   3075 ; ---------------------------------
      000C73                       3076 _upd_hud::
                                   3077 ;main.c:286: set_win_tiles(0, 0, 19, 1, hud);
      000C73 21r22r00              3078 	ld	hl, #_hud
      000C76 E5                    3079 	push	hl
      000C77 11 13 01              3080 	ld	de, #0x0113
      000C7A D5                    3081 	push	de
      000C7B AF                    3082 	xor	a, a
      000C7C F5                    3083 	push	af
      000C7D 33                    3084 	inc	sp
      000C7E AF                    3085 	xor	a, a
      000C7F F5                    3086 	push	af
      000C80 33                    3087 	inc	sp
      000C81 CDr00r00              3088 	call	_set_win_tiles
      000C84 E8 06                 3089 	add	sp, #6
                                   3090 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1015: WX_REG=x, WY_REG=y;
      000C86 3E 0C                 3091 	ld	a, #0x0c
      000C88 E0r00                 3092 	ldh	(_WX_REG+0),a
      000C8A 3E 86                 3093 	ld	a, #0x86
      000C8C E0r00                 3094 	ldh	(_WY_REG+0),a
                                   3095 ;main.c:287: move_win(12, 134);
                                   3096 ;main.c:288: }
      000C8E C9                    3097 	ret
                                   3098 ;main.c:291: void increment_score() {
                                   3099 ;	---------------------------------
                                   3100 ; Function increment_score
                                   3101 ; ---------------------------------
      000C8F                       3102 _increment_score::
                                   3103 ;main.c:292: if(ball.speedx < 0) { // Check the direction of the ball
      000C8F 21r10r00              3104 	ld	hl, #(_ball + 0x0002)
      000C92 CB 7E                 3105 	bit	7, (hl)
      000C94 28 05                 3106 	jr	Z, 00102$
                                   3107 ;main.c:293: cpuscore++;
      000C96 21r19r00              3108 	ld	hl, #_cpuscore
      000C99 34                    3109 	inc	(hl)
      000C9A C9                    3110 	ret
      000C9B                       3111 00102$:
                                   3112 ;main.c:295: pl1score++;
      000C9B 21r18r00              3113 	ld	hl, #_pl1score
      000C9E 34                    3114 	inc	(hl)
                                   3115 ;main.c:297: }
      000C9F C9                    3116 	ret
                                   3117 ;main.c:300: void init_game() {
                                   3118 ;	---------------------------------
                                   3119 ; Function init_game
                                   3120 ; ---------------------------------
      000CA0                       3121 _init_game::
                                   3122 ;main.c:301: set_playfield_bkg();
      000CA0 CDr00r00              3123 	call	_set_playfield_bkg
                                   3124 ;main.c:302: upd_hud();
      000CA3 CDr73r0C              3125 	call	_upd_hud
                                   3126 ;main.c:304: set_sprite_data(0, 5, pongspritetiles);
      000CA6 21r09r02              3127 	ld	hl, #_pongspritetiles
      000CA9 E5                    3128 	push	hl
      000CAA 3E 05                 3129 	ld	a, #0x05
      000CAC F5                    3130 	push	af
      000CAD 33                    3131 	inc	sp
      000CAE AF                    3132 	xor	a, a
      000CAF F5                    3133 	push	af
      000CB0 33                    3134 	inc	sp
      000CB1 CDr00r00              3135 	call	_set_sprite_data
      000CB4 E8 04                 3136 	add	sp, #4
                                   3137 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000CB6 21r02r00              3138 	ld	hl, #(_shadow_OAM + 0x0002)
      000CB9 36 04                 3139 	ld	(hl), #0x04
                                   3140 ;main.c:306: center_ball();
      000CBB CDr1Er05              3141 	call	_center_ball
                                   3142 ;main.c:310: padinity = 16 + (144 - (padheight * 8)) / 2;
      000CBE 21r02r00              3143 	ld	hl, #_padheight
      000CC1 6E                    3144 	ld	l, (hl)
      000CC2 26 00                 3145 	ld	h, #0x00
      000CC4 29                    3146 	add	hl, hl
      000CC5 29                    3147 	add	hl, hl
      000CC6 29                    3148 	add	hl, hl
      000CC7 3E 90                 3149 	ld	a, #0x90
      000CC9 95                    3150 	sub	a, l
      000CCA 6F                    3151 	ld	l, a
      000CCB 3E 00                 3152 	ld	a, #0x00
      000CCD 9C                    3153 	sbc	a, h
      000CCE 67                    3154 	ld	h, a
      000CCF 4D                    3155 	ld	c, l
      000CD0 44                    3156 	ld	b, h
      000CD1 CB 7C                 3157 	bit	7, h
      000CD3 28 03                 3158 	jr	Z, 00106$
      000CD5 23                    3159 	inc	hl
      000CD6 4D                    3160 	ld	c, l
      000CD7 44                    3161 	ld	b, h
      000CD8                       3162 00106$:
      000CD8 CB 28                 3163 	sra	b
      000CDA CB 19                 3164 	rr	c
      000CDC 79                    3165 	ld	a, c
      000CDD C6 10                 3166 	add	a, #0x10
      000CDF 21r07r00              3167 	ld	hl, #_padinity
      000CE2 77                    3168 	ld	(hl), a
                                   3169 ;main.c:311: init_paddle(&pdlpl1, 1, 16, padinity);
      000CE3 56                    3170 	ld	d, (hl)
      000CE4 1E 10                 3171 	ld	e,#0x10
      000CE6 D5                    3172 	push	de
      000CE7 3E 01                 3173 	ld	a, #0x01
      000CE9 F5                    3174 	push	af
      000CEA 33                    3175 	inc	sp
      000CEB 21r08r00              3176 	ld	hl, #_pdlpl1
      000CEE E5                    3177 	push	hl
      000CEF CDr22r06              3178 	call	_init_paddle
      000CF2 E8 05                 3179 	add	sp, #5
                                   3180 ;main.c:312: init_paddle(&pdlcpu, pdlpl1.firsttile + padheight, 152, padinity);
      000CF4 FAr0Ar00              3181 	ld	a, (#(_pdlpl1 + 0x0002) + 0)
      000CF7 21r02r00              3182 	ld	hl, #_padheight
      000CFA 86                    3183 	add	a, (hl)
      000CFB 47                    3184 	ld	b, a
      000CFC FAr07r00              3185 	ld	a, (#_padinity)
      000CFF 57                    3186 	ld	d,a
      000D00 1E 98                 3187 	ld	e,#0x98
      000D02 D5                    3188 	push	de
      000D03 C5                    3189 	push	bc
      000D04 33                    3190 	inc	sp
      000D05 21r0Br00              3191 	ld	hl, #_pdlcpu
      000D08 E5                    3192 	push	hl
      000D09 CDr22r06              3193 	call	_init_paddle
      000D0C E8 05                 3194 	add	sp, #5
                                   3195 ;main.c:313: set_pad_sectors();
      000D0E CDr35r07              3196 	call	_set_pad_sectors
                                   3197 ;main.c:315: pl1score = cpuscore = 0;
      000D11 21r19r00              3198 	ld	hl, #_cpuscore
      000D14 36 00                 3199 	ld	(hl), #0x00
      000D16 21r18r00              3200 	ld	hl, #_pl1score
      000D19 36 00                 3201 	ld	(hl), #0x00
                                   3202 ;main.c:316: roundcnt = 1;
      000D1B 21r20r00              3203 	ld	hl, #_roundcnt
      000D1E 36 01                 3204 	ld	(hl), #0x01
                                   3205 ;main.c:317: framecnt  = 0;
      000D20 21r00r00              3206 	ld	hl, #_framecnt
      000D23 36 00                 3207 	ld	(hl), #0x00
                                   3208 ;main.c:318: upd_score_tiles();
      000D25 CDrC2r0B              3209 	call	_upd_score_tiles
                                   3210 ;main.c:319: upd_round_tiles();
      000D28 CDrA0r0B              3211 	call	_upd_round_tiles
                                   3212 ;main.c:320: if(autospeedflg) {
      000D2B FAr1Br00              3213 	ld	a, (#_autospeedflg)
      000D2E B7                    3214 	or	a, a
      000D2F C8                    3215 	ret	Z
                                   3216 ;main.c:321: speedind = 0;
      000D30 21r1Er00              3217 	ld	hl, #_speedind
      000D33 36 00                 3218 	ld	(hl), #0x00
                                   3219 ;main.c:322: paddlehitscnt = 0;
      000D35 21r1Dr00              3220 	ld	hl, #_paddlehitscnt
      000D38 36 00                 3221 	ld	(hl), #0x00
                                   3222 ;main.c:323: ballmvframe = 4;
      000D3A 21r01r00              3223 	ld	hl, #_ballmvframe
      000D3D 36 04                 3224 	ld	(hl), #0x04
                                   3225 ;main.c:325: }
      000D3F C9                    3226 	ret
                                   3227 ;main.c:328: void prep_next_round() {
                                   3228 ;	---------------------------------
                                   3229 ; Function prep_next_round
                                   3230 ; ---------------------------------
      000D40                       3231 _prep_next_round::
                                   3232 ;main.c:331: scroll_paddle_tiles(&pdlpl1, padinity - pdlpl1.y);
      000D40 21r09r00              3233 	ld	hl, #(_pdlpl1 + 0x0001)
      000D43 4E                    3234 	ld	c, (hl)
      000D44 FAr07r00              3235 	ld	a, (#_padinity)
      000D47 91                    3236 	sub	a, c
      000D48 47                    3237 	ld	b, a
      000D49 C5                    3238 	push	bc
      000D4A 33                    3239 	inc	sp
      000D4B 21r08r00              3240 	ld	hl, #_pdlpl1
      000D4E E5                    3241 	push	hl
      000D4F CDr27r08              3242 	call	_scroll_paddle_tiles
      000D52 E8 03                 3243 	add	sp, #3
                                   3244 ;main.c:332: scroll_paddle_tiles(&pdlcpu, padinity - pdlcpu.y);
      000D54 21r0Cr00              3245 	ld	hl, #(_pdlcpu + 0x0001)
      000D57 4E                    3246 	ld	c, (hl)
      000D58 FAr07r00              3247 	ld	a, (#_padinity)
      000D5B 91                    3248 	sub	a, c
      000D5C 47                    3249 	ld	b, a
      000D5D C5                    3250 	push	bc
      000D5E 33                    3251 	inc	sp
      000D5F 21r0Br00              3252 	ld	hl, #_pdlcpu
      000D62 E5                    3253 	push	hl
      000D63 CDr27r08              3254 	call	_scroll_paddle_tiles
      000D66 E8 03                 3255 	add	sp, #3
                                   3256 ;main.c:333: pdlpl1.y = pdlcpu.y = padinity;
      000D68 11r0Cr00              3257 	ld	de, #(_pdlcpu + 0x0001)
      000D6B 21r07r00              3258 	ld	hl, #_padinity
      000D6E 7E                    3259 	ld	a, (hl)
      000D6F 12                    3260 	ld	(de), a
      000D70 11r09r00              3261 	ld	de, #(_pdlpl1 + 0x0001)
      000D73 7E                    3262 	ld	a, (hl)
      000D74 12                    3263 	ld	(de), a
                                   3264 ;main.c:334: roundcnt++;
      000D75 21r20r00              3265 	ld	hl, #_roundcnt
      000D78 34                    3266 	inc	(hl)
                                   3267 ;main.c:335: upd_round_tiles();
      000D79 CDrA0r0B              3268 	call	_upd_round_tiles
                                   3269 ;main.c:336: framecnt = 0;
      000D7C 21r00r00              3270 	ld	hl, #_framecnt
      000D7F 36 00                 3271 	ld	(hl), #0x00
                                   3272 ;main.c:338: center_ball();
      000D81 CDr1Er05              3273 	call	_center_ball
                                   3274 ;main.c:341: if(autospeedflg) {
      000D84 FAr1Br00              3275 	ld	a, (#_autospeedflg)
      000D87 B7                    3276 	or	a, a
      000D88 C8                    3277 	ret	Z
                                   3278 ;main.c:342: speedind = 1;
      000D89 21r1Er00              3279 	ld	hl, #_speedind
      000D8C 36 01                 3280 	ld	(hl), #0x01
                                   3281 ;main.c:343: ballmvframe = 3;
      000D8E 21r01r00              3282 	ld	hl, #_ballmvframe
      000D91 36 03                 3283 	ld	(hl), #0x03
                                   3284 ;main.c:344: paddlehitscnt = speedchframes[0];
      000D93 FArF6r04              3285 	ld	a, (#_speedchframes + 0)
      000D96 EAr1Dr00              3286 	ld	(#_paddlehitscnt),a
                                   3287 ;main.c:346: }
      000D99 C9                    3288 	ret
                                   3289 ;main.c:349: UBYTE is_round_over() {
                                   3290 ;	---------------------------------
                                   3291 ; Function is_round_over
                                   3292 ; ---------------------------------
      000D9A                       3293 _is_round_over::
      000D9A E8 FE                 3294 	add	sp, #-2
                                   3295 ;main.c:350: return ball.x + 8 < pdlpl1.x - 8 || ball.x > pdlcpu.x + 16;
      000D9C FAr0Er00              3296 	ld	a, (#_ball + 0)
      000D9F F8 00                 3297 	ldhl	sp,	#0
      000DA1 77                    3298 	ld	(hl), a
      000DA2 AF                    3299 	xor	a, a
      000DA3 23                    3300 	inc	hl
      000DA4 77                    3301 	ld	(hl), a
                                   3302 ;c
      000DA5 D1                    3303 	pop	de
      000DA6 D5                    3304 	push	de
      000DA7 21 08 00              3305 	ld	hl, #0x0008
      000DAA 19                    3306 	add	hl, de
      000DAB 4D                    3307 	ld	c, l
      000DAC 44                    3308 	ld	b, h
      000DAD FAr08r00              3309 	ld	a, (#_pdlpl1 + 0)
      000DB0 1E 00                 3310 	ld	e, #0x00
      000DB2 C6 F8                 3311 	add	a, #0xf8
      000DB4 6F                    3312 	ld	l, a
      000DB5 7B                    3313 	ld	a, e
      000DB6 CE FF                 3314 	adc	a, #0xff
      000DB8 67                    3315 	ld	h, a
      000DB9 5C                    3316 	ld	e, h
      000DBA 50                    3317 	ld	d, b
      000DBB 79                    3318 	ld	a, c
      000DBC 95                    3319 	sub	a, l
      000DBD 78                    3320 	ld	a, b
      000DBE 9C                    3321 	sbc	a, h
      000DBF CB 7B                 3322 	bit	7, e
      000DC1 28 07                 3323 	jr	Z, 00116$
      000DC3 CB 7A                 3324 	bit	7, d
      000DC5 20 08                 3325 	jr	NZ, 00117$
      000DC7 BF                    3326 	cp	a, a
      000DC8 18 05                 3327 	jr	00117$
      000DCA                       3328 00116$:
      000DCA CB 7A                 3329 	bit	7, d
      000DCC 28 01                 3330 	jr	Z, 00117$
      000DCE 37                    3331 	scf
      000DCF                       3332 00117$:
      000DCF 38 2A                 3333 	jr	C, 00104$
      000DD1 FAr0Br00              3334 	ld	a, (#_pdlcpu + 0)
      000DD4 0E 00                 3335 	ld	c, #0x00
      000DD6 C6 10                 3336 	add	a, #0x10
      000DD8 47                    3337 	ld	b, a
      000DD9 30 01                 3338 	jr	NC, 00118$
      000DDB 0C                    3339 	inc	c
      000DDC                       3340 00118$:
      000DDC F8 00                 3341 	ldhl	sp,	#0
      000DDE 78                    3342 	ld	a, b
      000DDF 96                    3343 	sub	a, (hl)
      000DE0 23                    3344 	inc	hl
      000DE1 79                    3345 	ld	a, c
      000DE2 9E                    3346 	sbc	a, (hl)
      000DE3 79                    3347 	ld	a, c
      000DE4 57                    3348 	ld	d, a
      000DE5 CB 7E                 3349 	bit	7, (hl)
      000DE7 28 07                 3350 	jr	Z, 00119$
      000DE9 CB 7A                 3351 	bit	7, d
      000DEB 20 08                 3352 	jr	NZ, 00120$
      000DED BF                    3353 	cp	a, a
      000DEE 18 05                 3354 	jr	00120$
      000DF0                       3355 00119$:
      000DF0 CB 7A                 3356 	bit	7, d
      000DF2 28 01                 3357 	jr	Z, 00120$
      000DF4 37                    3358 	scf
      000DF5                       3359 00120$:
      000DF5 38 04                 3360 	jr	C, 00104$
      000DF7 1E 00                 3361 	ld	e, #0x00
      000DF9 18 02                 3362 	jr	00105$
      000DFB                       3363 00104$:
      000DFB 1E 01                 3364 	ld	e, #0x01
      000DFD                       3365 00105$:
                                   3366 ;main.c:351: }
      000DFD E8 02                 3367 	add	sp, #2
      000DFF C9                    3368 	ret
                                   3369 ;main.c:354: void begin_round() {
                                   3370 ;	---------------------------------
                                   3371 ; Function begin_round
                                   3372 ; ---------------------------------
      000E00                       3373 _begin_round::
                                   3374 ;main.c:356: display_round_num();
      000E00 CDr02r0C              3375 	call	_display_round_num
                                   3376 ;main.c:357: while(1) {  // Start round or return to titlescreen
      000E03                       3377 00107$:
                                   3378 ;main.c:358: initrand(DIV_REG);
      000E03 F0r00                 3379 	ldh	a, (_DIV_REG+0)
      000E05 4F                    3380 	ld	c, a
      000E06 06 00                 3381 	ld	b, #0x00
      000E08 C5                    3382 	push	bc
      000E09 CDr00r00              3383 	call	_initrand
      000E0C E8 02                 3384 	add	sp, #2
                                   3385 ;main.c:359: if(joypad() & J_START) {
      000E0E CDr00r00              3386 	call	_joypad
      000E11 7B                    3387 	ld	a, e
      000E12 07                    3388 	rlca
      000E13 30 05                 3389 	jr	NC, 00104$
                                   3390 ;main.c:360: erase_round_num();
      000E15 CDr42r0C              3391 	call	_erase_round_num
                                   3392 ;main.c:361: break;
      000E18 18 0D                 3393 	jr	00108$
      000E1A                       3394 00104$:
                                   3395 ;main.c:362: } else if(joypad() & J_SELECT) {
      000E1A CDr00r00              3396 	call	_joypad
      000E1D CB 73                 3397 	bit	6, e
      000E1F 28 E2                 3398 	jr	Z, 00107$
                                   3399 ;main.c:363: exitgameflg = 1;
      000E21 21r1Ar00              3400 	ld	hl, #_exitgameflg
      000E24 36 01                 3401 	ld	(hl), #0x01
                                   3402 ;main.c:364: return;
      000E26 C9                    3403 	ret
      000E27                       3404 00108$:
                                   3405 ;main.c:368: randindx = rand() % 2; // Random number between 0 and 1
      000E27 CDr00r00              3406 	call	_rand
      000E2A 7B                    3407 	ld	a, e
      000E2B 17                    3408 	rla
      000E2C 9F                    3409 	sbc	a, a
      000E2D 57                    3410 	ld	d, a
      000E2E 21 02 00              3411 	ld	hl, #0x0002
      000E31 E5                    3412 	push	hl
      000E32 D5                    3413 	push	de
      000E33 CDr00r00              3414 	call	__modsint
      000E36 E8 04                 3415 	add	sp, #4
      000E38 21r16r00              3416 	ld	hl, #_randindx
      000E3B 73                    3417 	ld	(hl), e
                                   3418 ;main.c:369: initrand(DIV_REG);
      000E3C F0r00                 3419 	ldh	a, (_DIV_REG+0)
      000E3E 4F                    3420 	ld	c, a
      000E3F 06 00                 3421 	ld	b, #0x00
      000E41 C5                    3422 	push	bc
      000E42 CDr00r00              3423 	call	_initrand
      000E45 E8 02                 3424 	add	sp, #2
                                   3425 ;main.c:370: randindy = rand() % 5; // Random number between 0 and 4
      000E47 CDr00r00              3426 	call	_rand
      000E4A 7B                    3427 	ld	a, e
      000E4B 17                    3428 	rla
      000E4C 9F                    3429 	sbc	a, a
      000E4D 57                    3430 	ld	d, a
      000E4E 21 05 00              3431 	ld	hl, #0x0005
      000E51 E5                    3432 	push	hl
      000E52 D5                    3433 	push	de
      000E53 CDr00r00              3434 	call	__modsint
      000E56 E8 04                 3435 	add	sp, #4
      000E58 21r17r00              3436 	ld	hl, #_randindy
      000E5B 73                    3437 	ld	(hl), e
                                   3438 ;main.c:371: ball.speedx = stspeedpoolx[randindx];
      000E5C 01rEDr04              3439 	ld	bc, #_stspeedpoolx+0
      000E5F 79                    3440 	ld	a, c
      000E60 21r16r00              3441 	ld	hl, #_randindx
      000E63 86                    3442 	add	a, (hl)
      000E64 4F                    3443 	ld	c, a
      000E65 30 01                 3444 	jr	NC, 00177$
      000E67 04                    3445 	inc	b
      000E68                       3446 00177$:
      000E68 0A                    3447 	ld	a, (bc)
      000E69 4F                    3448 	ld	c, a
      000E6A 21r10r00              3449 	ld	hl, #(_ball + 0x0002)
      000E6D 71                    3450 	ld	(hl), c
                                   3451 ;main.c:372: ball.speedy = stspeedpooly[randindy];
      000E6E 11rEFr04              3452 	ld	de, #_stspeedpooly+0
      000E71 7B                    3453 	ld	a, e
      000E72 21r17r00              3454 	ld	hl, #_randindy
      000E75 86                    3455 	add	a, (hl)
      000E76 5F                    3456 	ld	e, a
      000E77 30 01                 3457 	jr	NC, 00178$
      000E79 14                    3458 	inc	d
      000E7A                       3459 00178$:
      000E7A 1A                    3460 	ld	a, (de)
      000E7B EAr11r00              3461 	ld	(#(_ball + 0x0003)),a
                                   3462 ;main.c:373: chspeedflgdir = ball.speedx;
      000E7E 21r1Cr00              3463 	ld	hl, #_chspeedflgdir
      000E81 71                    3464 	ld	(hl), c
                                   3465 ;main.c:375: while(1) {
      000E82                       3466 00119$:
                                   3467 ;main.c:376: if(autospeedflg) {
      000E82 FAr1Br00              3468 	ld	a, (#_autospeedflg)
      000E85 B7                    3469 	or	a, a
      000E86 28 03                 3470 	jr	Z, 00110$
                                   3471 ;main.c:377: auto_speed_adj();
      000E88 CDr99r0A              3472 	call	_auto_speed_adj
      000E8B                       3473 00110$:
                                   3474 ;main.c:380: framecnt += framecnt != ballmvframe ? 1 : -ballmvframe + 1; // Resetting the frame counter
      000E8B FAr00r00              3475 	ld	a, (#_framecnt)
      000E8E 21r01r00              3476 	ld	hl, #_ballmvframe
      000E91 96                    3477 	sub	a, (hl)
      000E92 28 05                 3478 	jr	Z, 00123$
      000E94 01 01 00              3479 	ld	bc, #0x0001
      000E97 18 09                 3480 	jr	00124$
      000E99                       3481 00123$:
      000E99 AF                    3482 	xor	a, a
      000E9A 21r01r00              3483 	ld	hl, #_ballmvframe
      000E9D 96                    3484 	sub	a, (hl)
      000E9E 4F                    3485 	ld	c, a
      000E9F 0C                    3486 	inc	c
      000EA0 79                    3487 	ld	a, c
      000EA1 17                    3488 	rla
      000EA2                       3489 00124$:
      000EA2 21r00r00              3490 	ld	hl, #_framecnt
      000EA5 7E                    3491 	ld	a, (hl)
      000EA6 81                    3492 	add	a, c
      000EA7 77                    3493 	ld	(hl), a
                                   3494 ;main.c:382: switch(joypad()) {
      000EA8 CDr00r00              3495 	call	_joypad
      000EAB 7B                    3496 	ld	a, e
      000EAC FE 04                 3497 	cp	a, #0x04
      000EAE 28 06                 3498 	jr	Z, 00111$
      000EB0 D6 08                 3499 	sub	a, #0x08
      000EB2 28 15                 3500 	jr	Z, 00112$
      000EB4 18 21                 3501 	jr	00113$
                                   3502 ;main.c:383: case J_UP:
      000EB6                       3503 00111$:
                                   3504 ;main.c:384: move_paddle(&pdlpl1, -padspeed);
      000EB6 AF                    3505 	xor	a, a
      000EB7 21r03r00              3506 	ld	hl, #_padspeed
      000EBA 96                    3507 	sub	a, (hl)
      000EBB 47                    3508 	ld	b, a
      000EBC C5                    3509 	push	bc
      000EBD 33                    3510 	inc	sp
      000EBE 21r08r00              3511 	ld	hl, #_pdlpl1
      000EC1 E5                    3512 	push	hl
      000EC2 CDr4Er07              3513 	call	_move_paddle
      000EC5 E8 03                 3514 	add	sp, #3
                                   3515 ;main.c:385: break;
      000EC7 18 0E                 3516 	jr	00113$
                                   3517 ;main.c:386: case J_DOWN:
      000EC9                       3518 00112$:
                                   3519 ;main.c:387: move_paddle(&pdlpl1, padspeed);
      000EC9 FAr03r00              3520 	ld	a, (#_padspeed)
      000ECC F5                    3521 	push	af
      000ECD 33                    3522 	inc	sp
      000ECE 21r08r00              3523 	ld	hl, #_pdlpl1
      000ED1 E5                    3524 	push	hl
      000ED2 CDr4Er07              3525 	call	_move_paddle
      000ED5 E8 03                 3526 	add	sp, #3
                                   3527 ;main.c:389: }
      000ED7                       3528 00113$:
                                   3529 ;main.c:391: if(framecnt == ballmvframe) {
      000ED7 FAr00r00              3530 	ld	a, (#_framecnt)
      000EDA 21r01r00              3531 	ld	hl, #_ballmvframe
      000EDD 96                    3532 	sub	a, (hl)
      000EDE 20 0D                 3533 	jr	NZ, 00115$
                                   3534 ;main.c:392: move_ball(&pdlpl1, &pdlcpu);
      000EE0 21r0Br00              3535 	ld	hl, #_pdlcpu
      000EE3 E5                    3536 	push	hl
      000EE4 21r08r00              3537 	ld	hl, #_pdlpl1
      000EE7 E5                    3538 	push	hl
      000EE8 CDr35r05              3539 	call	_move_ball
      000EEB E8 04                 3540 	add	sp, #4
      000EED                       3541 00115$:
                                   3542 ;main.c:395: action_cpu();
      000EED CDr58r0A              3543 	call	_action_cpu
                                   3544 ;main.c:396: if(is_round_over()) {
      000EF0 CDr9Ar0D              3545 	call	_is_round_over
      000EF3 7B                    3546 	ld	a, e
      000EF4 B7                    3547 	or	a, a
      000EF5 28 09                 3548 	jr	Z, 00117$
                                   3549 ;main.c:397: increment_score();
      000EF7 CDr8Fr0C              3550 	call	_increment_score
                                   3551 ;main.c:398: upd_score_tiles();
      000EFA CDrC2r0B              3552 	call	_upd_score_tiles
                                   3553 ;main.c:399: upd_hud();
                                   3554 ;main.c:400: break;
      000EFD C3r73r0C              3555 	jp  _upd_hud
      000F00                       3556 00117$:
                                   3557 ;main.c:402: wait_vbl_done();
      000F00 CDr00r00              3558 	call	_wait_vbl_done
                                   3559 ;main.c:404: }
      000F03 C3r82r0E              3560 	jp	00119$
                                   3561 ;main.c:407: void start_game() {
                                   3562 ;	---------------------------------
                                   3563 ; Function start_game
                                   3564 ; ---------------------------------
      000F06                       3565 _start_game::
                                   3566 ;main.c:409: exitgameflg = 0;
      000F06 21r1Ar00              3567 	ld	hl, #_exitgameflg
      000F09 36 00                 3568 	ld	(hl), #0x00
                                   3569 ;main.c:410: init_game();
      000F0B CDrA0r0C              3570 	call	_init_game
                                   3571 ;main.c:411: SHOW_WIN;
      000F0E F0r00                 3572 	ldh	a, (_LCDC_REG+0)
      000F10 F6 20                 3573 	or	a, #0x20
      000F12 E0r00                 3574 	ldh	(_LCDC_REG+0),a
                                   3575 ;main.c:412: while(1) {
      000F14                       3576 00105$:
                                   3577 ;main.c:413: begin_round();
      000F14 CDr00r0E              3578 	call	_begin_round
                                   3579 ;main.c:414: if(exitgameflg || roundcnt == roundlimit) {
      000F17 FAr1Ar00              3580 	ld	a, (#_exitgameflg)
      000F1A B7                    3581 	or	a, a
      000F1B C0                    3582 	ret	NZ
      000F1C FAr20r00              3583 	ld	a, (#_roundcnt)
      000F1F 21r1Fr00              3584 	ld	hl, #_roundlimit
      000F22 96                    3585 	sub	a, (hl)
      000F23 C8                    3586 	ret	Z
                                   3587 ;main.c:417: prep_next_round();
      000F24 CDr40r0D              3588 	call	_prep_next_round
                                   3589 ;main.c:419: }
      000F27 18 EB                 3590 	jr	00105$
                                   3591 ;main.c:422: void main() {
                                   3592 ;	---------------------------------
                                   3593 ; Function main
                                   3594 ; ---------------------------------
      000F29                       3595 _main::
                                   3596 ;main.c:424: DISPLAY_ON;
      000F29 F0r00                 3597 	ldh	a, (_LCDC_REG+0)
      000F2B F6 80                 3598 	or	a, #0x80
      000F2D E0r00                 3599 	ldh	(_LCDC_REG+0),a
                                   3600 ;main.c:425: SHOW_BKG;
      000F2F F0r00                 3601 	ldh	a, (_LCDC_REG+0)
      000F31 F6 01                 3602 	or	a, #0x01
      000F33 E0r00                 3603 	ldh	(_LCDC_REG+0),a
                                   3604 ;main.c:426: SHOW_SPRITES;
      000F35 F0r00                 3605 	ldh	a, (_LCDC_REG+0)
      000F37 F6 02                 3606 	or	a, #0x02
      000F39 E0r00                 3607 	ldh	(_LCDC_REG+0),a
                                   3608 ;main.c:428: default_settings();
      000F3B CDr04r05              3609 	call	_default_settings
                                   3610 ;main.c:429: start_game();
                                   3611 ;main.c:431: }
      000F3E C3r06r0F              3612 	jp  _start_game
                                   3613 	.area _CODE
                                   3614 	.area _CABS (ABS)
