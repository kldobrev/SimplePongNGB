                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.1.0 #12072 (MINGW32)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _action_cpu
                                     13 	.globl _rand
                                     14 	.globl _initrand
                                     15 	.globl _set_sprite_data
                                     16 	.globl _set_bkg_tiles
                                     17 	.globl _set_bkg_data
                                     18 	.globl _wait_vbl_done
                                     19 	.globl _joypad
                                     20 	.globl _randindy
                                     21 	.globl _randindx
                                     22 	.globl _itr
                                     23 	.globl _difficulty
                                     24 	.globl _tileind
                                     25 	.globl _pdlcpu
                                     26 	.globl _pdlpl1
                                     27 	.globl _padsectors
                                     28 	.globl _padspeed
                                     29 	.globl _padheight
                                     30 	.globl _ballmvframe
                                     31 	.globl _framecnt
                                     32 	.globl _ballposy
                                     33 	.globl _ballposx
                                     34 	.globl _ballspeedy
                                     35 	.globl _ballspeedx
                                     36 	.globl _bkgborderdown
                                     37 	.globl _bkgborderup
                                     38 	.globl _stspeedpooly
                                     39 	.globl _stspeedpoolx
                                     40 	.globl _difficulty_px
                                     41 	.globl _pongspritetiles
                                     42 	.globl _ponggamemap
                                     43 	.globl _pongbkgtiles
                                     44 	.globl _set_pad_sectors
                                     45 	.globl _hits_walls
                                     46 	.globl _hits_paddle
                                     47 	.globl _get_bounce_off_dir_y
                                     48 	.globl _move_ball
                                     49 	.globl _init_paddle
                                     50 	.globl _scroll_paddle_tiles
                                     51 	.globl _move_paddle
                                     52 	.globl _init_playfield
                                     53 	.globl _begin_round
                                     54 	.globl _auto_speed_adj
                                     55 	.globl _manual_speed_adj
                                     56 ;--------------------------------------------------------
                                     57 ; special function registers
                                     58 ;--------------------------------------------------------
                                     59 ;--------------------------------------------------------
                                     60 ; ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area _DATA
      000000                         63 _ballspeedx::
      000000                         64 	.ds 1
      000001                         65 _ballspeedy::
      000001                         66 	.ds 1
      000002                         67 _ballposx::
      000002                         68 	.ds 1
      000003                         69 _ballposy::
      000003                         70 	.ds 1
      000004                         71 _framecnt::
      000004                         72 	.ds 1
      000005                         73 _ballmvframe::
      000005                         74 	.ds 1
      000006                         75 _padheight::
      000006                         76 	.ds 1
      000007                         77 _padspeed::
      000007                         78 	.ds 1
      000008                         79 _padsectors::
      000008                         80 	.ds 3
      00000B                         81 _pdlpl1::
      00000B                         82 	.ds 3
      00000E                         83 _pdlcpu::
      00000E                         84 	.ds 3
      000011                         85 _tileind::
      000011                         86 	.ds 1
      000012                         87 _difficulty::
      000012                         88 	.ds 1
      000013                         89 _itr::
      000013                         90 	.ds 1
      000014                         91 _randindx::
      000014                         92 	.ds 1
      000015                         93 _randindy::
      000015                         94 	.ds 1
                                     95 ;--------------------------------------------------------
                                     96 ; absolute external ram data
                                     97 ;--------------------------------------------------------
                                     98 	.area _DABS (ABS)
                                     99 ;--------------------------------------------------------
                                    100 ; global & static initialisations
                                    101 ;--------------------------------------------------------
                                    102 	.area _HOME
                                    103 	.area _GSINIT
                                    104 	.area _GSFINAL
                                    105 	.area _GSINIT
                                    106 ;main.c:11: UINT8 ballposx = 84;
      000000 21r02r00               107 	ld	hl, #_ballposx
      000003 36 54                  108 	ld	(hl), #0x54
                                    109 ;main.c:12: UINT8 ballposy = 84;
      000005 21r03r00               110 	ld	hl, #_ballposy
      000008 36 54                  111 	ld	(hl), #0x54
                                    112 ;main.c:13: UINT8 framecnt = 0;
      00000A 21r04r00               113 	ld	hl, #_framecnt
      00000D 36 00                  114 	ld	(hl), #0x00
                                    115 ;main.c:14: UINT8 ballmvframe = 4; // controlls the ball's speed
      00000F 21r05r00               116 	ld	hl, #_ballmvframe
      000012 36 04                  117 	ld	(hl), #0x04
                                    118 ;main.c:15: UINT8 padheight = 4;
      000014 21r06r00               119 	ld	hl, #_padheight
      000017 36 04                  120 	ld	(hl), #0x04
                                    121 ;main.c:16: UINT8 padspeed = 3; // Normal is 3, slow is 2, fast is 4
      000019 21r07r00               122 	ld	hl, #_padspeed
      00001C 36 03                  123 	ld	(hl), #0x03
                                    124 ;main.c:20: UINT8 tileind = 0;
      00001E 21r11r00               125 	ld	hl, #_tileind
      000021 36 00                  126 	ld	(hl), #0x00
                                    127 ;main.c:21: UINT8 difficulty = 0; // 0 - easy, 1 - normal, 2 - hard
      000023 21r12r00               128 	ld	hl, #_difficulty
      000026 36 00                  129 	ld	(hl), #0x00
                                    130 ;--------------------------------------------------------
                                    131 ; Home
                                    132 ;--------------------------------------------------------
                                    133 	.area _HOME
                                    134 	.area _HOME
                                    135 ;--------------------------------------------------------
                                    136 ; code
                                    137 ;--------------------------------------------------------
                                    138 	.area _CODE
                                    139 ;main.c:44: void set_pad_sectors() {
                                    140 ;	---------------------------------
                                    141 ; Function set_pad_sectors
                                    142 ; ---------------------------------
      000000                        143 _set_pad_sectors::
                                    144 ;main.c:47: padsectors[0] = padheight * 2; // 25%
      000000 01r08r00               145 	ld	bc, #_padsectors+0
      000003 21r06r00               146 	ld	hl, #_padheight
      000006 7E                     147 	ld	a, (hl)
      000007 87                     148 	add	a, a
      000008 02                     149 	ld	(bc), a
                                    150 ;main.c:48: padsectors[1] = padheight * 4; // 50%
      000009 59                     151 	ld	e, c
      00000A 50                     152 	ld	d, b
      00000B 13                     153 	inc	de
      00000C 7E                     154 	ld	a, (hl)
      00000D 87                     155 	add	a, a
      00000E 87                     156 	add	a, a
      00000F 12                     157 	ld	(de), a
                                    158 ;main.c:49: padsectors[2] = padheight * 6; // 75%
      000010 03                     159 	inc	bc
      000011 03                     160 	inc	bc
      000012 7E                     161 	ld	a, (hl)
      000013 5F                     162 	ld	e, a
      000014 87                     163 	add	a, a
      000015 83                     164 	add	a, e
      000016 87                     165 	add	a, a
      000017 02                     166 	ld	(bc), a
                                    167 ;main.c:50: }
      000018 C9                     168 	ret
      000019                        169 _pongbkgtiles:
      000019 00                     170 	.db #0x00	; 0
      00001A 00                     171 	.db #0x00	; 0
      00001B 00                     172 	.db #0x00	; 0
      00001C 00                     173 	.db #0x00	; 0
      00001D 00                     174 	.db #0x00	; 0
      00001E 00                     175 	.db #0x00	; 0
      00001F 00                     176 	.db #0x00	; 0
      000020 00                     177 	.db #0x00	; 0
      000021 00                     178 	.db #0x00	; 0
      000022 00                     179 	.db #0x00	; 0
      000023 00                     180 	.db #0x00	; 0
      000024 00                     181 	.db #0x00	; 0
      000025 00                     182 	.db #0x00	; 0
      000026 00                     183 	.db #0x00	; 0
      000027 00                     184 	.db #0x00	; 0
      000028 00                     185 	.db #0x00	; 0
      000029 00                     186 	.db #0x00	; 0
      00002A 00                     187 	.db #0x00	; 0
      00002B 00                     188 	.db #0x00	; 0
      00002C 00                     189 	.db #0x00	; 0
      00002D 00                     190 	.db #0x00	; 0
      00002E 00                     191 	.db #0x00	; 0
      00002F 00                     192 	.db #0x00	; 0
      000030 00                     193 	.db #0x00	; 0
      000031 00                     194 	.db #0x00	; 0
      000032 00                     195 	.db #0x00	; 0
      000033 FF                     196 	.db #0xff	; 255
      000034 00                     197 	.db #0x00	; 0
      000035 00                     198 	.db #0x00	; 0
      000036 FF                     199 	.db #0xff	; 255
      000037 FF                     200 	.db #0xff	; 255
      000038 FF                     201 	.db #0xff	; 255
      000039 FF                     202 	.db #0xff	; 255
      00003A FF                     203 	.db #0xff	; 255
      00003B 00                     204 	.db #0x00	; 0
      00003C FF                     205 	.db #0xff	; 255
      00003D FF                     206 	.db #0xff	; 255
      00003E 00                     207 	.db #0x00	; 0
      00003F 00                     208 	.db #0x00	; 0
      000040 00                     209 	.db #0x00	; 0
      000041 00                     210 	.db #0x00	; 0
      000042 00                     211 	.db #0x00	; 0
      000043 00                     212 	.db #0x00	; 0
      000044 00                     213 	.db #0x00	; 0
      000045 00                     214 	.db #0x00	; 0
      000046 00                     215 	.db #0x00	; 0
      000047 00                     216 	.db #0x00	; 0
      000048 00                     217 	.db #0x00	; 0
      000049 00                     218 	.db #0x00	; 0
      00004A 01                     219 	.db #0x01	; 1
      00004B 01                     220 	.db #0x01	; 1
      00004C 02                     221 	.db #0x02	; 2
      00004D 03                     222 	.db #0x03	; 3
      00004E 04                     223 	.db #0x04	; 4
      00004F 07                     224 	.db #0x07	; 7
      000050 08                     225 	.db #0x08	; 8
      000051 0F                     226 	.db #0x0f	; 15
      000052 10                     227 	.db #0x10	; 16
      000053 1E                     228 	.db #0x1e	; 30
      000054 21                     229 	.db #0x21	; 33
      000055 3C                     230 	.db #0x3c	; 60
      000056 43                     231 	.db #0x43	; 67	'C'
      000057 79                     232 	.db #0x79	; 121	'y'
      000058 86                     233 	.db #0x86	; 134
      000059 00                     234 	.db #0x00	; 0
      00005A 80                     235 	.db #0x80	; 128
      00005B 80                     236 	.db #0x80	; 128
      00005C 40                     237 	.db #0x40	; 64
      00005D C0                     238 	.db #0xc0	; 192
      00005E 20                     239 	.db #0x20	; 32
      00005F E0                     240 	.db #0xe0	; 224
      000060 10                     241 	.db #0x10	; 16
      000061 F0                     242 	.db #0xf0	; 240
      000062 08                     243 	.db #0x08	; 8
      000063 78                     244 	.db #0x78	; 120	'x'
      000064 84                     245 	.db #0x84	; 132
      000065 3C                     246 	.db #0x3c	; 60
      000066 C2                     247 	.db #0xc2	; 194
      000067 9E                     248 	.db #0x9e	; 158
      000068 61                     249 	.db #0x61	; 97	'a'
      000069 79                     250 	.db #0x79	; 121	'y'
      00006A 86                     251 	.db #0x86	; 134
      00006B 3C                     252 	.db #0x3c	; 60
      00006C 43                     253 	.db #0x43	; 67	'C'
      00006D 1E                     254 	.db #0x1e	; 30
      00006E 21                     255 	.db #0x21	; 33
      00006F 0F                     256 	.db #0x0f	; 15
      000070 10                     257 	.db #0x10	; 16
      000071 07                     258 	.db #0x07	; 7
      000072 08                     259 	.db #0x08	; 8
      000073 03                     260 	.db #0x03	; 3
      000074 04                     261 	.db #0x04	; 4
      000075 01                     262 	.db #0x01	; 1
      000076 02                     263 	.db #0x02	; 2
      000077 00                     264 	.db #0x00	; 0
      000078 01                     265 	.db #0x01	; 1
      000079 9E                     266 	.db #0x9e	; 158
      00007A 61                     267 	.db #0x61	; 97	'a'
      00007B 3C                     268 	.db #0x3c	; 60
      00007C C2                     269 	.db #0xc2	; 194
      00007D 78                     270 	.db #0x78	; 120	'x'
      00007E 84                     271 	.db #0x84	; 132
      00007F F0                     272 	.db #0xf0	; 240
      000080 08                     273 	.db #0x08	; 8
      000081 E0                     274 	.db #0xe0	; 224
      000082 10                     275 	.db #0x10	; 16
      000083 C0                     276 	.db #0xc0	; 192
      000084 20                     277 	.db #0x20	; 32
      000085 80                     278 	.db #0x80	; 128
      000086 40                     279 	.db #0x40	; 64
      000087 00                     280 	.db #0x00	; 0
      000088 80                     281 	.db #0x80	; 128
      000089                        282 _ponggamemap:
      000089 00                     283 	.db #0x00	; 0
      00008A 00                     284 	.db #0x00	; 0
      00008B 00                     285 	.db #0x00	; 0
      00008C 00                     286 	.db #0x00	; 0
      00008D 00                     287 	.db #0x00	; 0
      00008E 00                     288 	.db #0x00	; 0
      00008F 00                     289 	.db #0x00	; 0
      000090 00                     290 	.db #0x00	; 0
      000091 00                     291 	.db #0x00	; 0
      000092 00                     292 	.db #0x00	; 0
      000093 00                     293 	.db #0x00	; 0
      000094 00                     294 	.db #0x00	; 0
      000095 00                     295 	.db #0x00	; 0
      000096 00                     296 	.db #0x00	; 0
      000097 00                     297 	.db #0x00	; 0
      000098 00                     298 	.db #0x00	; 0
      000099 00                     299 	.db #0x00	; 0
      00009A 00                     300 	.db #0x00	; 0
      00009B 00                     301 	.db #0x00	; 0
      00009C 00                     302 	.db #0x00	; 0
      00009D 01                     303 	.db #0x01	; 1
      00009E 01                     304 	.db #0x01	; 1
      00009F 01                     305 	.db #0x01	; 1
      0000A0 01                     306 	.db #0x01	; 1
      0000A1 01                     307 	.db #0x01	; 1
      0000A2 01                     308 	.db #0x01	; 1
      0000A3 01                     309 	.db #0x01	; 1
      0000A4 01                     310 	.db #0x01	; 1
      0000A5 01                     311 	.db #0x01	; 1
      0000A6 01                     312 	.db #0x01	; 1
      0000A7 01                     313 	.db #0x01	; 1
      0000A8 01                     314 	.db #0x01	; 1
      0000A9 01                     315 	.db #0x01	; 1
      0000AA 01                     316 	.db #0x01	; 1
      0000AB 01                     317 	.db #0x01	; 1
      0000AC 01                     318 	.db #0x01	; 1
      0000AD 01                     319 	.db #0x01	; 1
      0000AE 01                     320 	.db #0x01	; 1
      0000AF 01                     321 	.db #0x01	; 1
      0000B0 01                     322 	.db #0x01	; 1
      0000B1 00                     323 	.db #0x00	; 0
      0000B2 00                     324 	.db #0x00	; 0
      0000B3 00                     325 	.db #0x00	; 0
      0000B4 00                     326 	.db #0x00	; 0
      0000B5 00                     327 	.db #0x00	; 0
      0000B6 00                     328 	.db #0x00	; 0
      0000B7 00                     329 	.db #0x00	; 0
      0000B8 00                     330 	.db #0x00	; 0
      0000B9 00                     331 	.db #0x00	; 0
      0000BA 00                     332 	.db #0x00	; 0
      0000BB 00                     333 	.db #0x00	; 0
      0000BC 00                     334 	.db #0x00	; 0
      0000BD 00                     335 	.db #0x00	; 0
      0000BE 00                     336 	.db #0x00	; 0
      0000BF 00                     337 	.db #0x00	; 0
      0000C0 00                     338 	.db #0x00	; 0
      0000C1 00                     339 	.db #0x00	; 0
      0000C2 00                     340 	.db #0x00	; 0
      0000C3 00                     341 	.db #0x00	; 0
      0000C4 00                     342 	.db #0x00	; 0
      0000C5 00                     343 	.db #0x00	; 0
      0000C6 00                     344 	.db #0x00	; 0
      0000C7 00                     345 	.db #0x00	; 0
      0000C8 00                     346 	.db #0x00	; 0
      0000C9 00                     347 	.db #0x00	; 0
      0000CA 00                     348 	.db #0x00	; 0
      0000CB 00                     349 	.db #0x00	; 0
      0000CC 00                     350 	.db #0x00	; 0
      0000CD 00                     351 	.db #0x00	; 0
      0000CE 00                     352 	.db #0x00	; 0
      0000CF 00                     353 	.db #0x00	; 0
      0000D0 00                     354 	.db #0x00	; 0
      0000D1 00                     355 	.db #0x00	; 0
      0000D2 00                     356 	.db #0x00	; 0
      0000D3 00                     357 	.db #0x00	; 0
      0000D4 00                     358 	.db #0x00	; 0
      0000D5 00                     359 	.db #0x00	; 0
      0000D6 00                     360 	.db #0x00	; 0
      0000D7 00                     361 	.db #0x00	; 0
      0000D8 00                     362 	.db #0x00	; 0
      0000D9 00                     363 	.db #0x00	; 0
      0000DA 00                     364 	.db #0x00	; 0
      0000DB 00                     365 	.db #0x00	; 0
      0000DC 00                     366 	.db #0x00	; 0
      0000DD 00                     367 	.db #0x00	; 0
      0000DE 00                     368 	.db #0x00	; 0
      0000DF 00                     369 	.db #0x00	; 0
      0000E0 00                     370 	.db #0x00	; 0
      0000E1 00                     371 	.db #0x00	; 0
      0000E2 00                     372 	.db #0x00	; 0
      0000E3 00                     373 	.db #0x00	; 0
      0000E4 00                     374 	.db #0x00	; 0
      0000E5 00                     375 	.db #0x00	; 0
      0000E6 00                     376 	.db #0x00	; 0
      0000E7 00                     377 	.db #0x00	; 0
      0000E8 00                     378 	.db #0x00	; 0
      0000E9 00                     379 	.db #0x00	; 0
      0000EA 00                     380 	.db #0x00	; 0
      0000EB 00                     381 	.db #0x00	; 0
      0000EC 00                     382 	.db #0x00	; 0
      0000ED 00                     383 	.db #0x00	; 0
      0000EE 00                     384 	.db #0x00	; 0
      0000EF 00                     385 	.db #0x00	; 0
      0000F0 00                     386 	.db #0x00	; 0
      0000F1 00                     387 	.db #0x00	; 0
      0000F2 00                     388 	.db #0x00	; 0
      0000F3 00                     389 	.db #0x00	; 0
      0000F4 00                     390 	.db #0x00	; 0
      0000F5 00                     391 	.db #0x00	; 0
      0000F6 00                     392 	.db #0x00	; 0
      0000F7 00                     393 	.db #0x00	; 0
      0000F8 00                     394 	.db #0x00	; 0
      0000F9 00                     395 	.db #0x00	; 0
      0000FA 00                     396 	.db #0x00	; 0
      0000FB 00                     397 	.db #0x00	; 0
      0000FC 00                     398 	.db #0x00	; 0
      0000FD 00                     399 	.db #0x00	; 0
      0000FE 00                     400 	.db #0x00	; 0
      0000FF 00                     401 	.db #0x00	; 0
      000100 00                     402 	.db #0x00	; 0
      000101 00                     403 	.db #0x00	; 0
      000102 00                     404 	.db #0x00	; 0
      000103 00                     405 	.db #0x00	; 0
      000104 00                     406 	.db #0x00	; 0
      000105 00                     407 	.db #0x00	; 0
      000106 00                     408 	.db #0x00	; 0
      000107 00                     409 	.db #0x00	; 0
      000108 00                     410 	.db #0x00	; 0
      000109 00                     411 	.db #0x00	; 0
      00010A 00                     412 	.db #0x00	; 0
      00010B 00                     413 	.db #0x00	; 0
      00010C 00                     414 	.db #0x00	; 0
      00010D 00                     415 	.db #0x00	; 0
      00010E 00                     416 	.db #0x00	; 0
      00010F 00                     417 	.db #0x00	; 0
      000110 00                     418 	.db #0x00	; 0
      000111 00                     419 	.db #0x00	; 0
      000112 00                     420 	.db #0x00	; 0
      000113 00                     421 	.db #0x00	; 0
      000114 00                     422 	.db #0x00	; 0
      000115 00                     423 	.db #0x00	; 0
      000116 07                     424 	.db #0x07	; 7
      000117 00                     425 	.db #0x00	; 0
      000118 00                     426 	.db #0x00	; 0
      000119 00                     427 	.db #0x00	; 0
      00011A 00                     428 	.db #0x00	; 0
      00011B 00                     429 	.db #0x00	; 0
      00011C 00                     430 	.db #0x00	; 0
      00011D 00                     431 	.db #0x00	; 0
      00011E 00                     432 	.db #0x00	; 0
      00011F 00                     433 	.db #0x00	; 0
      000120 00                     434 	.db #0x00	; 0
      000121 00                     435 	.db #0x00	; 0
      000122 00                     436 	.db #0x00	; 0
      000123 00                     437 	.db #0x00	; 0
      000124 00                     438 	.db #0x00	; 0
      000125 00                     439 	.db #0x00	; 0
      000126 00                     440 	.db #0x00	; 0
      000127 07                     441 	.db #0x07	; 7
      000128 00                     442 	.db #0x00	; 0
      000129 00                     443 	.db #0x00	; 0
      00012A 08                     444 	.db #0x08	; 8
      00012B 00                     445 	.db #0x00	; 0
      00012C 00                     446 	.db #0x00	; 0
      00012D 00                     447 	.db #0x00	; 0
      00012E 00                     448 	.db #0x00	; 0
      00012F 00                     449 	.db #0x00	; 0
      000130 00                     450 	.db #0x00	; 0
      000131 00                     451 	.db #0x00	; 0
      000132 03                     452 	.db #0x03	; 3
      000133 04                     453 	.db #0x04	; 4
      000134 00                     454 	.db #0x00	; 0
      000135 00                     455 	.db #0x00	; 0
      000136 00                     456 	.db #0x00	; 0
      000137 00                     457 	.db #0x00	; 0
      000138 00                     458 	.db #0x00	; 0
      000139 00                     459 	.db #0x00	; 0
      00013A 00                     460 	.db #0x00	; 0
      00013B 08                     461 	.db #0x08	; 8
      00013C 00                     462 	.db #0x00	; 0
      00013D 00                     463 	.db #0x00	; 0
      00013E 08                     464 	.db #0x08	; 8
      00013F 00                     465 	.db #0x00	; 0
      000140 00                     466 	.db #0x00	; 0
      000141 00                     467 	.db #0x00	; 0
      000142 00                     468 	.db #0x00	; 0
      000143 00                     469 	.db #0x00	; 0
      000144 00                     470 	.db #0x00	; 0
      000145 00                     471 	.db #0x00	; 0
      000146 05                     472 	.db #0x05	; 5
      000147 06                     473 	.db #0x06	; 6
      000148 00                     474 	.db #0x00	; 0
      000149 00                     475 	.db #0x00	; 0
      00014A 00                     476 	.db #0x00	; 0
      00014B 00                     477 	.db #0x00	; 0
      00014C 00                     478 	.db #0x00	; 0
      00014D 00                     479 	.db #0x00	; 0
      00014E 00                     480 	.db #0x00	; 0
      00014F 08                     481 	.db #0x08	; 8
      000150 00                     482 	.db #0x00	; 0
      000151 00                     483 	.db #0x00	; 0
      000152 09                     484 	.db #0x09	; 9
      000153 00                     485 	.db #0x00	; 0
      000154 00                     486 	.db #0x00	; 0
      000155 00                     487 	.db #0x00	; 0
      000156 00                     488 	.db #0x00	; 0
      000157 00                     489 	.db #0x00	; 0
      000158 00                     490 	.db #0x00	; 0
      000159 00                     491 	.db #0x00	; 0
      00015A 00                     492 	.db #0x00	; 0
      00015B 00                     493 	.db #0x00	; 0
      00015C 00                     494 	.db #0x00	; 0
      00015D 00                     495 	.db #0x00	; 0
      00015E 00                     496 	.db #0x00	; 0
      00015F 00                     497 	.db #0x00	; 0
      000160 00                     498 	.db #0x00	; 0
      000161 00                     499 	.db #0x00	; 0
      000162 00                     500 	.db #0x00	; 0
      000163 09                     501 	.db #0x09	; 9
      000164 00                     502 	.db #0x00	; 0
      000165 00                     503 	.db #0x00	; 0
      000166 00                     504 	.db #0x00	; 0
      000167 00                     505 	.db #0x00	; 0
      000168 00                     506 	.db #0x00	; 0
      000169 00                     507 	.db #0x00	; 0
      00016A 00                     508 	.db #0x00	; 0
      00016B 00                     509 	.db #0x00	; 0
      00016C 00                     510 	.db #0x00	; 0
      00016D 00                     511 	.db #0x00	; 0
      00016E 00                     512 	.db #0x00	; 0
      00016F 00                     513 	.db #0x00	; 0
      000170 00                     514 	.db #0x00	; 0
      000171 00                     515 	.db #0x00	; 0
      000172 00                     516 	.db #0x00	; 0
      000173 00                     517 	.db #0x00	; 0
      000174 00                     518 	.db #0x00	; 0
      000175 00                     519 	.db #0x00	; 0
      000176 00                     520 	.db #0x00	; 0
      000177 00                     521 	.db #0x00	; 0
      000178 00                     522 	.db #0x00	; 0
      000179 00                     523 	.db #0x00	; 0
      00017A 00                     524 	.db #0x00	; 0
      00017B 00                     525 	.db #0x00	; 0
      00017C 00                     526 	.db #0x00	; 0
      00017D 00                     527 	.db #0x00	; 0
      00017E 00                     528 	.db #0x00	; 0
      00017F 00                     529 	.db #0x00	; 0
      000180 00                     530 	.db #0x00	; 0
      000181 00                     531 	.db #0x00	; 0
      000182 00                     532 	.db #0x00	; 0
      000183 00                     533 	.db #0x00	; 0
      000184 00                     534 	.db #0x00	; 0
      000185 00                     535 	.db #0x00	; 0
      000186 00                     536 	.db #0x00	; 0
      000187 00                     537 	.db #0x00	; 0
      000188 00                     538 	.db #0x00	; 0
      000189 00                     539 	.db #0x00	; 0
      00018A 00                     540 	.db #0x00	; 0
      00018B 00                     541 	.db #0x00	; 0
      00018C 00                     542 	.db #0x00	; 0
      00018D 00                     543 	.db #0x00	; 0
      00018E 00                     544 	.db #0x00	; 0
      00018F 00                     545 	.db #0x00	; 0
      000190 00                     546 	.db #0x00	; 0
      000191 00                     547 	.db #0x00	; 0
      000192 00                     548 	.db #0x00	; 0
      000193 00                     549 	.db #0x00	; 0
      000194 00                     550 	.db #0x00	; 0
      000195 00                     551 	.db #0x00	; 0
      000196 00                     552 	.db #0x00	; 0
      000197 00                     553 	.db #0x00	; 0
      000198 00                     554 	.db #0x00	; 0
      000199 00                     555 	.db #0x00	; 0
      00019A 00                     556 	.db #0x00	; 0
      00019B 00                     557 	.db #0x00	; 0
      00019C 00                     558 	.db #0x00	; 0
      00019D 00                     559 	.db #0x00	; 0
      00019E 00                     560 	.db #0x00	; 0
      00019F 00                     561 	.db #0x00	; 0
      0001A0 00                     562 	.db #0x00	; 0
      0001A1 00                     563 	.db #0x00	; 0
      0001A2 00                     564 	.db #0x00	; 0
      0001A3 00                     565 	.db #0x00	; 0
      0001A4 00                     566 	.db #0x00	; 0
      0001A5 00                     567 	.db #0x00	; 0
      0001A6 00                     568 	.db #0x00	; 0
      0001A7 00                     569 	.db #0x00	; 0
      0001A8 00                     570 	.db #0x00	; 0
      0001A9 00                     571 	.db #0x00	; 0
      0001AA 00                     572 	.db #0x00	; 0
      0001AB 00                     573 	.db #0x00	; 0
      0001AC 00                     574 	.db #0x00	; 0
      0001AD 00                     575 	.db #0x00	; 0
      0001AE 00                     576 	.db #0x00	; 0
      0001AF 00                     577 	.db #0x00	; 0
      0001B0 00                     578 	.db #0x00	; 0
      0001B1 00                     579 	.db #0x00	; 0
      0001B2 00                     580 	.db #0x00	; 0
      0001B3 00                     581 	.db #0x00	; 0
      0001B4 00                     582 	.db #0x00	; 0
      0001B5 00                     583 	.db #0x00	; 0
      0001B6 00                     584 	.db #0x00	; 0
      0001B7 00                     585 	.db #0x00	; 0
      0001B8 00                     586 	.db #0x00	; 0
      0001B9 00                     587 	.db #0x00	; 0
      0001BA 00                     588 	.db #0x00	; 0
      0001BB 00                     589 	.db #0x00	; 0
      0001BC 00                     590 	.db #0x00	; 0
      0001BD 00                     591 	.db #0x00	; 0
      0001BE 00                     592 	.db #0x00	; 0
      0001BF 00                     593 	.db #0x00	; 0
      0001C0 00                     594 	.db #0x00	; 0
      0001C1 00                     595 	.db #0x00	; 0
      0001C2 00                     596 	.db #0x00	; 0
      0001C3 00                     597 	.db #0x00	; 0
      0001C4 00                     598 	.db #0x00	; 0
      0001C5 00                     599 	.db #0x00	; 0
      0001C6 00                     600 	.db #0x00	; 0
      0001C7 00                     601 	.db #0x00	; 0
      0001C8 00                     602 	.db #0x00	; 0
      0001C9 02                     603 	.db #0x02	; 2
      0001CA 02                     604 	.db #0x02	; 2
      0001CB 02                     605 	.db #0x02	; 2
      0001CC 02                     606 	.db #0x02	; 2
      0001CD 02                     607 	.db #0x02	; 2
      0001CE 02                     608 	.db #0x02	; 2
      0001CF 02                     609 	.db #0x02	; 2
      0001D0 02                     610 	.db #0x02	; 2
      0001D1 02                     611 	.db #0x02	; 2
      0001D2 02                     612 	.db #0x02	; 2
      0001D3 02                     613 	.db #0x02	; 2
      0001D4 02                     614 	.db #0x02	; 2
      0001D5 02                     615 	.db #0x02	; 2
      0001D6 02                     616 	.db #0x02	; 2
      0001D7 02                     617 	.db #0x02	; 2
      0001D8 02                     618 	.db #0x02	; 2
      0001D9 02                     619 	.db #0x02	; 2
      0001DA 02                     620 	.db #0x02	; 2
      0001DB 02                     621 	.db #0x02	; 2
      0001DC 02                     622 	.db #0x02	; 2
      0001DD 00                     623 	.db #0x00	; 0
      0001DE 00                     624 	.db #0x00	; 0
      0001DF 00                     625 	.db #0x00	; 0
      0001E0 00                     626 	.db #0x00	; 0
      0001E1 00                     627 	.db #0x00	; 0
      0001E2 00                     628 	.db #0x00	; 0
      0001E3 00                     629 	.db #0x00	; 0
      0001E4 00                     630 	.db #0x00	; 0
      0001E5 00                     631 	.db #0x00	; 0
      0001E6 00                     632 	.db #0x00	; 0
      0001E7 00                     633 	.db #0x00	; 0
      0001E8 00                     634 	.db #0x00	; 0
      0001E9 00                     635 	.db #0x00	; 0
      0001EA 00                     636 	.db #0x00	; 0
      0001EB 00                     637 	.db #0x00	; 0
      0001EC 00                     638 	.db #0x00	; 0
      0001ED 00                     639 	.db #0x00	; 0
      0001EE 00                     640 	.db #0x00	; 0
      0001EF 00                     641 	.db #0x00	; 0
      0001F0 00                     642 	.db #0x00	; 0
      0001F1                        643 _pongspritetiles:
      0001F1 00                     644 	.db #0x00	; 0
      0001F2 00                     645 	.db #0x00	; 0
      0001F3 00                     646 	.db #0x00	; 0
      0001F4 00                     647 	.db #0x00	; 0
      0001F5 00                     648 	.db #0x00	; 0
      0001F6 00                     649 	.db #0x00	; 0
      0001F7 00                     650 	.db #0x00	; 0
      0001F8 00                     651 	.db #0x00	; 0
      0001F9 00                     652 	.db #0x00	; 0
      0001FA 00                     653 	.db #0x00	; 0
      0001FB 00                     654 	.db #0x00	; 0
      0001FC 00                     655 	.db #0x00	; 0
      0001FD 00                     656 	.db #0x00	; 0
      0001FE 00                     657 	.db #0x00	; 0
      0001FF 00                     658 	.db #0x00	; 0
      000200 00                     659 	.db #0x00	; 0
      000201 FF                     660 	.db #0xff	; 255
      000202 FF                     661 	.db #0xff	; 255
      000203 FF                     662 	.db #0xff	; 255
      000204 81                     663 	.db #0x81	; 129
      000205 C3                     664 	.db #0xc3	; 195
      000206 81                     665 	.db #0x81	; 129
      000207 C3                     666 	.db #0xc3	; 195
      000208 99                     667 	.db #0x99	; 153
      000209 C3                     668 	.db #0xc3	; 195
      00020A 99                     669 	.db #0x99	; 153
      00020B C3                     670 	.db #0xc3	; 195
      00020C 81                     671 	.db #0x81	; 129
      00020D FF                     672 	.db #0xff	; 255
      00020E 81                     673 	.db #0x81	; 129
      00020F FF                     674 	.db #0xff	; 255
      000210 FF                     675 	.db #0xff	; 255
      000211 FF                     676 	.db #0xff	; 255
      000212 FF                     677 	.db #0xff	; 255
      000213 FF                     678 	.db #0xff	; 255
      000214 81                     679 	.db #0x81	; 129
      000215 C3                     680 	.db #0xc3	; 195
      000216 81                     681 	.db #0x81	; 129
      000217 C3                     682 	.db #0xc3	; 195
      000218 99                     683 	.db #0x99	; 153
      000219 C3                     684 	.db #0xc3	; 195
      00021A 99                     685 	.db #0x99	; 153
      00021B C3                     686 	.db #0xc3	; 195
      00021C 99                     687 	.db #0x99	; 153
      00021D C3                     688 	.db #0xc3	; 195
      00021E 99                     689 	.db #0x99	; 153
      00021F C3                     690 	.db #0xc3	; 195
      000220 99                     691 	.db #0x99	; 153
      000221 C3                     692 	.db #0xc3	; 195
      000222 99                     693 	.db #0x99	; 153
      000223 C3                     694 	.db #0xc3	; 195
      000224 99                     695 	.db #0x99	; 153
      000225 C3                     696 	.db #0xc3	; 195
      000226 99                     697 	.db #0x99	; 153
      000227 C3                     698 	.db #0xc3	; 195
      000228 99                     699 	.db #0x99	; 153
      000229 C3                     700 	.db #0xc3	; 195
      00022A 99                     701 	.db #0x99	; 153
      00022B C3                     702 	.db #0xc3	; 195
      00022C 99                     703 	.db #0x99	; 153
      00022D C3                     704 	.db #0xc3	; 195
      00022E 99                     705 	.db #0x99	; 153
      00022F C3                     706 	.db #0xc3	; 195
      000230 99                     707 	.db #0x99	; 153
      000231 18                     708 	.db #0x18	; 24
      000232 18                     709 	.db #0x18	; 24
      000233 7E                     710 	.db #0x7e	; 126
      000234 66                     711 	.db #0x66	; 102	'f'
      000235 7E                     712 	.db #0x7e	; 126
      000236 42                     713 	.db #0x42	; 66	'B'
      000237 E7                     714 	.db #0xe7	; 231
      000238 99                     715 	.db #0x99	; 153
      000239 E7                     716 	.db #0xe7	; 231
      00023A 99                     717 	.db #0x99	; 153
      00023B 7E                     718 	.db #0x7e	; 126
      00023C 42                     719 	.db #0x42	; 66	'B'
      00023D 7E                     720 	.db #0x7e	; 126
      00023E 66                     721 	.db #0x66	; 102	'f'
      00023F 18                     722 	.db #0x18	; 24
      000240 18                     723 	.db #0x18	; 24
      000241                        724 _difficulty_px:
      000241 54                     725 	.db #0x54	; 84	'T'
      000242 2A                     726 	.db #0x2a	; 42
      000243 08                     727 	.db #0x08	; 8
      000244                        728 _stspeedpoolx:
      000244 FC                     729 	.db #0xfc	; -4
      000245 04                     730 	.db #0x04	;  4
      000246                        731 _stspeedpooly:
      000246 FC                     732 	.db #0xfc	; -4
      000247 FE                     733 	.db #0xfe	; -2
      000248 00                     734 	.db #0x00	;  0
      000249 02                     735 	.db #0x02	;  2
      00024A 04                     736 	.db #0x04	;  4
      00024B                        737 _bkgborderup:
      00024B 20                     738 	.db #0x20	; 32
      00024C                        739 _bkgborderdown:
      00024C 90                     740 	.db #0x90	; 144
                                    741 ;main.c:52: UBYTE hits_walls(UINT8 nexty, UINT8 objheight) {
                                    742 ;	---------------------------------
                                    743 ; Function hits_walls
                                    744 ; ---------------------------------
      00024D                        745 _hits_walls::
                                    746 ;main.c:53: return nexty < bkgborderup || nexty + objheight > bkgborderdown;
      00024D 21r4Br02               747 	ld	hl, #_bkgborderup
      000250 4E                     748 	ld	c, (hl)
      000251 F8 02                  749 	ldhl	sp,	#2
      000253 7E                     750 	ld	a,(hl)
      000254 B9                     751 	cp	a,c
      000255 38 2C                  752 	jr	C, 00104$
      000257 06 00                  753 	ld	b, #0x00
      000259 23                     754 	inc	hl
      00025A 5E                     755 	ld	e, (hl)
      00025B 16 00                  756 	ld	d, #0x00
      00025D 83                     757 	add	a, e
      00025E 4F                     758 	ld	c, a
      00025F 78                     759 	ld	a, b
      000260 8A                     760 	adc	a, d
      000261 47                     761 	ld	b, a
      000262 21r4Cr02               762 	ld	hl, #_bkgborderdown
      000265 6E                     763 	ld	l, (hl)
      000266 26 00                  764 	ld	h, #0x00
      000268 58                     765 	ld	e, b
      000269 54                     766 	ld	d, h
      00026A 7D                     767 	ld	a, l
      00026B 91                     768 	sub	a, c
      00026C 7C                     769 	ld	a, h
      00026D 98                     770 	sbc	a, b
      00026E CB 7B                  771 	bit	7, e
      000270 28 07                  772 	jr	Z, 00116$
      000272 CB 7A                  773 	bit	7, d
      000274 20 08                  774 	jr	NZ, 00117$
      000276 BF                     775 	cp	a, a
      000277 18 05                  776 	jr	00117$
      000279                        777 00116$:
      000279 CB 7A                  778 	bit	7, d
      00027B 28 01                  779 	jr	Z, 00117$
      00027D 37                     780 	scf
      00027E                        781 00117$:
      00027E 38 03                  782 	jr	C, 00104$
      000280 1E 00                  783 	ld	e, #0x00
      000282 C9                     784 	ret
      000283                        785 00104$:
      000283 1E 01                  786 	ld	e, #0x01
                                    787 ;main.c:54: }
      000285 C9                     788 	ret
                                    789 ;main.c:56: UBYTE hits_paddle(UINT8 nextx, UINT8 nexty, Paddle * pdl) {
                                    790 ;	---------------------------------
                                    791 ; Function hits_paddle
                                    792 ; ---------------------------------
      000286                        793 _hits_paddle::
      000286 E8 FA                  794 	add	sp, #-6
                                    795 ;main.c:57: return (nextx < pdl->x + 8 && pdl->x < nextx + 8) &&
      000288 F8 0A                  796 	ldhl	sp,	#10
      00028A 2A                     797 	ld	a, (hl+)
      00028B 5E                     798 	ld	e, (hl)
      00028C F8 02                  799 	ldhl	sp,	#2
      00028E 22                     800 	ld	(hl+), a
      00028F 7B                     801 	ld	a, e
      000290 32                     802 	ld	(hl-), a
      000291 2A                     803 	ld	a, (hl+)
      000292 5F                     804 	ld	e, a
      000293 56                     805 	ld	d, (hl)
      000294 1A                     806 	ld	a, (de)
      000295 F8 00                  807 	ldhl	sp,	#0
      000297 77                     808 	ld	(hl), a
      000298 AF                     809 	xor	a, a
      000299 23                     810 	inc	hl
      00029A 77                     811 	ld	(hl), a
                                    812 ;c
      00029B D1                     813 	pop	de
      00029C D5                     814 	push	de
      00029D 21 08 00               815 	ld	hl, #0x0008
      0002A0 19                     816 	add	hl, de
      0002A1 4D                     817 	ld	c, l
      0002A2 44                     818 	ld	b, h
      0002A3 F8 08                  819 	ldhl	sp,	#8
      0002A5 7E                     820 	ld	a, (hl)
      0002A6 F8 04                  821 	ldhl	sp,	#4
      0002A8 77                     822 	ld	(hl), a
      0002A9 AF                     823 	xor	a, a
      0002AA 23                     824 	inc	hl
      0002AB 32                     825 	ld	(hl-), a
      0002AC 7E                     826 	ld	a, (hl)
      0002AD 91                     827 	sub	a, c
      0002AE 23                     828 	inc	hl
      0002AF 7E                     829 	ld	a, (hl)
      0002B0 98                     830 	sbc	a, b
      0002B1 56                     831 	ld	d, (hl)
      0002B2 78                     832 	ld	a, b
      0002B3 CB 7F                  833 	bit	7,a
      0002B5 28 07                  834 	jr	Z, 00126$
      0002B7 CB 7A                  835 	bit	7, d
      0002B9 20 08                  836 	jr	NZ, 00127$
      0002BB BF                     837 	cp	a, a
      0002BC 18 05                  838 	jr	00127$
      0002BE                        839 00126$:
      0002BE CB 7A                  840 	bit	7, d
      0002C0 28 01                  841 	jr	Z, 00127$
      0002C2 37                     842 	scf
      0002C3                        843 00127$:
      0002C3 D2r94r03               844 	jp	NC, 00103$
                                    845 ;c
      0002C6 F8 04                  846 	ldhl	sp,#4
      0002C8 2A                     847 	ld	a, (hl+)
      0002C9 5F                     848 	ld	e, a
      0002CA 56                     849 	ld	d, (hl)
      0002CB 21 08 00               850 	ld	hl, #0x0008
      0002CE 19                     851 	add	hl, de
      0002CF 4D                     852 	ld	c, l
      0002D0 44                     853 	ld	b, h
      0002D1 F8 00                  854 	ldhl	sp,	#0
      0002D3 7E                     855 	ld	a, (hl)
      0002D4 91                     856 	sub	a, c
      0002D5 23                     857 	inc	hl
      0002D6 7E                     858 	ld	a, (hl)
      0002D7 98                     859 	sbc	a, b
      0002D8 56                     860 	ld	d, (hl)
      0002D9 78                     861 	ld	a, b
      0002DA CB 7F                  862 	bit	7,a
      0002DC 28 07                  863 	jr	Z, 00128$
      0002DE CB 7A                  864 	bit	7, d
      0002E0 20 08                  865 	jr	NZ, 00129$
      0002E2 BF                     866 	cp	a, a
      0002E3 18 05                  867 	jr	00129$
      0002E5                        868 00128$:
      0002E5 CB 7A                  869 	bit	7, d
      0002E7 28 01                  870 	jr	Z, 00129$
      0002E9 37                     871 	scf
      0002EA                        872 00129$:
      0002EA D2r94r03               873 	jp	NC, 00103$
                                    874 ;main.c:58: (nexty < pdl->y + (padheight * 8) && pdl->y < nexty + 8);
                                    875 ;c
      0002ED F8 02                  876 	ldhl	sp,#2
      0002EF 2A                     877 	ld	a, (hl+)
      0002F0 5F                     878 	ld	e, a
      0002F1 56                     879 	ld	d, (hl)
      0002F2 6B                     880 	ld	l, e
      0002F3 62                     881 	ld	h, d
      0002F4 23                     882 	inc	hl
      0002F5 E5                     883 	push	hl
      0002F6 7D                     884 	ld	a, l
      0002F7 F8 06                  885 	ldhl	sp,	#6
      0002F9 77                     886 	ld	(hl), a
      0002FA E1                     887 	pop	hl
      0002FB 7C                     888 	ld	a, h
      0002FC F8 05                  889 	ldhl	sp,	#5
      0002FE 32                     890 	ld	(hl-), a
      0002FF 2A                     891 	ld	a, (hl+)
      000300 5F                     892 	ld	e, a
      000301 56                     893 	ld	d, (hl)
      000302 1A                     894 	ld	a, (de)
      000303 77                     895 	ld	(hl), a
      000304 F8 00                  896 	ldhl	sp,	#0
      000306 77                     897 	ld	(hl), a
      000307 AF                     898 	xor	a, a
      000308 23                     899 	inc	hl
      000309 77                     900 	ld	(hl), a
      00030A FAr06r00               901 	ld	a, (#_padheight)
      00030D F8 04                  902 	ldhl	sp,	#4
      00030F 77                     903 	ld	(hl), a
      000310 AF                     904 	xor	a, a
      000311 23                     905 	inc	hl
      000312 32                     906 	ld	(hl-), a
      000313 3A                     907 	ld	a, (hl-)
      000314 2B                     908 	dec	hl
      000315 77                     909 	ld	(hl), a
      000316 F8 05                  910 	ldhl	sp,	#5
      000318 3A                     911 	ld	a, (hl-)
      000319 2B                     912 	dec	hl
      00031A 77                     913 	ld	(hl), a
      00031B 3E 03                  914 	ld	a, #0x03
      00031D                        915 00130$:
      00031D F8 02                  916 	ldhl	sp,	#2
      00031F CB 26                  917 	sla	(hl)
      000321 23                     918 	inc	hl
      000322 CB 16                  919 	rl	(hl)
      000324 3D                     920 	dec	a
      000325 20 F6                  921 	jr	NZ, 00130$
                                    922 ;c
      000327 2B                     923 	dec	hl
      000328 2A                     924 	ld	a, (hl+)
      000329 5F                     925 	ld	e, a
      00032A 56                     926 	ld	d, (hl)
      00032B E1                     927 	pop	hl
      00032C E5                     928 	push	hl
      00032D 19                     929 	add	hl, de
      00032E E5                     930 	push	hl
      00032F 7D                     931 	ld	a, l
      000330 F8 06                  932 	ldhl	sp,	#6
      000332 77                     933 	ld	(hl), a
      000333 E1                     934 	pop	hl
      000334 7C                     935 	ld	a, h
      000335 F8 05                  936 	ldhl	sp,	#5
      000337 77                     937 	ld	(hl), a
      000338 F8 09                  938 	ldhl	sp,	#9
      00033A 7E                     939 	ld	a, (hl)
      00033B F8 02                  940 	ldhl	sp,	#2
      00033D 77                     941 	ld	(hl), a
      00033E AF                     942 	xor	a, a
      00033F 23                     943 	inc	hl
      000340 77                     944 	ld	(hl), a
      000341 F8 02                  945 	ldhl	sp,	#2
      000343 5D                     946 	ld	e, l
      000344 54                     947 	ld	d, h
      000345 F8 04                  948 	ldhl	sp,	#4
      000347 1A                     949 	ld	a, (de)
      000348 96                     950 	sub	a, (hl)
      000349 23                     951 	inc	hl
      00034A 13                     952 	inc	de
      00034B 1A                     953 	ld	a, (de)
      00034C 9E                     954 	sbc	a, (hl)
      00034D 1A                     955 	ld	a, (de)
      00034E 57                     956 	ld	d, a
      00034F CB 7E                  957 	bit	7, (hl)
      000351 28 07                  958 	jr	Z, 00131$
      000353 CB 7A                  959 	bit	7, d
      000355 20 08                  960 	jr	NZ, 00132$
      000357 BF                     961 	cp	a, a
      000358 18 05                  962 	jr	00132$
      00035A                        963 00131$:
      00035A CB 7A                  964 	bit	7, d
      00035C 28 01                  965 	jr	Z, 00132$
      00035E 37                     966 	scf
      00035F                        967 00132$:
      00035F 30 33                  968 	jr	NC, 00103$
                                    969 ;c
      000361 F8 02                  970 	ldhl	sp,#2
      000363 2A                     971 	ld	a, (hl+)
      000364 5F                     972 	ld	e, a
      000365 56                     973 	ld	d, (hl)
      000366 21 08 00               974 	ld	hl, #0x0008
      000369 19                     975 	add	hl, de
      00036A E5                     976 	push	hl
      00036B 7D                     977 	ld	a, l
      00036C F8 06                  978 	ldhl	sp,	#6
      00036E 77                     979 	ld	(hl), a
      00036F E1                     980 	pop	hl
      000370 7C                     981 	ld	a, h
      000371 F8 05                  982 	ldhl	sp,	#5
      000373 77                     983 	ld	(hl), a
      000374 F8 00                  984 	ldhl	sp,	#0
      000376 5D                     985 	ld	e, l
      000377 54                     986 	ld	d, h
      000378 F8 04                  987 	ldhl	sp,	#4
      00037A 1A                     988 	ld	a, (de)
      00037B 96                     989 	sub	a, (hl)
      00037C 23                     990 	inc	hl
      00037D 13                     991 	inc	de
      00037E 1A                     992 	ld	a, (de)
      00037F 9E                     993 	sbc	a, (hl)
      000380 1A                     994 	ld	a, (de)
      000381 57                     995 	ld	d, a
      000382 CB 7E                  996 	bit	7, (hl)
      000384 28 07                  997 	jr	Z, 00133$
      000386 CB 7A                  998 	bit	7, d
      000388 20 08                  999 	jr	NZ, 00134$
      00038A BF                    1000 	cp	a, a
      00038B 18 05                 1001 	jr	00134$
      00038D                       1002 00133$:
      00038D CB 7A                 1003 	bit	7, d
      00038F 28 01                 1004 	jr	Z, 00134$
      000391 37                    1005 	scf
      000392                       1006 00134$:
      000392 38 04                 1007 	jr	C, 00104$
      000394                       1008 00103$:
      000394 1E 00                 1009 	ld	e, #0x00
      000396 18 02                 1010 	jr	00105$
      000398                       1011 00104$:
      000398 1E 01                 1012 	ld	e, #0x01
      00039A                       1013 00105$:
                                   1014 ;main.c:59: }
      00039A E8 06                 1015 	add	sp, #6
      00039C C9                    1016 	ret
                                   1017 ;main.c:61: INT8 get_bounce_off_dir_y(Paddle * pad) {
                                   1018 ;	---------------------------------
                                   1019 ; Function get_bounce_off_dir_y
                                   1020 ; ---------------------------------
      00039D                       1021 _get_bounce_off_dir_y::
      00039D E8 FA                 1022 	add	sp, #-6
                                   1023 ;main.c:63: UINT8 ballcentery = ballposy + 4;
      00039F FAr03r00              1024 	ld	a, (#_ballposy)
      0003A2 C6 04                 1025 	add	a, #0x04
      0003A4 4F                    1026 	ld	c, a
                                   1027 ;main.c:64: if(ballcentery < pad->y + padsectors[0]) { // < 25%
      0003A5 F8 08                 1028 	ldhl	sp,#8
      0003A7 2A                    1029 	ld	a, (hl+)
      0003A8 5F                    1030 	ld	e, a
      0003A9 56                    1031 	ld	d, (hl)
      0003AA 13                    1032 	inc	de
      0003AB 1A                    1033 	ld	a, (de)
      0003AC F8 00                 1034 	ldhl	sp,	#0
      0003AE 77                    1035 	ld	(hl), a
      0003AF AF                    1036 	xor	a, a
      0003B0 23                    1037 	inc	hl
      0003B1 77                    1038 	ld	(hl), a
      0003B2 FAr08r00              1039 	ld	a, (#_padsectors + 0)
      0003B5 16 00                 1040 	ld	d, #0x00
                                   1041 ;c
      0003B7 5F                    1042 	ld	e, a
      0003B8 E1                    1043 	pop	hl
      0003B9 E5                    1044 	push	hl
      0003BA 19                    1045 	add	hl, de
      0003BB E5                    1046 	push	hl
      0003BC 7D                    1047 	ld	a, l
      0003BD F8 06                 1048 	ldhl	sp,	#6
      0003BF 77                    1049 	ld	(hl), a
      0003C0 E1                    1050 	pop	hl
      0003C1 7C                    1051 	ld	a, h
      0003C2 F8 05                 1052 	ldhl	sp,	#5
      0003C4 77                    1053 	ld	(hl), a
      0003C5 06 00                 1054 	ld	b, #0x00
      0003C7 2B                    1055 	dec	hl
      0003C8 79                    1056 	ld	a, c
      0003C9 96                    1057 	sub	a, (hl)
      0003CA 23                    1058 	inc	hl
      0003CB 78                    1059 	ld	a, b
      0003CC 9E                    1060 	sbc	a, (hl)
      0003CD 78                    1061 	ld	a, b
      0003CE 57                    1062 	ld	d, a
      0003CF CB 7E                 1063 	bit	7, (hl)
      0003D1 28 07                 1064 	jr	Z, 00142$
      0003D3 CB 7A                 1065 	bit	7, d
      0003D5 20 08                 1066 	jr	NZ, 00143$
      0003D7 BF                    1067 	cp	a, a
      0003D8 18 05                 1068 	jr	00143$
      0003DA                       1069 00142$:
      0003DA CB 7A                 1070 	bit	7, d
      0003DC 28 01                 1071 	jr	Z, 00143$
      0003DE 37                    1072 	scf
      0003DF                       1073 00143$:
      0003DF 30 05                 1074 	jr	NC, 00113$
                                   1075 ;main.c:65: return -4;
      0003E1 1E FC                 1076 	ld	e, #0xfc
      0003E3 C3r77r04              1077 	jp	00115$
      0003E6                       1078 00113$:
                                   1079 ;main.c:66: } else if(ballcentery < pad->y + padsectors[1]) { // < 50%
      0003E6 FAr09r00              1080 	ld	a, (#(_padsectors + 0x0001) + 0)
      0003E9 16 00                 1081 	ld	d, #0x00
                                   1082 ;c
      0003EB 5F                    1083 	ld	e, a
      0003EC E1                    1084 	pop	hl
      0003ED E5                    1085 	push	hl
      0003EE 19                    1086 	add	hl, de
      0003EF E5                    1087 	push	hl
      0003F0 7D                    1088 	ld	a, l
      0003F1 F8 04                 1089 	ldhl	sp,	#4
      0003F3 77                    1090 	ld	(hl), a
      0003F4 E1                    1091 	pop	hl
      0003F5 7C                    1092 	ld	a, h
      0003F6 F8 03                 1093 	ldhl	sp,	#3
      0003F8 32                    1094 	ld	(hl-), a
      0003F9 79                    1095 	ld	a, c
      0003FA 96                    1096 	sub	a, (hl)
      0003FB 23                    1097 	inc	hl
      0003FC 78                    1098 	ld	a, b
      0003FD 9E                    1099 	sbc	a, (hl)
      0003FE 78                    1100 	ld	a, b
      0003FF 57                    1101 	ld	d, a
      000400 CB 7E                 1102 	bit	7, (hl)
      000402 28 07                 1103 	jr	Z, 00144$
      000404 CB 7A                 1104 	bit	7, d
      000406 20 08                 1105 	jr	NZ, 00145$
      000408 BF                    1106 	cp	a, a
      000409 18 05                 1107 	jr	00145$
      00040B                       1108 00144$:
      00040B CB 7A                 1109 	bit	7, d
      00040D 28 01                 1110 	jr	Z, 00145$
      00040F 37                    1111 	scf
      000410                       1112 00145$:
      000410 30 04                 1113 	jr	NC, 00110$
                                   1114 ;main.c:67: return -2;
      000412 1E FE                 1115 	ld	e, #0xfe
      000414 18 61                 1116 	jr	00115$
      000416                       1117 00110$:
                                   1118 ;main.c:68: } else if(ballcentery == pad->y + padsectors[1]) { // == 50%
      000416 F8 02                 1119 	ldhl	sp,	#2
      000418 7E                    1120 	ld	a, (hl)
      000419 91                    1121 	sub	a, c
      00041A 20 08                 1122 	jr	NZ, 00107$
      00041C 23                    1123 	inc	hl
      00041D 7E                    1124 	ld	a, (hl)
                                   1125 ;main.c:69: return 0;
      00041E 90                    1126 	sub	a,b
      00041F 20 03                 1127 	jr	NZ, 00107$
      000421 5F                    1128 	ld	e,a
      000422 18 53                 1129 	jr	00115$
      000424                       1130 00107$:
                                   1131 ;main.c:70: } else if(ballcentery > pad->y + padsectors[2]) { // > 75%
      000424 FAr0Ar00              1132 	ld	a, (#(_padsectors + 0x0002) + 0)
      000427 16 00                 1133 	ld	d, #0x00
                                   1134 ;c
      000429 5F                    1135 	ld	e, a
      00042A E1                    1136 	pop	hl
      00042B E5                    1137 	push	hl
      00042C 19                    1138 	add	hl, de
      00042D E5                    1139 	push	hl
      00042E 7D                    1140 	ld	a, l
      00042F F8 06                 1141 	ldhl	sp,	#6
      000431 77                    1142 	ld	(hl), a
      000432 E1                    1143 	pop	hl
      000433 7C                    1144 	ld	a, h
      000434 F8 05                 1145 	ldhl	sp,	#5
      000436 32                    1146 	ld	(hl-), a
      000437 7E                    1147 	ld	a, (hl)
      000438 91                    1148 	sub	a, c
      000439 23                    1149 	inc	hl
      00043A 7E                    1150 	ld	a, (hl)
      00043B 98                    1151 	sbc	a, b
      00043C 56                    1152 	ld	d, (hl)
      00043D 78                    1153 	ld	a, b
      00043E CB 7F                 1154 	bit	7,a
      000440 28 07                 1155 	jr	Z, 00148$
      000442 CB 7A                 1156 	bit	7, d
      000444 20 08                 1157 	jr	NZ, 00149$
      000446 BF                    1158 	cp	a, a
      000447 18 05                 1159 	jr	00149$
      000449                       1160 00148$:
      000449 CB 7A                 1161 	bit	7, d
      00044B 28 01                 1162 	jr	Z, 00149$
      00044D 37                    1163 	scf
      00044E                       1164 00149$:
      00044E 30 04                 1165 	jr	NC, 00104$
                                   1166 ;main.c:71: return 4;
      000450 1E 04                 1167 	ld	e, #0x04
      000452 18 23                 1168 	jr	00115$
      000454                       1169 00104$:
                                   1170 ;main.c:72: } else if(ballcentery > pad->y + padsectors[1]) { // > 50%
      000454 F8 02                 1171 	ldhl	sp,	#2
      000456 7E                    1172 	ld	a, (hl)
      000457 91                    1173 	sub	a, c
      000458 23                    1174 	inc	hl
      000459 7E                    1175 	ld	a, (hl)
      00045A 98                    1176 	sbc	a, b
      00045B 56                    1177 	ld	d, (hl)
      00045C 78                    1178 	ld	a, b
      00045D CB 7F                 1179 	bit	7,a
      00045F 28 07                 1180 	jr	Z, 00150$
      000461 CB 7A                 1181 	bit	7, d
      000463 20 08                 1182 	jr	NZ, 00151$
      000465 BF                    1183 	cp	a, a
      000466 18 05                 1184 	jr	00151$
      000468                       1185 00150$:
      000468 CB 7A                 1186 	bit	7, d
      00046A 28 01                 1187 	jr	Z, 00151$
      00046C 37                    1188 	scf
      00046D                       1189 00151$:
      00046D 30 04                 1190 	jr	NC, 00108$
                                   1191 ;main.c:73: return 2;
      00046F 1E 02                 1192 	ld	e, #0x02
      000471 18 04                 1193 	jr	00115$
      000473                       1194 00108$:
                                   1195 ;main.c:75: return ballspeedy; // Just getting rid of a compiler warning
      000473 21r01r00              1196 	ld	hl, #_ballspeedy
      000476 5E                    1197 	ld	e, (hl)
      000477                       1198 00115$:
                                   1199 ;main.c:76: }
      000477 E8 06                 1200 	add	sp, #6
      000479 C9                    1201 	ret
                                   1202 ;main.c:78: void move_ball(Paddle * ppl1, Paddle * pcpu) {
                                   1203 ;	---------------------------------
                                   1204 ; Function move_ball
                                   1205 ; ---------------------------------
      00047A                       1206 _move_ball::
                                   1207 ;main.c:79: UINT8 nextballposx = ballposx + ballspeedx;
      00047A FAr02r00              1208 	ld	a, (#_ballposx)
      00047D 21r00r00              1209 	ld	hl, #_ballspeedx
      000480 86                    1210 	add	a, (hl)
      000481 4F                    1211 	ld	c, a
                                   1212 ;main.c:80: UINT8 nextballposy = ballposy + ballspeedy;
      000482 FAr03r00              1213 	ld	a, (#_ballposy)
      000485 21r01r00              1214 	ld	hl, #_ballspeedy
      000488 86                    1215 	add	a, (hl)
      000489 47                    1216 	ld	b, a
                                   1217 ;main.c:81: if(hits_walls(nextballposy, 8)) {
      00048A C5                    1218 	push	bc
      00048B 3E 08                 1219 	ld	a, #0x08
      00048D F5                    1220 	push	af
      00048E 33                    1221 	inc	sp
      00048F C5                    1222 	push	bc
      000490 33                    1223 	inc	sp
      000491 CDr4Dr02              1224 	call	_hits_walls
      000494 E8 02                 1225 	add	sp, #2
      000496 7B                    1226 	ld	a, e
      000497 C1                    1227 	pop	bc
      000498 B7                    1228 	or	a, a
      000499 28 06                 1229 	jr	Z, 00102$
                                   1230 ;main.c:82: ballspeedy *= -1;
      00049B AF                    1231 	xor	a, a
      00049C 21r01r00              1232 	ld	hl, #_ballspeedy
      00049F 96                    1233 	sub	a, (hl)
      0004A0 77                    1234 	ld	(hl), a
      0004A1                       1235 00102$:
                                   1236 ;main.c:84: if(hits_paddle(nextballposx, nextballposy, ppl1)) {
      0004A1 C5                    1237 	push	bc
      0004A2 F8 04                 1238 	ldhl	sp,	#4
      0004A4 2A                    1239 	ld	a, (hl+)
      0004A5 66                    1240 	ld	h, (hl)
      0004A6 6F                    1241 	ld	l, a
      0004A7 E5                    1242 	push	hl
      0004A8 C5                    1243 	push	bc
      0004A9 CDr86r02              1244 	call	_hits_paddle
      0004AC E8 04                 1245 	add	sp, #4
      0004AE 7B                    1246 	ld	a, e
      0004AF C1                    1247 	pop	bc
      0004B0 B7                    1248 	or	a, a
      0004B1 28 16                 1249 	jr	Z, 00106$
                                   1250 ;main.c:85: ballspeedx *= -1;
      0004B3 AF                    1251 	xor	a, a
      0004B4 21r00r00              1252 	ld	hl, #_ballspeedx
      0004B7 96                    1253 	sub	a, (hl)
      0004B8 77                    1254 	ld	(hl), a
                                   1255 ;main.c:86: ballspeedy = get_bounce_off_dir_y(ppl1);
      0004B9 C1                    1256 	pop	bc
      0004BA E1                    1257 	pop	hl
      0004BB E5                    1258 	push	hl
      0004BC C5                    1259 	push	bc
      0004BD E5                    1260 	push	hl
      0004BE CDr9Dr03              1261 	call	_get_bounce_off_dir_y
      0004C1 E8 02                 1262 	add	sp, #2
      0004C3 21r01r00              1263 	ld	hl, #_ballspeedy
      0004C6 73                    1264 	ld	(hl), e
      0004C7 18 25                 1265 	jr	00107$
      0004C9                       1266 00106$:
                                   1267 ;main.c:87: } else if(hits_paddle(nextballposx, nextballposy, pcpu)) {
      0004C9 F8 04                 1268 	ldhl	sp,	#4
      0004CB 2A                    1269 	ld	a, (hl+)
      0004CC 66                    1270 	ld	h, (hl)
      0004CD 6F                    1271 	ld	l, a
      0004CE E5                    1272 	push	hl
      0004CF C5                    1273 	push	bc
      0004D0 CDr86r02              1274 	call	_hits_paddle
      0004D3 E8 04                 1275 	add	sp, #4
      0004D5 7B                    1276 	ld	a, e
      0004D6 B7                    1277 	or	a, a
      0004D7 28 15                 1278 	jr	Z, 00107$
                                   1279 ;main.c:88: ballspeedx *= -1;
      0004D9 AF                    1280 	xor	a, a
      0004DA 21r00r00              1281 	ld	hl, #_ballspeedx
      0004DD 96                    1282 	sub	a, (hl)
      0004DE 77                    1283 	ld	(hl), a
                                   1284 ;main.c:89: ballspeedy = get_bounce_off_dir_y(pcpu);
      0004DF F8 04                 1285 	ldhl	sp,	#4
      0004E1 2A                    1286 	ld	a, (hl+)
      0004E2 66                    1287 	ld	h, (hl)
      0004E3 6F                    1288 	ld	l, a
      0004E4 E5                    1289 	push	hl
      0004E5 CDr9Dr03              1290 	call	_get_bounce_off_dir_y
      0004E8 E8 02                 1291 	add	sp, #2
      0004EA 21r01r00              1292 	ld	hl, #_ballspeedy
      0004ED 73                    1293 	ld	(hl), e
      0004EE                       1294 00107$:
                                   1295 ;main.c:91: ballposx += ballspeedx;
      0004EE FAr02r00              1296 	ld	a, (#_ballposx)
      0004F1 21r00r00              1297 	ld	hl, #_ballspeedx
      0004F4 86                    1298 	add	a, (hl)
      0004F5 EAr02r00              1299 	ld	(#_ballposx),a
                                   1300 ;main.c:92: ballposy += ballspeedy;
      0004F8 FAr03r00              1301 	ld	a, (#_ballposy)
      0004FB 21r01r00              1302 	ld	hl, #_ballspeedy
      0004FE 86                    1303 	add	a, (hl)
      0004FF EAr03r00              1304 	ld	(#_ballposy),a
                                   1305 ;main.c:93: scroll_sprite(0, ballspeedx, ballspeedy);
      000502 21r01r00              1306 	ld	hl, #_ballspeedy
      000505 56                    1307 	ld	d, (hl)
      000506 21r00r00              1308 	ld	hl, #_ballspeedx
      000509 5E                    1309 	ld	e, (hl)
                                   1310 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      00050A 01r00r00              1311 	ld	bc, #_shadow_OAM+0
                                   1312 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      00050D 0A                    1313 	ld	a, (bc)
      00050E 82                    1314 	add	a, d
      00050F 02                    1315 	ld	(bc), a
      000510 03                    1316 	inc	bc
      000511 0A                    1317 	ld	a, (bc)
      000512 83                    1318 	add	a, e
      000513 02                    1319 	ld	(bc), a
                                   1320 ;main.c:93: scroll_sprite(0, ballspeedx, ballspeedy);
                                   1321 ;main.c:94: }
      000514 C9                    1322 	ret
                                   1323 ;main.c:96: void init_paddle(Paddle * pdl, UINT8 firsttilenum,UINT8 posx, UINT8 posy) {
                                   1324 ;	---------------------------------
                                   1325 ; Function init_paddle
                                   1326 ; ---------------------------------
      000515                       1327 _init_paddle::
      000515 E8 FB                 1328 	add	sp, #-5
                                   1329 ;main.c:99: pdl->x = posx;
      000517 F8 07                 1330 	ldhl	sp,#7
      000519 2A                    1331 	ld	a, (hl+)
      00051A 5F                    1332 	ld	e, a
      00051B 2A                    1333 	ld	a, (hl+)
      00051C 57                    1334 	ld	d, a
      00051D 23                    1335 	inc	hl
      00051E 7E                    1336 	ld	a, (hl)
      00051F 12                    1337 	ld	(de), a
                                   1338 ;main.c:100: pdl->y = posy;
      000520 4B                    1339 	ld	c, e
      000521 42                    1340 	ld	b, d
      000522 03                    1341 	inc	bc
      000523 23                    1342 	inc	hl
      000524 7E                    1343 	ld	a, (hl)
      000525 02                    1344 	ld	(bc), a
                                   1345 ;main.c:101: pdl->firsttile = firsttilenum;
      000526 13                    1346 	inc	de
      000527 13                    1347 	inc	de
      000528 2B                    1348 	dec	hl
      000529 2B                    1349 	dec	hl
      00052A 7E                    1350 	ld	a, (hl)
      00052B 12                    1351 	ld	(de), a
                                   1352 ;main.c:103: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      00052C 21r06r00              1353 	ld	hl, #_padheight
      00052F 4E                    1354 	ld	c, (hl)
      000530 06 00                 1355 	ld	b, #0x00
      000532 0B                    1356 	dec	bc
                                   1357 ;main.c:104: set_sprite_tile(firsttilenum, 1);
      000533 F8 09                 1358 	ldhl	sp,	#9
      000535 5E                    1359 	ld	e, (hl)
                                   1360 ;main.c:103: if(padheight - 1 == 0) { // Paddle is made of 1 tile only
      000536 78                    1361 	ld	a, b
      000537 B1                    1362 	or	a, c
      000538 20 1C                 1363 	jr	NZ, 00102$
                                   1364 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      00053A 6B                    1365 	ld	l, e
      00053B 26 00                 1366 	ld	h, #0x00
      00053D 29                    1367 	add	hl, hl
      00053E 29                    1368 	add	hl, hl
      00053F 5D                    1369 	ld	e, l
      000540 54                    1370 	ld	d, h
      000541 21r02r00              1371 	ld	hl,#_shadow_OAM+1+1
      000544 19                    1372 	add	hl,de
      000545 36 01                 1373 	ld	(hl), #0x01
                                   1374 ;main.c:105: move_sprite(firsttilenum, posx, posy);
      000547 F8 0B                 1375 	ldhl	sp,	#11
      000549 3A                    1376 	ld	a, (hl-)
      00054A 47                    1377 	ld	b, a
      00054B 4E                    1378 	ld	c, (hl)
                                   1379 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00054C 21r00r00              1380 	ld	hl, #_shadow_OAM
      00054F 19                    1381 	add	hl, de
                                   1382 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000550 78                    1383 	ld	a, b
      000551 22                    1384 	ld	(hl+), a
      000552 71                    1385 	ld	(hl), c
                                   1386 ;main.c:106: return;
      000553 C3r25r06              1387 	jp	00115$
      000556                       1388 00102$:
                                   1389 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      000556 F8 00                 1390 	ldhl	sp,	#0
      000558 73                    1391 	ld	(hl), e
      000559 AF                    1392 	xor	a, a
      00055A 23                    1393 	inc	hl
      00055B 77                    1394 	ld	(hl), a
      00055C C1                    1395 	pop	bc
      00055D C5                    1396 	push	bc
      00055E CB 21                 1397 	sla	c
      000560 CB 10                 1398 	rl	b
      000562 CB 21                 1399 	sla	c
      000564 CB 10                 1400 	rl	b
      000566 21r02r00              1401 	ld	hl,#_shadow_OAM+1+1
      000569 09                    1402 	add	hl,bc
      00056A 36 02                 1403 	ld	(hl), #0x02
                                   1404 ;main.c:109: move_sprite(firsttilenum, posx, posy);
      00056C F8 0B                 1405 	ldhl	sp,	#11
      00056E 3A                    1406 	ld	a, (hl-)
      00056F 57                    1407 	ld	d, a
      000570 7E                    1408 	ld	a, (hl)
      000571 F8 02                 1409 	ldhl	sp,	#2
      000573 77                    1410 	ld	(hl), a
                                   1411 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000574 21r00r00              1412 	ld	hl, #_shadow_OAM
      000577 09                    1413 	add	hl, bc
      000578 4D                    1414 	ld	c, l
      000579 44                    1415 	ld	b, h
                                   1416 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00057A 7A                    1417 	ld	a, d
      00057B 02                    1418 	ld	(bc), a
      00057C 03                    1419 	inc	bc
      00057D F8 02                 1420 	ldhl	sp,	#2
      00057F 7E                    1421 	ld	a, (hl)
      000580 02                    1422 	ld	(bc), a
                                   1423 ;main.c:111: tileind = firsttilenum + 1;
      000581 7B                    1424 	ld	a, e
      000582 3C                    1425 	inc	a
      000583 EAr11r00              1426 	ld	(#_tileind),a
                                   1427 ;main.c:112: itr = 1;
      000586 21r13r00              1428 	ld	hl, #_itr
      000589 36 01                 1429 	ld	(hl), #0x01
                                   1430 ;main.c:113: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      00058B                       1431 00103$:
      00058B 21r06r00              1432 	ld	hl, #_padheight
      00058E 4E                    1433 	ld	c, (hl)
      00058F 06 00                 1434 	ld	b, #0x00
      000591 E1                    1435 	pop	hl
      000592 E5                    1436 	push	hl
      000593 09                    1437 	add	hl, bc
      000594 4D                    1438 	ld	c, l
      000595 44                    1439 	ld	b, h
      000596 0B                    1440 	dec	bc
      000597 FAr11r00              1441 	ld	a, (#_tileind)
      00059A F8 03                 1442 	ldhl	sp,	#3
      00059C 77                    1443 	ld	(hl), a
      00059D AF                    1444 	xor	a, a
      00059E 23                    1445 	inc	hl
      00059F 77                    1446 	ld	(hl), a
                                   1447 ;main.c:114: set_sprite_tile(tileind, 3);
      0005A0 21r11r00              1448 	ld	hl, #_tileind
      0005A3 5E                    1449 	ld	e, (hl)
                                   1450 ;main.c:113: while(tileind != firsttilenum + padheight - 1) { // Config tiles between the first and the last
      0005A4 F8 03                 1451 	ldhl	sp,	#3
      0005A6 7E                    1452 	ld	a, (hl)
      0005A7 91                    1453 	sub	a, c
      0005A8 20 05                 1454 	jr	NZ, 00133$
      0005AA 23                    1455 	inc	hl
      0005AB 7E                    1456 	ld	a, (hl)
      0005AC 90                    1457 	sub	a, b
      0005AD 28 36                 1458 	jr	Z, 00105$
      0005AF                       1459 00133$:
                                   1460 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0005AF 01r00r00              1461 	ld	bc, #_shadow_OAM+0
      0005B2 26 00                 1462 	ld	h, #0x00
      0005B4 6B                    1463 	ld	l, e
      0005B5 29                    1464 	add	hl, hl
      0005B6 29                    1465 	add	hl, hl
      0005B7 09                    1466 	add	hl, bc
      0005B8 23                    1467 	inc	hl
      0005B9 23                    1468 	inc	hl
      0005BA 36 03                 1469 	ld	(hl), #0x03
                                   1470 ;main.c:115: move_sprite(tileind, posx, posy + itr * 8);
      0005BC FAr13r00              1471 	ld	a, (#_itr)
      0005BF 87                    1472 	add	a, a
      0005C0 87                    1473 	add	a, a
      0005C1 87                    1474 	add	a, a
      0005C2 4A                    1475 	ld	c, d
      0005C3 81                    1476 	add	a, c
      0005C4 5F                    1477 	ld	e, a
      0005C5 21r11r00              1478 	ld	hl, #_tileind
      0005C8 4E                    1479 	ld	c, (hl)
                                   1480 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0005C9 26 00                 1481 	ld	h, #0x00
      0005CB 69                    1482 	ld	l, c
      0005CC 29                    1483 	add	hl, hl
      0005CD 29                    1484 	add	hl, hl
      0005CE 01r00r00              1485 	ld	bc, #_shadow_OAM
      0005D1 09                    1486 	add	hl, bc
      0005D2 4D                    1487 	ld	c, l
      0005D3 44                    1488 	ld	b, h
                                   1489 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0005D4 7B                    1490 	ld	a, e
      0005D5 02                    1491 	ld	(bc), a
      0005D6 03                    1492 	inc	bc
      0005D7 F8 02                 1493 	ldhl	sp,	#2
      0005D9 7E                    1494 	ld	a, (hl)
      0005DA 02                    1495 	ld	(bc), a
                                   1496 ;main.c:116: tileind++;
      0005DB 21r11r00              1497 	ld	hl, #_tileind
      0005DE 34                    1498 	inc	(hl)
                                   1499 ;main.c:117: itr++;
      0005DF 21r13r00              1500 	ld	hl, #_itr
      0005E2 34                    1501 	inc	(hl)
      0005E3 18 A6                 1502 	jr	00103$
      0005E5                       1503 00105$:
                                   1504 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0005E5 01r00r00              1505 	ld	bc, #_shadow_OAM+0
      0005E8 26 00                 1506 	ld	h, #0x00
      0005EA 6B                    1507 	ld	l, e
      0005EB 29                    1508 	add	hl, hl
      0005EC 29                    1509 	add	hl, hl
      0005ED 09                    1510 	add	hl, bc
      0005EE 23                    1511 	inc	hl
      0005EF 23                    1512 	inc	hl
      0005F0 36 02                 1513 	ld	(hl), #0x02
                                   1514 ;main.c:121: set_sprite_prop(tileind, 0x40); // Flip the last tile vertically
      0005F2 21r11r00              1515 	ld	hl, #_tileind
      0005F5 5E                    1516 	ld	e, (hl)
                                   1517 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1191: shadow_OAM[nb].prop=prop;
      0005F6 01r00r00              1518 	ld	bc, #_shadow_OAM+0
      0005F9 26 00                 1519 	ld	h, #0x00
      0005FB 6B                    1520 	ld	l, e
      0005FC 29                    1521 	add	hl, hl
      0005FD 29                    1522 	add	hl, hl
      0005FE 09                    1523 	add	hl, bc
      0005FF 23                    1524 	inc	hl
      000600 23                    1525 	inc	hl
      000601 23                    1526 	inc	hl
      000602 36 40                 1527 	ld	(hl), #0x40
                                   1528 ;main.c:122: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000604 FAr06r00              1529 	ld	a, (#_padheight)
      000607 3D                    1530 	dec	a
      000608 87                    1531 	add	a, a
      000609 87                    1532 	add	a, a
      00060A 87                    1533 	add	a, a
      00060B 82                    1534 	add	a, d
      00060C 4F                    1535 	ld	c, a
      00060D 21r11r00              1536 	ld	hl, #_tileind
      000610 46                    1537 	ld	b, (hl)
                                   1538 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      000611 26 00                 1539 	ld	h, #0x00
      000613 68                    1540 	ld	l, b
      000614 29                    1541 	add	hl, hl
      000615 29                    1542 	add	hl, hl
      000616 7D                    1543 	ld	a, l
      000617 C6r00                 1544 	add	a, #<(_shadow_OAM)
      000619 5F                    1545 	ld	e, a
      00061A 7C                    1546 	ld	a, h
      00061B CEs00                 1547 	adc	a, #>(_shadow_OAM)
      00061D 57                    1548 	ld	d, a
                                   1549 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      00061E 79                    1550 	ld	a, c
      00061F 12                    1551 	ld	(de), a
      000620 13                    1552 	inc	de
      000621 F8 02                 1553 	ldhl	sp,	#2
      000623 7E                    1554 	ld	a, (hl)
      000624 12                    1555 	ld	(de), a
                                   1556 ;main.c:122: move_sprite(tileind, posx, posy + (padheight - 1) * 8);
      000625                       1557 00115$:
                                   1558 ;main.c:124: }
      000625 E8 05                 1559 	add	sp, #5
      000627 C9                    1560 	ret
                                   1561 ;main.c:126: void scroll_paddle_tiles(Paddle * pdl, INT8 pdlsp) {
                                   1562 ;	---------------------------------
                                   1563 ; Function scroll_paddle_tiles
                                   1564 ; ---------------------------------
      000628                       1565 _scroll_paddle_tiles::
      000628 3B                    1566 	dec	sp
                                   1567 ;main.c:127: for(itr = 0; itr != padheight; itr++) {
      000629 21r13r00              1568 	ld	hl, #_itr
      00062C 36 00                 1569 	ld	(hl), #0x00
      00062E F8 05                 1570 	ldhl	sp,	#5
      000630 7E                    1571 	ld	a, (hl)
      000631 F8 00                 1572 	ldhl	sp,	#0
      000633 77                    1573 	ld	(hl), a
      000634 F8 03                 1574 	ldhl	sp,#3
      000636 2A                    1575 	ld	a, (hl+)
      000637 5F                    1576 	ld	e, a
      000638 56                    1577 	ld	d, (hl)
      000639 13                    1578 	inc	de
      00063A 13                    1579 	inc	de
      00063B                       1580 00104$:
      00063B FAr13r00              1581 	ld	a, (#_itr)
      00063E 21r06r00              1582 	ld	hl, #_padheight
      000641 96                    1583 	sub	a, (hl)
      000642 28 1F                 1584 	jr	Z, 00106$
                                   1585 ;main.c:128: scroll_sprite(pdl->firsttile + itr, 0, pdlsp);
      000644 1A                    1586 	ld	a, (de)
      000645 21r13r00              1587 	ld	hl, #_itr
      000648 86                    1588 	add	a, (hl)
      000649 4F                    1589 	ld	c, a
                                   1590 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1234: OAM_item_t * itm = &shadow_OAM[nb];
      00064A 26 00                 1591 	ld	h, #0x00
      00064C 69                    1592 	ld	l, c
      00064D 29                    1593 	add	hl, hl
      00064E 29                    1594 	add	hl, hl
      00064F 01r00r00              1595 	ld	bc, #_shadow_OAM
      000652 09                    1596 	add	hl, bc
      000653 4D                    1597 	ld	c, l
      000654 44                    1598 	ld	b, h
                                   1599 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1235: itm->y+=y, itm->x+=x;
      000655 0A                    1600 	ld	a, (bc)
      000656 F8 00                 1601 	ldhl	sp,	#0
      000658 86                    1602 	add	a, (hl)
      000659 02                    1603 	ld	(bc), a
      00065A 03                    1604 	inc	bc
      00065B 0A                    1605 	ld	a, (bc)
      00065C 02                    1606 	ld	(bc), a
                                   1607 ;main.c:127: for(itr = 0; itr != padheight; itr++) {
      00065D 21r13r00              1608 	ld	hl, #_itr
      000660 34                    1609 	inc	(hl)
      000661 18 D8                 1610 	jr	00104$
      000663                       1611 00106$:
                                   1612 ;main.c:130: }
      000663 33                    1613 	inc	sp
      000664 C9                    1614 	ret
                                   1615 ;main.c:132: void move_paddle(Paddle * pdl, INT8 pdlspd) {
                                   1616 ;	---------------------------------
                                   1617 ; Function move_paddle
                                   1618 ; ---------------------------------
      000665                       1619 _move_paddle::
      000665 E8 F7                 1620 	add	sp, #-9
                                   1621 ;main.c:133: UINT8 nextpdly = pdl->y + pdlspd;
      000667 F8 0B                 1622 	ldhl	sp,	#11
      000669 2A                    1623 	ld	a, (hl+)
      00066A 5E                    1624 	ld	e, (hl)
      00066B F8 00                 1625 	ldhl	sp,	#0
      00066D 22                    1626 	ld	(hl+), a
      00066E 73                    1627 	ld	(hl), e
      00066F C1                    1628 	pop	bc
      000670 C5                    1629 	push	bc
      000671 03                    1630 	inc	bc
      000672 0A                    1631 	ld	a, (bc)
      000673 F8 0D                 1632 	ldhl	sp,	#13
      000675 86                    1633 	add	a, (hl)
      000676 57                    1634 	ld	d, a
                                   1635 ;main.c:134: if(!hits_walls(nextpdly, padheight * 8)) {
      000677 FAr06r00              1636 	ld	a, (#_padheight)
      00067A 87                    1637 	add	a, a
      00067B 87                    1638 	add	a, a
      00067C 87                    1639 	add	a, a
      00067D C5                    1640 	push	bc
      00067E F5                    1641 	push	af
      00067F 33                    1642 	inc	sp
      000680 D5                    1643 	push	de
      000681 33                    1644 	inc	sp
      000682 CDr4Dr02              1645 	call	_hits_walls
      000685 E8 02                 1646 	add	sp, #2
      000687 7B                    1647 	ld	a, e
      000688 C1                    1648 	pop	bc
      000689 B7                    1649 	or	a, a
      00068A 20 1A                 1650 	jr	NZ, 00105$
                                   1651 ;main.c:135: scroll_paddle_tiles(pdl, pdlspd);
      00068C C5                    1652 	push	bc
      00068D F8 0F                 1653 	ldhl	sp,	#15
      00068F 7E                    1654 	ld	a, (hl)
      000690 F5                    1655 	push	af
      000691 33                    1656 	inc	sp
      000692 F8 03                 1657 	ldhl	sp,	#3
      000694 2A                    1658 	ld	a, (hl+)
      000695 66                    1659 	ld	h, (hl)
      000696 6F                    1660 	ld	l, a
      000697 E5                    1661 	push	hl
      000698 CDr28r06              1662 	call	_scroll_paddle_tiles
      00069B E8 03                 1663 	add	sp, #3
      00069D C1                    1664 	pop	bc
                                   1665 ;main.c:136: pdl->y += pdlspd;
      00069E 0A                    1666 	ld	a, (bc)
      00069F F8 0D                 1667 	ldhl	sp,	#13
      0006A1 86                    1668 	add	a, (hl)
      0006A2 02                    1669 	ld	(bc), a
      0006A3 C3r3Br07              1670 	jp	00107$
      0006A6                       1671 00105$:
                                   1672 ;main.c:137: } else if(pdl->y > bkgborderup || pdl->y + padheight * 8 < bkgborderdown) {
      0006A6 0A                    1673 	ld	a, (bc)
      0006A7 F8 02                 1674 	ldhl	sp,	#2
      0006A9 77                    1675 	ld	(hl), a
      0006AA FAr4Br02              1676 	ld	a, (#_bkgborderup)
      0006AD F8 03                 1677 	ldhl	sp,	#3
      0006AF 77                    1678 	ld	(hl), a
      0006B0 FAr4Cr02              1679 	ld	a, (#_bkgborderdown)
      0006B3 F8 04                 1680 	ldhl	sp,	#4
      0006B5 32                    1681 	ld	(hl-), a
      0006B6 3A                    1682 	ld	a, (hl-)
      0006B7 96                    1683 	sub	a, (hl)
      0006B8 38 51                 1684 	jr	C, 00101$
      0006BA 7E                    1685 	ld	a, (hl)
      0006BB F8 07                 1686 	ldhl	sp,	#7
      0006BD 77                    1687 	ld	(hl), a
      0006BE AF                    1688 	xor	a, a
      0006BF 23                    1689 	inc	hl
      0006C0 77                    1690 	ld	(hl), a
      0006C1 21r06r00              1691 	ld	hl, #_padheight
      0006C4 5E                    1692 	ld	e, (hl)
      0006C5 16 00                 1693 	ld	d, #0x00
      0006C7 7B                    1694 	ld	a, e
      0006C8 87                    1695 	add	a, a
      0006C9 CB 12                 1696 	rl	d
      0006CB 87                    1697 	add	a, a
      0006CC CB 12                 1698 	rl	d
      0006CE 87                    1699 	add	a, a
      0006CF CB 12                 1700 	rl	d
                                   1701 ;c
      0006D1 5F                    1702 	ld	e, a
      0006D2 F8 07                 1703 	ldhl	sp,	#7
      0006D4 2A                    1704 	ld	a, (hl+)
      0006D5 66                    1705 	ld	h, (hl)
      0006D6 6F                    1706 	ld	l, a
      0006D7 19                    1707 	add	hl, de
      0006D8 E5                    1708 	push	hl
      0006D9 7D                    1709 	ld	a, l
      0006DA F8 07                 1710 	ldhl	sp,	#7
      0006DC 77                    1711 	ld	(hl), a
      0006DD E1                    1712 	pop	hl
      0006DE 7C                    1713 	ld	a, h
      0006DF F8 06                 1714 	ldhl	sp,	#6
      0006E1 32                    1715 	ld	(hl-), a
      0006E2 2B                    1716 	dec	hl
      0006E3 7E                    1717 	ld	a, (hl)
      0006E4 F8 07                 1718 	ldhl	sp,	#7
      0006E6 77                    1719 	ld	(hl), a
      0006E7 AF                    1720 	xor	a, a
      0006E8 23                    1721 	inc	hl
      0006E9 77                    1722 	ld	(hl), a
      0006EA F8 05                 1723 	ldhl	sp,	#5
      0006EC 5D                    1724 	ld	e, l
      0006ED 54                    1725 	ld	d, h
      0006EE F8 07                 1726 	ldhl	sp,	#7
      0006F0 1A                    1727 	ld	a, (de)
      0006F1 96                    1728 	sub	a, (hl)
      0006F2 23                    1729 	inc	hl
      0006F3 13                    1730 	inc	de
      0006F4 1A                    1731 	ld	a, (de)
      0006F5 9E                    1732 	sbc	a, (hl)
      0006F6 1A                    1733 	ld	a, (de)
      0006F7 57                    1734 	ld	d, a
      0006F8 5E                    1735 	ld	e, (hl)
      0006F9 CB 7B                 1736 	bit	7, e
      0006FB 28 07                 1737 	jr	Z, 00127$
      0006FD CB 7A                 1738 	bit	7, d
      0006FF 20 08                 1739 	jr	NZ, 00128$
      000701 BF                    1740 	cp	a, a
      000702 18 05                 1741 	jr	00128$
      000704                       1742 00127$:
      000704 CB 7A                 1743 	bit	7, d
      000706 28 01                 1744 	jr	Z, 00128$
      000708 37                    1745 	scf
      000709                       1746 00128$:
      000709 30 30                 1747 	jr	NC, 00107$
      00070B                       1748 00101$:
                                   1749 ;main.c:139: UINT8 adjspd = pdlspd < 0 ? bkgborderup - pdl->y : bkgborderdown - (pdl->y + padheight * 8);
      00070B F8 0D                 1750 	ldhl	sp,	#13
      00070D CB 7E                 1751 	bit	7, (hl)
      00070F 28 06                 1752 	jr	Z, 00109$
      000711 F8 03                 1753 	ldhl	sp,	#3
      000713 3A                    1754 	ld	a, (hl-)
      000714 96                    1755 	sub	a, (hl)
      000715 18 0F                 1756 	jr	00110$
      000717                       1757 00109$:
      000717 FAr06r00              1758 	ld	a, (#_padheight)
      00071A 87                    1759 	add	a, a
      00071B 87                    1760 	add	a, a
      00071C 87                    1761 	add	a, a
      00071D F8 02                 1762 	ldhl	sp,	#2
      00071F 5E                    1763 	ld	e, (hl)
      000720 83                    1764 	add	a, e
      000721 5F                    1765 	ld	e, a
      000722 23                    1766 	inc	hl
      000723 23                    1767 	inc	hl
      000724 7E                    1768 	ld	a, (hl)
      000725 93                    1769 	sub	a, e
      000726                       1770 00110$:
      000726 57                    1771 	ld	d, a
                                   1772 ;main.c:140: scroll_paddle_tiles(pdl, adjspd);
      000727 C5                    1773 	push	bc
      000728 D5                    1774 	push	de
      000729 D5                    1775 	push	de
      00072A 33                    1776 	inc	sp
      00072B F8 05                 1777 	ldhl	sp,	#5
      00072D 2A                    1778 	ld	a, (hl+)
      00072E 66                    1779 	ld	h, (hl)
      00072F 6F                    1780 	ld	l, a
      000730 E5                    1781 	push	hl
      000731 CDr28r06              1782 	call	_scroll_paddle_tiles
      000734 E8 03                 1783 	add	sp, #3
      000736 D1                    1784 	pop	de
      000737 C1                    1785 	pop	bc
                                   1786 ;main.c:141: pdl->y += adjspd;
      000738 0A                    1787 	ld	a, (bc)
      000739 82                    1788 	add	a, d
      00073A 02                    1789 	ld	(bc), a
      00073B                       1790 00107$:
                                   1791 ;main.c:143: }
      00073B E8 09                 1792 	add	sp, #9
      00073D C9                    1793 	ret
                                   1794 ;main.c:145: void action_cpu() {
                                   1795 ;	---------------------------------
                                   1796 ; Function action_cpu
                                   1797 ; ---------------------------------
      00073E                       1798 _action_cpu::
      00073E 3B                    1799 	dec	sp
                                   1800 ;main.c:146: if(ballposx > difficulty_px[difficulty]) {
      00073F 01r41r02              1801 	ld	bc, #_difficulty_px+0
      000742 79                    1802 	ld	a, c
      000743 21r12r00              1803 	ld	hl, #_difficulty
      000746 86                    1804 	add	a, (hl)
      000747 4F                    1805 	ld	c, a
      000748 30 01                 1806 	jr	NC, 00117$
      00074A 04                    1807 	inc	b
      00074B                       1808 00117$:
      00074B 0A                    1809 	ld	a, (bc)
      00074C 21r02r00              1810 	ld	hl, #_ballposx
      00074F 96                    1811 	sub	a, (hl)
      000750 30 27                 1812 	jr	NC, 00103$
                                   1813 ;main.c:147: move_paddle(&pdlcpu, pdlcpu.y < ballposy ? padspeed : -padspeed);
      000752 FAr0Fr00              1814 	ld	a, (#_pdlcpu + 1)
      000755 21r03r00              1815 	ld	hl, #_ballposy
      000758 96                    1816 	sub	a, (hl)
      000759 30 08                 1817 	jr	NC, 00105$
      00075B FAr07r00              1818 	ld	a, (#_padspeed)
      00075E F8 00                 1819 	ldhl	sp,	#0
      000760 77                    1820 	ld	(hl), a
      000761 18 08                 1821 	jr	00106$
      000763                       1822 00105$:
      000763 AF                    1823 	xor	a, a
      000764 21r07r00              1824 	ld	hl, #_padspeed
      000767 96                    1825 	sub	a, (hl)
      000768 F8 00                 1826 	ldhl	sp,	#0
      00076A 77                    1827 	ld	(hl), a
      00076B                       1828 00106$:
      00076B F8 00                 1829 	ldhl	sp,	#0
      00076D 7E                    1830 	ld	a, (hl)
      00076E F5                    1831 	push	af
      00076F 33                    1832 	inc	sp
      000770 21r0Er00              1833 	ld	hl, #_pdlcpu
      000773 E5                    1834 	push	hl
      000774 CDr65r06              1835 	call	_move_paddle
      000777 E8 03                 1836 	add	sp, #3
      000779                       1837 00103$:
                                   1838 ;main.c:149: }
      000779 33                    1839 	inc	sp
      00077A C9                    1840 	ret
                                   1841 ;main.c:151: void init_playfield() {
                                   1842 ;	---------------------------------
                                   1843 ; Function init_playfield
                                   1844 ; ---------------------------------
      00077B                       1845 _init_playfield::
                                   1846 ;main.c:152: set_bkg_data(0, 7, pongbkgtiles);
      00077B 21r19r00              1847 	ld	hl, #_pongbkgtiles
      00077E E5                    1848 	push	hl
      00077F 3E 07                 1849 	ld	a, #0x07
      000781 F5                    1850 	push	af
      000782 33                    1851 	inc	sp
      000783 AF                    1852 	xor	a, a
      000784 F5                    1853 	push	af
      000785 33                    1854 	inc	sp
      000786 CDr00r00              1855 	call	_set_bkg_data
      000789 E8 04                 1856 	add	sp, #4
                                   1857 ;main.c:153: set_bkg_tiles(0, 0, 20, 18, ponggamemap);
      00078B 21r89r00              1858 	ld	hl, #_ponggamemap
      00078E E5                    1859 	push	hl
      00078F 11 14 12              1860 	ld	de, #0x1214
      000792 D5                    1861 	push	de
      000793 AF                    1862 	xor	a, a
      000794 F5                    1863 	push	af
      000795 33                    1864 	inc	sp
      000796 AF                    1865 	xor	a, a
      000797 F5                    1866 	push	af
      000798 33                    1867 	inc	sp
      000799 CDr00r00              1868 	call	_set_bkg_tiles
      00079C E8 06                 1869 	add	sp, #6
                                   1870 ;main.c:155: set_sprite_data(0, 5, pongspritetiles);
      00079E 21rF1r01              1871 	ld	hl, #_pongspritetiles
      0007A1 E5                    1872 	push	hl
      0007A2 3E 05                 1873 	ld	a, #0x05
      0007A4 F5                    1874 	push	af
      0007A5 33                    1875 	inc	sp
      0007A6 AF                    1876 	xor	a, a
      0007A7 F5                    1877 	push	af
      0007A8 33                    1878 	inc	sp
      0007A9 CDr00r00              1879 	call	_set_sprite_data
      0007AC E8 04                 1880 	add	sp, #4
                                   1881 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1145: shadow_OAM[nb].tile=tile;
      0007AE 21r02r00              1882 	ld	hl, #(_shadow_OAM + 0x0002)
      0007B1 36 04                 1883 	ld	(hl), #0x04
                                   1884 ;main.c:157: move_sprite(0, ballposx, ballposy); // Move ball to the middle of the playing field
      0007B3 21r03r00              1885 	ld	hl, #_ballposy
      0007B6 46                    1886 	ld	b, (hl)
      0007B7 21r02r00              1887 	ld	hl, #_ballposx
      0007BA 4E                    1888 	ld	c, (hl)
                                   1889 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      0007BB 21r00r00              1890 	ld	hl, #_shadow_OAM
                                   1891 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      0007BE 78                    1892 	ld	a, b
      0007BF 22                    1893 	ld	(hl+), a
      0007C0 71                    1894 	ld	(hl), c
                                   1895 ;main.c:161: UINT8 padinity = 16 + (144 - (padheight * 8)) / 2;
      0007C1 21r06r00              1896 	ld	hl, #_padheight
      0007C4 6E                    1897 	ld	l, (hl)
      0007C5 26 00                 1898 	ld	h, #0x00
      0007C7 29                    1899 	add	hl, hl
      0007C8 29                    1900 	add	hl, hl
      0007C9 29                    1901 	add	hl, hl
      0007CA 3E 90                 1902 	ld	a, #0x90
      0007CC 95                    1903 	sub	a, l
      0007CD 6F                    1904 	ld	l, a
      0007CE 3E 00                 1905 	ld	a, #0x00
      0007D0 9C                    1906 	sbc	a, h
      0007D1 67                    1907 	ld	h, a
      0007D2 4D                    1908 	ld	c, l
      0007D3 44                    1909 	ld	b, h
      0007D4 CB 7C                 1910 	bit	7, h
      0007D6 28 03                 1911 	jr	Z, 00106$
      0007D8 23                    1912 	inc	hl
      0007D9 4D                    1913 	ld	c, l
      0007DA 44                    1914 	ld	b, h
      0007DB                       1915 00106$:
      0007DB CB 28                 1916 	sra	b
      0007DD CB 19                 1917 	rr	c
      0007DF 79                    1918 	ld	a, c
      0007E0 C6 10                 1919 	add	a, #0x10
      0007E2 47                    1920 	ld	b, a
                                   1921 ;main.c:162: init_paddle(&pdlpl1, 2, 16, padinity);
      0007E3 C5                    1922 	push	bc
      0007E4 C5                    1923 	push	bc
      0007E5 33                    1924 	inc	sp
      0007E6 11 02 10              1925 	ld	de, #0x1002
      0007E9 D5                    1926 	push	de
      0007EA 21r0Br00              1927 	ld	hl, #_pdlpl1
      0007ED E5                    1928 	push	hl
      0007EE CDr15r05              1929 	call	_init_paddle
      0007F1 E8 05                 1930 	add	sp, #5
      0007F3 C1                    1931 	pop	bc
                                   1932 ;main.c:163: init_paddle(&pdlcpu, pdlpl1.firsttile + padheight, 152, padinity);
      0007F4 FAr0Dr00              1933 	ld	a, (#(_pdlpl1 + 0x0002) + 0)
      0007F7 21r06r00              1934 	ld	hl, #_padheight
      0007FA 86                    1935 	add	a, (hl)
      0007FB 57                    1936 	ld	d, a
      0007FC 0E 98                 1937 	ld	c, #0x98
      0007FE C5                    1938 	push	bc
      0007FF D5                    1939 	push	de
      000800 33                    1940 	inc	sp
      000801 21r0Er00              1941 	ld	hl, #_pdlcpu
      000804 E5                    1942 	push	hl
      000805 CDr15r05              1943 	call	_init_paddle
      000808 E8 05                 1944 	add	sp, #5
                                   1945 ;main.c:164: set_pad_sectors();
      00080A CDr00r00              1946 	call	_set_pad_sectors
                                   1947 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1218: OAM_item_t * itm = &shadow_OAM[nb];
      00080D 21r04r00              1948 	ld	hl, #(_shadow_OAM + 0x0004)
                                   1949 ;C:/Game_Boy_Dev_Tools/gbdk/include/gb/gb.h:1219: itm->y=y, itm->x=x;
      000810 3E 50                 1950 	ld	a, #0x50
      000812 22                    1951 	ld	(hl+), a
      000813 36 18                 1952 	ld	(hl), #0x18
                                   1953 ;main.c:166: move_sprite(1, 24, 80);
                                   1954 ;main.c:167: }
      000815 C9                    1955 	ret
                                   1956 ;main.c:169: void begin_round() {
                                   1957 ;	---------------------------------
                                   1958 ; Function begin_round
                                   1959 ; ---------------------------------
      000816                       1960 _begin_round::
                                   1961 ;main.c:171: while(1) {  // When called regularly, initrand always returns the same values, idk why
      000816                       1962 00104$:
                                   1963 ;main.c:172: initrand(DIV_REG);
      000816 F0r00                 1964 	ldh	a, (_DIV_REG+0)
      000818 4F                    1965 	ld	c, a
      000819 06 00                 1966 	ld	b, #0x00
      00081B C5                    1967 	push	bc
      00081C CDr00r00              1968 	call	_initrand
      00081F E8 02                 1969 	add	sp, #2
                                   1970 ;main.c:173: if(joypad() & J_START) {
      000821 CDr00r00              1971 	call	_joypad
      000824 7B                    1972 	ld	a, e
      000825 07                    1973 	rlca
      000826 30 EE                 1974 	jr	NC, 00104$
                                   1975 ;main.c:178: randindx = rand() % 2; // Random number between 0 and 1
      000828 CDr00r00              1976 	call	_rand
      00082B 7B                    1977 	ld	a, e
      00082C 17                    1978 	rla
      00082D 9F                    1979 	sbc	a, a
      00082E 57                    1980 	ld	d, a
      00082F 21 02 00              1981 	ld	hl, #0x0002
      000832 E5                    1982 	push	hl
      000833 D5                    1983 	push	de
      000834 CDr00r00              1984 	call	__modsint
      000837 E8 04                 1985 	add	sp, #4
      000839 21r14r00              1986 	ld	hl, #_randindx
      00083C 73                    1987 	ld	(hl), e
                                   1988 ;main.c:179: initrand(DIV_REG);
      00083D F0r00                 1989 	ldh	a, (_DIV_REG+0)
      00083F 4F                    1990 	ld	c, a
      000840 06 00                 1991 	ld	b, #0x00
      000842 C5                    1992 	push	bc
      000843 CDr00r00              1993 	call	_initrand
      000846 E8 02                 1994 	add	sp, #2
                                   1995 ;main.c:180: randindy = rand() % 5; // Random number between 0 and 4
      000848 CDr00r00              1996 	call	_rand
      00084B 7B                    1997 	ld	a, e
      00084C 17                    1998 	rla
      00084D 9F                    1999 	sbc	a, a
      00084E 57                    2000 	ld	d, a
      00084F 21 05 00              2001 	ld	hl, #0x0005
      000852 E5                    2002 	push	hl
      000853 D5                    2003 	push	de
      000854 CDr00r00              2004 	call	__modsint
      000857 E8 04                 2005 	add	sp, #4
      000859 21r15r00              2006 	ld	hl, #_randindy
      00085C 73                    2007 	ld	(hl), e
                                   2008 ;main.c:181: ballspeedx = stspeedpoolx[randindx];
      00085D 01r44r02              2009 	ld	bc, #_stspeedpoolx+0
      000860 79                    2010 	ld	a, c
      000861 21r14r00              2011 	ld	hl, #_randindx
      000864 86                    2012 	add	a, (hl)
      000865 4F                    2013 	ld	c, a
      000866 30 01                 2014 	jr	NC, 00154$
      000868 04                    2015 	inc	b
      000869                       2016 00154$:
      000869 0A                    2017 	ld	a, (bc)
      00086A EAr00r00              2018 	ld	(#_ballspeedx),a
                                   2019 ;main.c:182: ballspeedy = stspeedpooly[randindy];
      00086D 01r46r02              2020 	ld	bc, #_stspeedpooly+0
      000870 79                    2021 	ld	a, c
      000871 21r15r00              2022 	ld	hl, #_randindy
      000874 86                    2023 	add	a, (hl)
      000875 4F                    2024 	ld	c, a
      000876 30 01                 2025 	jr	NC, 00155$
      000878 04                    2026 	inc	b
      000879                       2027 00155$:
      000879 0A                    2028 	ld	a, (bc)
      00087A EAr01r00              2029 	ld	(#_ballspeedy),a
                                   2030 ;main.c:184: while(1) {
      00087D                       2031 00112$:
                                   2032 ;main.c:185: framecnt += framecnt != ballmvframe ? 1 : -ballmvframe + 1; // Resetting the frame counter
      00087D FAr04r00              2033 	ld	a, (#_framecnt)
      000880 21r05r00              2034 	ld	hl, #_ballmvframe
      000883 96                    2035 	sub	a, (hl)
      000884 28 05                 2036 	jr	Z, 00116$
      000886 01 01 00              2037 	ld	bc, #0x0001
      000889 18 09                 2038 	jr	00117$
      00088B                       2039 00116$:
      00088B AF                    2040 	xor	a, a
      00088C 21r05r00              2041 	ld	hl, #_ballmvframe
      00088F 96                    2042 	sub	a, (hl)
      000890 4F                    2043 	ld	c, a
      000891 0C                    2044 	inc	c
      000892 79                    2045 	ld	a, c
      000893 17                    2046 	rla
      000894                       2047 00117$:
      000894 21r04r00              2048 	ld	hl, #_framecnt
      000897 7E                    2049 	ld	a, (hl)
      000898 81                    2050 	add	a, c
      000899 77                    2051 	ld	(hl), a
                                   2052 ;main.c:187: switch(joypad()) {
      00089A CDr00r00              2053 	call	_joypad
      00089D 7B                    2054 	ld	a, e
      00089E FE 04                 2055 	cp	a, #0x04
      0008A0 28 06                 2056 	jr	Z, 00106$
      0008A2 D6 08                 2057 	sub	a, #0x08
      0008A4 28 15                 2058 	jr	Z, 00107$
      0008A6 18 21                 2059 	jr	00108$
                                   2060 ;main.c:188: case J_UP:
      0008A8                       2061 00106$:
                                   2062 ;main.c:189: move_paddle(&pdlpl1, -padspeed);
      0008A8 AF                    2063 	xor	a, a
      0008A9 21r07r00              2064 	ld	hl, #_padspeed
      0008AC 96                    2065 	sub	a, (hl)
      0008AD 47                    2066 	ld	b, a
      0008AE C5                    2067 	push	bc
      0008AF 33                    2068 	inc	sp
      0008B0 21r0Br00              2069 	ld	hl, #_pdlpl1
      0008B3 E5                    2070 	push	hl
      0008B4 CDr65r06              2071 	call	_move_paddle
      0008B7 E8 03                 2072 	add	sp, #3
                                   2073 ;main.c:190: break;
      0008B9 18 0E                 2074 	jr	00108$
                                   2075 ;main.c:191: case J_DOWN:
      0008BB                       2076 00107$:
                                   2077 ;main.c:192: move_paddle(&pdlpl1, padspeed);
      0008BB FAr07r00              2078 	ld	a, (#_padspeed)
      0008BE F5                    2079 	push	af
      0008BF 33                    2080 	inc	sp
      0008C0 21r0Br00              2081 	ld	hl, #_pdlpl1
      0008C3 E5                    2082 	push	hl
      0008C4 CDr65r06              2083 	call	_move_paddle
      0008C7 E8 03                 2084 	add	sp, #3
                                   2085 ;main.c:194: }
      0008C9                       2086 00108$:
                                   2087 ;main.c:196: if(framecnt == ballmvframe) {
      0008C9 FAr04r00              2088 	ld	a, (#_framecnt)
      0008CC 21r05r00              2089 	ld	hl, #_ballmvframe
      0008CF 96                    2090 	sub	a, (hl)
      0008D0 20 0D                 2091 	jr	NZ, 00110$
                                   2092 ;main.c:197: move_ball(&pdlpl1, &pdlcpu);
      0008D2 21r0Er00              2093 	ld	hl, #_pdlcpu
      0008D5 E5                    2094 	push	hl
      0008D6 21r0Br00              2095 	ld	hl, #_pdlpl1
      0008D9 E5                    2096 	push	hl
      0008DA CDr7Ar04              2097 	call	_move_ball
      0008DD E8 04                 2098 	add	sp, #4
      0008DF                       2099 00110$:
                                   2100 ;main.c:200: action_cpu();
      0008DF CDr3Er07              2101 	call	_action_cpu
                                   2102 ;main.c:202: wait_vbl_done();
      0008E2 CDr00r00              2103 	call	_wait_vbl_done
                                   2104 ;main.c:204: }
      0008E5 18 96                 2105 	jr	00112$
                                   2106 ;main.c:206: void auto_speed_adj() {
                                   2107 ;	---------------------------------
                                   2108 ; Function auto_speed_adj
                                   2109 ; ---------------------------------
      0008E7                       2110 _auto_speed_adj::
                                   2111 ;main.c:208: }
      0008E7 C9                    2112 	ret
                                   2113 ;main.c:210: void manual_speed_adj() {
                                   2114 ;	---------------------------------
                                   2115 ; Function manual_speed_adj
                                   2116 ; ---------------------------------
      0008E8                       2117 _manual_speed_adj::
                                   2118 ;main.c:212: }
      0008E8 C9                    2119 	ret
                                   2120 ;main.c:214: void main() {
                                   2121 ;	---------------------------------
                                   2122 ; Function main
                                   2123 ; ---------------------------------
      0008E9                       2124 _main::
                                   2125 ;main.c:216: DISPLAY_ON;
      0008E9 F0r00                 2126 	ldh	a, (_LCDC_REG+0)
      0008EB F6 80                 2127 	or	a, #0x80
      0008ED E0r00                 2128 	ldh	(_LCDC_REG+0),a
                                   2129 ;main.c:217: SHOW_BKG;
      0008EF F0r00                 2130 	ldh	a, (_LCDC_REG+0)
      0008F1 F6 01                 2131 	or	a, #0x01
      0008F3 E0r00                 2132 	ldh	(_LCDC_REG+0),a
                                   2133 ;main.c:218: SHOW_SPRITES;
      0008F5 F0r00                 2134 	ldh	a, (_LCDC_REG+0)
      0008F7 F6 02                 2135 	or	a, #0x02
      0008F9 E0r00                 2136 	ldh	(_LCDC_REG+0),a
                                   2137 ;main.c:220: init_playfield();
      0008FB CDr7Br07              2138 	call	_init_playfield
                                   2139 ;main.c:221: begin_round();
                                   2140 ;main.c:225: }
      0008FE C3r16r08              2141 	jp  _begin_round
                                   2142 	.area _CODE
                                   2143 	.area _CABS (ABS)
